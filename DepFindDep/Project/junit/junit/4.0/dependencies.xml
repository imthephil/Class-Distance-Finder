<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE dependencies SYSTEM "http://depfind.sourceforge.net/dtd/dependencies.dtd">

<dependencies>
    <package confirmed="no">
        <name>java.io</name>
        <class confirmed="no">
            <name>java.io.BufferedReader</name>
            <feature confirmed="no">
                <name>java.io.BufferedReader.BufferedReader(java.io.Reader)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.BufferedReader.readLine()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.File</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            <feature confirmed="no">
                <name>java.io.File.File(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileInputStream</name>
            <feature confirmed="no">
                <name>java.io.FileInputStream.FileInputStream(java.io.File)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileOutputStream</name>
            <feature confirmed="no">
                <name>java.io.FileOutputStream.FileOutputStream(java.io.File)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.FileOutputStream.close()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.IOException</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.InputStream</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            <feature confirmed="no">
                <name>java.io.InputStream.close()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.InputStream.read()</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.OutputStream</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.PrintStream</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.Version.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.fWriter</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener(java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.fWriter</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.getWriter()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureTrace(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testIgnored(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <feature confirmed="no">
                <name>java.io.PrintStream.append(char)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testIgnored(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.print(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureTrace(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.println()</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.println(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.Version.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runFailed(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.PrintWriter</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
            <feature confirmed="no">
                <name>java.io.PrintWriter.PrintWriter(java.io.Writer)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintWriter.println(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.Reader</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.StringReader</name>
            <feature confirmed="no">
                <name>java.io.StringReader.StringReader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.StringWriter</name>
            <feature confirmed="no">
                <name>java.io.StringWriter.StringWriter()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.StringWriter.getBuffer()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.StringWriter.toString()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.Writer</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang</name>
        <class confirmed="no">
            <name>java.lang.AssertionError</name>
            <inbound type="class" confirmed="yes">junit.framework.AssertionFailedError</inbound>
            <inbound type="class" confirmed="yes">org.junit.ComparisonFailure</inbound>
            <feature confirmed="no">
                <name>java.lang.AssertionError.AssertionError()</name>
                <inbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.AssertionError.AssertionError(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.AssertionError.getMessage()</name>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getMessage()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Boolean</name>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</inbound>
            <feature confirmed="no">
                <name>java.lang.Boolean.valueOf(boolean)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Byte</name>
            <feature confirmed="no">
                <name>java.lang.Byte.Byte(byte)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Character</name>
            <feature confirmed="no">
                <name>java.lang.Character.Character(char)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, char, char)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Class</name>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fNewTestClass</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTestClass()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Test.expected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.fTestClass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.isPre4Test(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.ClassesRequest(java.lang.String, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.fClasses</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.ErrorReportingRequest(java.lang.Class, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.fClass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fAfterAnnotation</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fBeforeAnnotation</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fTestClass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateInstanceMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateStaticMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.asDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestClass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getTestClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fTestClass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.getTestClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.TestIntrospector(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.fTestClass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getSuperClasses(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTimeout(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isIgnored(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.runsTopToBottom(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectsException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.isUnexpected(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.classes(java.lang.String, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.errorReport(java.lang.Class, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.method(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.RunWith.value()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.AllTests(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.fKlass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.Parameterized(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite$SuiteClasses.value()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.Class.forName(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getConstructor(java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createTest()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getConstructors()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getDeclaredMethods()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getMethods()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getModifiers()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getName()</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getSuperclass()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getSuperClasses(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isArray()</name>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isAssignableFrom(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.isPre4Test(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.isUnexpected(java.lang.Throwable)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassNotFoundException</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <feature confirmed="no">
                <name>java.lang.ClassNotFoundException.getMessage()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Class[]</name>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Double</name>
            <feature confirmed="no">
                <name>java.lang.Double.Double(double)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Double.compare(double, double)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Exception</name>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.setUp()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.tearDown()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.setUp()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.tearDown()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(java.lang.reflect.Method)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.call()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testIgnored(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunFinished(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testIgnored(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testRunFinished(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.createTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.Parameterized(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.Exception.Exception()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore.BeforeAndAfterRunner$FailedBefore()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException.NoTestsRemainException()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Exception.Exception(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testAborted(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Exception.Exception(java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Exception.getMessage()</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Exception.toString()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Float</name>
            <feature confirmed="no">
                <name>java.lang.Float.Float(float)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Float.compare(float, float)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalAccessException</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.executeMethodBody()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</inbound>
            <feature confirmed="no">
                <name>java.lang.IllegalAccessException.fillInStackTrace()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.IllegalAccessException.toString()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalArgumentException</name>
            <feature confirmed="no">
                <name>java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.InstantiationException</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Integer</name>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</inbound>
            <feature confirmed="no">
                <name>java.lang.Integer.Integer(int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.parseInt(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.valueOf(int)</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.InterruptedException</name>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.waitUntilFinished()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Long</name>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <feature confirmed="no">
                <name>java.lang.Long.Long(long)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, long, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Long.valueOf(long)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Math</name>
            <feature confirmed="no">
                <name>java.lang.Math.abs(double)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Math.abs(float)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Math.max(int, int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Math.min(int, int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.NoSuchMethodException</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.NumberFormatException</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Object</name>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
            <inbound type="class" confirmed="yes">junit.extensions.TestSetup$1</inbound>
            <inbound type="class" confirmed="yes">junit.framework.Assert</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, char, char)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, long, long)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, short, short)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.ComparisonCompactor</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.areStringsEqual()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
            <inbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapter</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.JUnit4TestCaseFacade</inbound>
            <inbound type="class" confirmed="yes">junit.framework.Protectable</inbound>
            <inbound type="class" confirmed="yes">junit.framework.Test</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestFailure</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestListener</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestResult</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestResult$1</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.removeListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestSuite</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</inbound>
            <inbound type="class" confirmed="yes">junit.runner.BaseTestRunner</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</inbound>
            <inbound type="class" confirmed="yes">junit.runner.TestRunListener</inbound>
            <inbound type="class" confirmed="yes">junit.runner.Version</inbound>
            <inbound type="class" confirmed="yes">junit.textui.ResultPrinter</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="class" confirmed="yes">org.junit.After</inbound>
            <inbound type="class" confirmed="yes">org.junit.AfterClass</inbound>
            <inbound type="class" confirmed="yes">org.junit.Assert</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object[], java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.failSame(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.junit.Before</inbound>
            <inbound type="class" confirmed="yes">org.junit.BeforeClass</inbound>
            <inbound type="class" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.areStringsEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.junit.Ignore</inbound>
            <inbound type="class" confirmed="yes">org.junit.Test</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.CompositeRunner$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.Throwable[])</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.MethodValidator</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getSuperClasses(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.runsTopToBottom(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.call()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.executeMethodBody()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.Description</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.addChild(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.JUnitCore</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.Request</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.describe()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.Result</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.RunWith</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.Runner</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.manipulation.Filterable</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.manipulation.Sortable</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.Failure</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Parameterized$Parameters</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.createTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fParameters</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.eachOne(java.lang.Object[])</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Suite$SuiteClasses</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.Object.Object()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.Assert()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.JUnit4TestCaseFacade(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestResult, junit.framework.TestCase)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.BaseTestRunner()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.Version.Version()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.Assert()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.ComparisonFailure$ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.CompositeRunner$1(org.junit.internal.runners.CompositeRunner, org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.OldTestClassRunner$1(org.junit.internal.runners.OldTestClassRunner, org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.TestClassMethodsRunner$1(org.junit.internal.runners.TestClassMethodsRunner, org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.TestIntrospector(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.TestMethodRunner$1(org.junit.internal.runners.TestMethodRunner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.Request()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.Filter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.Sorter(java.util.Comparator)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.RunListener()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.RunNotifier()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.runsTopToBottom(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.getClass()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.asDescription(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.isUnexpected(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.notifyAll()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runFinished()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.toString()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.getName(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.wait()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.waitUntilFinished()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Object[]</name>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.RuntimeException</name>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.StoppedByUserException</inbound>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.StoppedByUserException.StoppedByUserException()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.run(junit.framework.TestResult)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Short</name>
            <feature confirmed="no">
                <name>java.lang.Short.Short(short)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, short, short)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.String</name>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(byte, byte)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(char, char)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(double, double, double)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(float, float, float)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(int, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, char, char)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, long, long)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, short, short)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(long, long)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(short, short)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertFalse(boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertFalse(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.fail()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.DELTA_END</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.DELTA_START</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.ELLIPSIS</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.areStringsEqual()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fActual</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fExpected</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonPrefix()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonSuffix()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fActual</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fExpected</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getActual()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getExpected()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.fName</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.getName()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.setName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.exceptionMessage()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.TestSuite$1(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.val$message</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.fName</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getName()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.setName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.SUITE_METHODNAME</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.elapsedTimeAsString(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.extractClassName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.filterLine(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.runFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.static {}</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testEnded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testStarted(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestRunListener.testEnded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestRunListener.testFailed(int, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestRunListener.testRunStarted(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestRunListener.testStarted(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.Version.id()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.Version.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.elapsedTimeAsString(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.testEnded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.testStarted(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(double, double, double)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(float, float, float)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object[], java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertFalse(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertFalse(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.fail()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.failSame(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.ComparisonFailure$ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.DELTA_END</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.DELTA_START</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.ELLIPSIS</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.areStringsEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fActual</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fExpected</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.fActual</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.fExpected</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getActual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getExpected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Ignore.value()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.ClassesRequest(java.lang.String, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.fName</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fName</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.asDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.getName(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testAborted(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testName(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.elapsedTimeAsString(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureTrace(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.fDisplayName</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.hashCode()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.getVersion()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.describe()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.classes(java.lang.String, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.method(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter$1.describe()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.describe()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTestHeader()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.String.charAt(int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.areStringsEqual()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.areStringsEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.format(java.lang.String, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.describe()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.hashCode()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.hashCode()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.indexOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.filterLine(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.lastIndexOf(int)</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.lastIndexOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.extractClassName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.length()</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.startsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.extractClassName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.extractClassName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int, int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.valueOf(int)</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.valueOf(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failSame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.StringBuffer</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.StringBuffer()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.append(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.toString()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.StringBuilder</name>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.failSame(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failSame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(int)</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failSame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.toString()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failSame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.System</name>
            <feature confirmed="no">
                <name>java.lang.System.currentTimeMillis()</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunFinished(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.err</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runFailed(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.exit(int)</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runFailed(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.killAllThreads(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.getProperty(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.in</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.out</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.Version.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Thread</name>
            <inbound type="class" confirmed="yes">junit.extensions.ActiveTestSuite$1</inbound>
            <feature confirmed="no">
                <name>java.lang.Thread.Thread()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.start()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ThreadDeath</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Throwable</name>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Protectable.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runBare()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.exceptionMessage()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.fThrownException</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.isFailure()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.thrownException()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="class" confirmed="yes">org.junit.Test$None</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.ErrorReportingRequest(java.lang.Class, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.fCause</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.ErrorReportingRunner(org.junit.runner.Description, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.fCause</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.Throwable[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testAborted(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.isUnexpected(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.errorReport(java.lang.Class, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.fThrownException</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.AllTests(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.Throwable.Throwable()</name>
                <inbound type="feature" confirmed="yes">org.junit.Test$None.Test$None()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Throwable.getCause()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Throwable.getMessage()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.exceptionMessage()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Throwable.printStackTrace(java.io.PrintWriter)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Throwable.toString()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Void</name>
            <feature confirmed="no">
                <name>java.lang.Void.TYPE</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.annotation</name>
        <class confirmed="no">
            <name>java.lang.annotation.Annotation</name>
            <inbound type="class" confirmed="yes">org.junit.After</inbound>
            <inbound type="class" confirmed="yes">org.junit.AfterClass</inbound>
            <inbound type="class" confirmed="yes">org.junit.Before</inbound>
            <inbound type="class" confirmed="yes">org.junit.BeforeClass</inbound>
            <inbound type="class" confirmed="yes">org.junit.Ignore</inbound>
            <inbound type="class" confirmed="yes">org.junit.Test</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTimeout(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isIgnored(java.lang.reflect.Method)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.RunWith</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Parameterized$Parameters</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Suite$SuiteClasses</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.annotation.Annotation.annotationType()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.reflect</name>
        <class confirmed="no">
            <name>java.lang.reflect.Constructor</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.createTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fConstructor</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.getParameterTypes()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.newInstance(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.createTest()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.InvocationTargetException</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.executeMethodBody()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.InvocationTargetException.fillInStackTrace()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.InvocationTargetException.getCause()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.InvocationTargetException.getTargetException()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Method</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testName(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTimeout(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isIgnored(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.executeMethodBody()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fMethod</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTimeout(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isIgnored(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getAnnotations()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getModifiers()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getName()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testName(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getParameterTypes()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getReturnType()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.executeMethodBody()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Modifier</name>
            <feature confirmed="no">
                <name>java.lang.reflect.Modifier.isPublic(int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Modifier.isStatic(int)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.text</name>
        <class confirmed="no">
            <name>java.text.NumberFormat</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.elapsedTimeAsString(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.elapsedTimeAsString(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.elapsedTimeAsString(long)</inbound>
            <feature confirmed="no">
                <name>java.text.NumberFormat.format(double)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.elapsedTimeAsString(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.elapsedTimeAsString(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.elapsedTimeAsString(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.text.NumberFormat.getInstance()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.elapsedTimeAsString(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.elapsedTimeAsString(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.elapsedTimeAsString(long)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util</name>
        <class confirmed="no">
            <name>java.util.ArrayList</name>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.addChild(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.fChildren</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.isTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList()</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getSuperClasses(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.RunNotifier()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.eachOne(java.lang.Object[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getSuperClasses(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.addChild(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.isEmpty()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.isTest()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.iterator()</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Arrays</name>
            <feature confirmed="no">
                <name>java.util.Arrays.asList(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.Throwable[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Collection</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.addAll(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.eachOne(java.lang.Object[])</inbound>
            <feature confirmed="no">
                <name>java.util.Collection.iterator()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Collections</name>
            <feature confirmed="no">
                <name>java.util.Collections.enumeration(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.reverse(java.util.List)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.sort(java.util.List, java.util.Comparator)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Comparator</name>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.SortingRequest(org.junit.runner.Request, java.util.Comparator)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.fComparator</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.getRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.CompositeRunner$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.sortWith(java.util.Comparator)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.Sorter(java.util.Comparator)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.fComparator</inbound>
            <feature confirmed="no">
                <name>java.util.Comparator.compare(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Enumeration</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.tests()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
            <feature confirmed="no">
                <name>java.util.Enumeration.hasMoreElements()</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Enumeration.nextElement()</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.HashMap</name>
            <inbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</inbound>
            <feature confirmed="no">
                <name>java.util.HashMap.HashMap()</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.JUnit4TestAdapterCache()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Iterator</name>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.util.Iterator.hasNext()</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Iterator.next()</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Iterator.remove()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.List</name>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.fErrors</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.fFailures</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.fListeners</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.removeListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.addAll(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getRunners()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.Throwable[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.fErrors</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.getCauses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.assertValid()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fErrors</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateAllMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestMethods</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.validate(org.junit.internal.runners.MethodValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getSuperClasses(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$6(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result.fFailures</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.RunNotifier()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.access$0(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fListeners</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)</inbound>
            <feature confirmed="no">
                <name>java.util.List.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.eachOne(java.lang.Object[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.addAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.addAll(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.contains(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.get(int)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.isEmpty()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.assertValid()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.iterator()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.remove(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.removeListener(junit.framework.TestListener)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.size()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.toArray(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Properties</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fPreferences</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreferences(java.util.Properties)</inbound>
            <feature confirmed="no">
                <name>java.util.Properties.Properties()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.Properties(java.util.Properties)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.getProperty(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.load(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.store(java.io.OutputStream, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Vector</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testCount()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.tests()</inbound>
            <feature confirmed="no">
                <name>java.util.Vector.Vector(int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.elements()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.tests()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.get(int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.iterator()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.size()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testCount()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.concurrent</name>
        <class confirmed="no">
            <name>java.util.concurrent.Callable</name>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.ExecutorService</name>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.ExecutorService.awaitTermination(long, java.util.concurrent.TimeUnit)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ExecutorService.shutdown()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ExecutorService.shutdownNow()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.Executors</name>
            <feature confirmed="no">
                <name>java.util.concurrent.Executors.newSingleThreadExecutor()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.Future</name>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.Future.get(long, java.util.concurrent.TimeUnit)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.TimeUnit</name>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.TimeUnit.MILLISECONDS</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.TimeoutException</name>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
        </class>
    </package>
    <package confirmed="yes">
        <name>junit.extensions</name>
        <class confirmed="yes">
            <name>junit.extensions.ActiveTestSuite</name>
            <outbound type="class" confirmed="yes">junit.framework.TestSuite</outbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.this$0</inbound>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.ActiveTestSuite()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.fActiveTestDeathCount</name>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runFinished()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.waitUntilFinished()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.run(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.fActiveTestDeathCount</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.waitUntilFinished()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.runFinished()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.notifyAll()</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.fActiveTestDeathCount</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="no">java.lang.Thread.start()</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
            </feature>
            <feature confirmed="no">
                <name>junit.extensions.ActiveTestSuite.testCount()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.waitUntilFinished()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.waitUntilFinished()</name>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.wait()</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.fActiveTestDeathCount</outbound>
                <outbound type="feature" confirmed="no">junit.extensions.ActiveTestSuite.testCount()</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.run(junit.framework.TestResult)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.extensions.ActiveTestSuite$1</name>
            <outbound type="class" confirmed="no">java.lang.Thread</outbound>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="no">java.lang.Thread.Thread()</outbound>
                <outbound type="class" confirmed="yes">junit.extensions.ActiveTestSuite</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$result</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite$1.run()</name>
                <outbound type="class" confirmed="yes">junit.extensions.ActiveTestSuite</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$result</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$test</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runFinished()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.extensions.ActiveTestSuite</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite$1.val$result</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite$1.val$test</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.extensions.RepeatedTest</name>
            <outbound type="class" confirmed="yes">junit.extensions.TestDecorator</outbound>
            <feature confirmed="yes">
                <name>junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.fTimesRepeat</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.RepeatedTest.countTestCases()</name>
                <outbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.fTimesRepeat</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.countTestCases()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.RepeatedTest.fTimesRepeat</name>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.RepeatedTest.run(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.fTimesRepeat</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.shouldStop()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.RepeatedTest.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.toString()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.extensions.TestDecorator</name>
            <outbound type="class" confirmed="yes">junit.framework.Assert</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            <inbound type="class" confirmed="yes">junit.extensions.RepeatedTest</inbound>
            <inbound type="class" confirmed="yes">junit.extensions.TestSetup</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.Assert()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.TestSetup(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.countTestCases()</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.countTestCases()</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.countTestCases()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.fTest</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.getTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.getTest()</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.run(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.toString()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.extensions.TestSetup</name>
            <outbound type="class" confirmed="yes">junit.extensions.TestDecorator</outbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.this$0</inbound>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup.TestSetup(junit.framework.Test)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="no">
                <name>junit.extensions.TestSetup.basicRun(junit.framework.TestResult)</name>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup.run(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Protectable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup.setUp()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup.tearDown()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.extensions.TestSetup$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Protectable</outbound>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.extensions.TestSetup</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.val$result</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup$1.protect()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">junit.extensions.TestSetup</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.val$result</outbound>
                <outbound type="feature" confirmed="no">junit.extensions.TestSetup.basicRun(junit.framework.TestResult)</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup.setUp()</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup.tearDown()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.extensions.TestSetup</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup$1.val$result</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>junit.framework</name>
        <class confirmed="yes">
            <name>junit.framework.Assert</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">junit.extensions.TestDecorator</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestCase</inbound>
            <feature confirmed="yes">
                <name>junit.framework.Assert.Assert()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(boolean, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(byte, byte)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(char, char)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, char, char)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(double, double, double)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(float, float, float)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(int, int)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</name>
                <outbound type="feature" confirmed="no">java.lang.Byte.Byte(byte)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(byte, byte)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, char, char)</name>
                <outbound type="feature" confirmed="no">java.lang.Character.Character(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(char, char)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</name>
                <outbound type="feature" confirmed="no">java.lang.Double.Double(double)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.compare(double, double)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.abs(double)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(double, double, double)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</name>
                <outbound type="feature" confirmed="no">java.lang.Float.Float(float)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Float.compare(float, float)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.abs(float)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(float, float, float)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, int, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.Integer(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, char, char)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, long, long)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, short, short)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, long, long)</name>
                <outbound type="feature" confirmed="no">java.lang.Long.Long(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(long, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, short, short)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Short.Short(short)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(short, short)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(long, long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, long, long)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(short, short)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, short, short)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertFalse(boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertFalse(java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertFalse(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertFalse(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNotNull(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNull(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertTrue(boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertTrue(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertFalse(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.fail()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.fail(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.fail()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.failSame(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.AssertionFailedError</name>
            <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
            <inbound type="class" confirmed="yes">junit.framework.ComparisonFailure</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.isFailure()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.AssertionFailedError.AssertionFailedError()</name>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.framework.AssertionFailedError.getMessage()</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.AssertionFailedError.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.ComparisonCompactor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.ComparisonCompactor(int, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fContextLength</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fExpected</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.DELTA_END</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.DELTA_START</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.ELLIPSIS</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.areStringsEqual()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fExpected</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.compact(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.areStringsEqual()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonPrefix()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonSuffix()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.compactString(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fPrefix</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fSuffix</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.computeCommonPrefix()</name>
                <outbound type="feature" confirmed="no">java.lang.Math.max(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fContextLength</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fPrefix</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.computeCommonSuffix()</name>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fContextLength</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fSuffix</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.fActual</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.areStringsEqual()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.fContextLength</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.fExpected</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.areStringsEqual()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.fPrefix</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.fSuffix</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.findCommonPrefix()</name>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fPrefix</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.findCommonSuffix()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fPrefix</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fSuffix</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.ComparisonFailure</name>
            <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fActual</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fExpected</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.MAX_CONTEXT_LENGTH</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.fActual</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getActual()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.fExpected</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getExpected()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.getActual()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fActual</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.getExpected()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fExpected</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.getMessage()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">junit.framework.AssertionFailedError.getMessage()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.ComparisonCompactor(int, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fActual</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fExpected</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.JUnit4TestAdapter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getDefault()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fNewTestClass</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fRunner</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.countTestCases()</name>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fRunner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.testCount()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.fCache</name>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.fNewTestClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTestClass()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.fRunner</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.getDescription()</name>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fRunner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.getTestClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fNewTestClass</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.getTests()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getDescription()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fRunner</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.run(org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fNewTestClass</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.JUnit4TestAdapterCache</name>
            <outbound type="class" confirmed="no">java.util.HashMap</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fCache</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.JUnit4TestAdapterCache$1(junit.framework.JUnit4TestAdapterCache, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.this$0</inbound>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.JUnit4TestAdapterCache()</name>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">junit.framework.JUnit4TestAdapterCache.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="no">junit.framework.JUnit4TestAdapterCache.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">junit.framework.JUnit4TestAdapterCache.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.isSuite()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.isTest()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.framework.JUnit4TestAdapterCache.containsKey(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.JUnit4TestCaseFacade(org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.isTest()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.fInstance</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getDefault()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.framework.JUnit4TestAdapterCache.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.getDefault()</name>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.fInstance</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</name>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapter</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.JUnit4TestAdapterCache$1(junit.framework.JUnit4TestAdapterCache, junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.RunNotifier()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.framework.JUnit4TestAdapterCache.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.static {}</name>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.JUnit4TestAdapterCache()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.fInstance</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.JUnit4TestAdapterCache$1</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache$1.JUnit4TestAdapterCache$1(junit.framework.JUnit4TestAdapterCache, junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.val$result</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.RunListener()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.val$result</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getDescription()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.val$result</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.val$result</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.JUnit4TestAdapterCache$1(junit.framework.JUnit4TestAdapterCache, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache$1.val$result</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.JUnit4TestAdapterCache$1(junit.framework.JUnit4TestAdapterCache, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.JUnit4TestCaseFacade</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.asDescription(junit.framework.Test)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestCaseFacade.JUnit4TestCaseFacade(org.junit.runner.Description)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.fDescription</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestCaseFacade.countTestCases()</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestCaseFacade.fDescription</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.JUnit4TestCaseFacade(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.getDescription()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestCaseFacade.getDescription()</name>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.fDescription</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.asDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestCaseFacade.run(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestCaseFacade.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.toString()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.Protectable</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">junit.extensions.TestSetup$1</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.run(junit.framework.TestResult)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestResult$1</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.Protectable.protect()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.Test</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$test</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</inbound>
            <inbound type="class" confirmed="yes">junit.extensions.TestDecorator</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.countTestCases()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.getTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.TestSetup(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.run(junit.framework.TestResult)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapter</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.JUnit4TestCaseFacade</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestCase</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.fFailedTest</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.failedTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestSuite</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runAndWait(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.asDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.getName(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.fTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.AllTests(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.Test.countTestCases()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Test.run(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestCase</name>
            <outbound type="class" confirmed="yes">junit.framework.Assert</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestResult, junit.framework.TestCase)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.val$test</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestSuite$1</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.isPre4Test(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.getName(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.TestCase()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.Assert()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.fName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.TestCase(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.Assert()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.fName</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.TestSuite$1(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.framework.TestCase.assertNotNull(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.countTestCases()</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.createResult()</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.fName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.getName()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.setName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.framework.TestCase.fail(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.getName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.fName</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.getName(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.run()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.createResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.run(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.runBare()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.setUp()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.tearDown()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.protect()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.runTest()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalAccessException.fillInStackTrace()</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.fillInStackTrace()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isPublic(int)</outbound>
                <outbound type="feature" confirmed="no">junit.framework.TestCase.assertNotNull(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.fName</outbound>
                <outbound type="feature" confirmed="no">junit.framework.TestCase.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runBare()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.setName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.fName</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.setUp()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runBare()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.tearDown()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runBare()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.getName()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestFailure</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefect(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fFailedTest</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fThrownException</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.exceptionMessage()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.thrownException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.fFailedTest</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.failedTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.fThrownException</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.thrownException()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.failedTest()</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fFailedTest</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.isFailure()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.thrownException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.thrownException()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fThrownException</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.exceptionMessage()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.isFailure()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fFailedTest</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fThrownException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.trace()</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.getBuffer()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.printStackTrace(java.io.PrintWriter)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.thrownException()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestListener</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.removeListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            <inbound type="class" confirmed="yes">junit.runner.BaseTestRunner</inbound>
            <inbound type="class" confirmed="yes">junit.textui.ResultPrinter</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.getListener(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.TestListener.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestListener.endTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestListener.startTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestResult</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$result</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.val$result</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.JUnit4TestAdapterCache$1(junit.framework.JUnit4TestAdapterCache, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.val$result</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.createResult()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestResult, junit.framework.TestCase)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.createTestResult()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runAndWait(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.TestResult()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fErrors</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fFailures</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fListeners</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fRunTests</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fStop</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.createResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.createTestResult()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestListener.addError(junit.framework.Test, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fErrors</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fFailures</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.addListener(junit.framework.TestListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fListeners</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.cloneListeners()</name>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fListeners</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.endTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestListener.endTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.errorCount()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fErrors</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.errors()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fErrors</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.fErrors</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.fFailures</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.fListeners</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.removeListener(junit.framework.TestListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.fRunTests</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.runCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.fStop</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.shouldStop()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.stop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.failureCount()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fFailures</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.failures()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fFailures</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.removeListener(junit.framework.TestListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.remove(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fListeners</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.run(junit.framework.TestCase)</name>
                <outbound type="class" confirmed="yes">junit.framework.Protectable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestResult, junit.framework.TestCase)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.runCount()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fRunTests</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</name>
                <outbound type="class" confirmed="no">java.lang.ThreadDeath</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Protectable</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Protectable.protect()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.shouldStop()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fStop</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.startTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.countTestCases()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestListener.startTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fRunTests</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.stop()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fStop</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.wasSuccessful()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestResult$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Protectable</outbound>
            <feature confirmed="yes">
                <name>junit.framework.TestResult$1.TestResult$1(junit.framework.TestResult, junit.framework.TestCase)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult$1.val$test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult$1.protect()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.runBare()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult$1.val$test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestResult, junit.framework.TestCase)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult$1.val$test</name>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestResult, junit.framework.TestCase)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.protect()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestSuite</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            <inbound type="class" confirmed="yes">junit.extensions.ActiveTestSuite</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.TestSuite()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.TestSuite(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getDeclaredMethods()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSuperclass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isPublic(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fName</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.setName(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.TestSuite(java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector(int)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[], java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.TestSuite(java.lang.Class[], java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.setName(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.TestSuite(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.setName(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.addTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestSuite(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.addTestSuite(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.countTestCases()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.iterator()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.countTestCases()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.getParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.setName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.toString()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.printStackTrace(java.io.PrintWriter)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.fName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getName()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.setName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.fTests</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.tests()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.getName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fName</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.getTestConstructor(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getConstructor(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isPublic(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.run(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.iterator()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.shouldStop()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.setName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fName</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.testAt(int)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.get(int)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.testCount()</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.tests()</name>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elements()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.toString()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.getName()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.warning(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite$1.TestSuite$1(java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestSuite$1</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite$1.TestSuite$1(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite$1.val$message</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.framework.TestSuite$1.fail(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.runTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite$1.runTest()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">junit.framework.TestSuite$1.fail(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite$1.val$message</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite$1.val$message</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.TestSuite$1(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.runTest()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>junit.runner</name>
        <class confirmed="yes">
            <name>junit.runner.BaseTestRunner</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
            <inbound type="class" confirmed="yes">junit.textui.TestRunner</inbound>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.BaseTestRunner()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fLoading</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.SUITE_METHODNAME</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.clearStatus()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.elapsedTimeAsString(long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.text.NumberFormat</outbound>
                <outbound type="feature" confirmed="no">java.text.NumberFormat.format(double)</outbound>
                <outbound type="feature" confirmed="no">java.text.NumberFormat.getInstance()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.endTest(junit.framework.Test)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testEnded(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.extractClassName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.fLoading</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.BaseTestRunner()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setLoading(boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.fPreferences</name>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreferences(java.util.Properties)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.fgFilterStack</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.fgMaxMessageLength</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.static {}</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.filterLine(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.io.BufferedReader.BufferedReader(java.io.Reader)</outbound>
                <outbound type="feature" confirmed="no">java.io.BufferedReader.readLine()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="feature" confirmed="no">java.io.StringReader.StringReader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.toString()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.filterLine(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.getBuffer()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.printStackTrace(java.io.PrintWriter)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getPreference(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.getProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.parseInt(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getPreferences()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.Properties()</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fPreferences</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getPreferencesFile()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getTest(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassNotFoundException.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalAccessException.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isStatic(int)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.clearStatus()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.runFailed(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.processArguments(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.extractClassName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fgFilterStack</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setLoading(boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.readPreferences()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileInputStream.FileInputStream(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.Properties(java.util.Properties)</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.load(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreferences(java.util.Properties)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.runFailed(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.savePreferences()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileOutputStream.FileOutputStream(java.io.File)</outbound>
                <outbound type="feature" confirmed="no">java.io.FileOutputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.store(java.io.OutputStream, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.setLoading(boolean)</name>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fLoading</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.setPreferences(java.util.Properties)</name>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fPreferences</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.showStackRaw()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fgFilterStack</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.startTest(junit.framework.Test)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testStarted(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.static {}</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fgFilterStack</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fgMaxMessageLength</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.testEnded(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.endTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.testStarted(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.truncate(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fgMaxMessageLength</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fLoading</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.TestRunListener</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.STATUS_ERROR</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.STATUS_FAILURE</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testEnded(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testFailed(int, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testRunEnded(long)</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testRunStarted(java.lang.String, int)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testRunStopped(long)</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testStarted(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.Version</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.runner.Version.Version()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.Version.id()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.Version.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.getVersion()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.Version.main(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.Version.id()</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>junit.textui</name>
        <class confirmed="yes">
            <name>junit.textui.ResultPrinter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.fPrinter</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.setPrinter(junit.textui.ResultPrinter)</inbound>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.fColumn</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.fWriter</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(java.io.PrintStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.elapsedTimeAsString(long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.text.NumberFormat</outbound>
                <outbound type="feature" confirmed="no">java.text.NumberFormat.format(double)</outbound>
                <outbound type="feature" confirmed="no">java.text.NumberFormat.getInstance()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.endTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.fColumn</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.fWriter</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.getWriter()</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.fWriter</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printDefect(junit.framework.TestFailure, int)</name>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.failedTest()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefect(junit.framework.TestFailure, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefect(junit.framework.TestFailure, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefect(junit.framework.TestFailure, int)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.runCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printHeader(long)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.elapsedTimeAsString(long)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printWaitPrompt()</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.startTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.fColumn</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.textui.TestRunner</name>
            <outbound type="class" confirmed="yes">junit.runner.BaseTestRunner</outbound>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.EXCEPTION_EXIT</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.FAILURE_EXIT</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.SUCCESS_EXIT</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.TestRunner()</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(java.io.PrintStream)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runAndWait(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.TestRunner(java.io.PrintStream)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</name>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.BaseTestRunner()</outbound>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.fPrinter</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(java.io.PrintStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.createTestResult()</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.doRun(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</name>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</outbound>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.createTestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.fPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runAndWait(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.textui.TestRunner.extractClassName(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.fPrinter</name>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.setPrinter(junit.textui.ResultPrinter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.textui.TestRunner.getTest(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.textui.TestRunner.loadSuiteClass(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.main(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.err</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.exit(int)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.pause(boolean)</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.in</outbound>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.fPrinter</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.run(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.run(junit.framework.Test)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.run(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.runAndWait(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.runFailed(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.err</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.exit(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</outbound>
                <outbound type="feature" confirmed="no">junit.textui.TestRunner.loadSuiteClass(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.setPrinter(junit.textui.ResultPrinter)</name>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.fPrinter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.start(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.err</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.Version.id()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</outbound>
                <outbound type="feature" confirmed="no">junit.textui.TestRunner.extractClassName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.textui.TestRunner.getTest(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.testEnded(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.testStarted(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit</name>
        <class confirmed="yes">
            <name>org.junit.After</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateInstanceMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.junit.AfterClass</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateStaticMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.junit.Assert</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.Assert.Assert()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertEquals(double, double, double)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, double, double, double)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertEquals(float, float, float)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, float, float, float)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertEquals(java.lang.Object[], java.lang.Object[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertEquals(java.lang.String, double, double, double)</name>
                <outbound type="feature" confirmed="no">java.lang.Double.Double(double)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.compare(double, double)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.abs(double)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(double, double, double)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertEquals(java.lang.String, float, float, float)</name>
                <outbound type="feature" confirmed="no">java.lang.Float.Float(float)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Float.compare(float, float)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.abs(float)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(float, float, float)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isArray()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object[]</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object[], java.lang.Object[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertFalse(boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertFalse(java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertFalse(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertFalse(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertNotNull(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotNull(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertNotSame(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.failSame(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertNull(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertNull(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertNull(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertNull(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertTrue(boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertTrue(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertFalse(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertNull(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.fail()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.fail(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.fail()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failSame(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.failSame(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.Before</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateInstanceMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.runsTopToBottom(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.junit.BeforeClass</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateStaticMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.runsTopToBottom(java.lang.Class)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.junit.ComparisonFailure</name>
            <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure.fActual</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure.fExpected</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure.MAX_CONTEXT_LENGTH</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure.fActual</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getActual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure.fExpected</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getExpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure.getActual()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure.fActual</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure.getExpected()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure.fExpected</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure.getMessage()</name>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.ComparisonFailure$ComparisonCompactor(int, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure.fActual</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure.fExpected</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.ComparisonFailure$ComparisonCompactor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.ComparisonFailure$ComparisonCompactor(int, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fContextLength</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fExpected</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.DELTA_END</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.DELTA_START</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.ELLIPSIS</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.areStringsEqual()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fExpected</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.areStringsEqual()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fPrefix</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fSuffix</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</name>
                <outbound type="feature" confirmed="no">java.lang.Math.max(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fContextLength</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fPrefix</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</name>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fContextLength</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fSuffix</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.fActual</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.ComparisonFailure$ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.areStringsEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.fContextLength</name>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.ComparisonFailure$ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.fExpected</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.ComparisonFailure$ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.areStringsEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.fPrefix</name>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.fSuffix</name>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</name>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fPrefix</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fPrefix</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fSuffix</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.Ignore</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isIgnored(java.lang.reflect.Method)</inbound>
            <feature confirmed="yes">
                <name>org.junit.Ignore.value()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.Test</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateInstanceMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTimeout(java.lang.reflect.Method)</inbound>
            <feature confirmed="yes">
                <name>org.junit.Test.expected()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Test.timeout()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTimeout(java.lang.reflect.Method)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.Test$None</name>
            <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</inbound>
            <feature confirmed="yes">
                <name>org.junit.Test$None.Test$None()</name>
                <outbound type="feature" confirmed="no">java.lang.Throwable.Throwable()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Test$None.serialVersionUID</name>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.internal.requests</name>
        <class confirmed="yes">
            <name>org.junit.internal.requests.ClassRequest</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.fTestClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.Request()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassRequest.fTestClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassRequest.getRunner()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getConstructor(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.fTestClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.errorReport(java.lang.Class, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.isPre4Test(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.OldTestClassRunner</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.RunWith</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.RunWith.value()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassRequest.isPre4Test(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.requests.ClassesRequest</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassesRequest.ClassesRequest(java.lang.String, java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.fClasses</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.fName</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.Request()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.classes(java.lang.String, java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassesRequest.fClasses</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.ClassesRequest(java.lang.String, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassesRequest.fName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.ClassesRequest(java.lang.String, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassesRequest.getRunner()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.fClasses</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.fName</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.requests.ErrorReportingRequest</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ErrorReportingRequest.ErrorReportingRequest(java.lang.Class, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.fCause</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.fClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.Request()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.errorReport(java.lang.Class, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ErrorReportingRequest.fCause</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.ErrorReportingRequest(java.lang.Class, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ErrorReportingRequest.fClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.ErrorReportingRequest(java.lang.Class, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getCause()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.getCauses()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ErrorReportingRequest.getRunner()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.fCause</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.fClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.ErrorReportingRunner(org.junit.runner.Description, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.requests.FilterRequest</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.FilterRequest.FilterRequest(org.junit.runner.Request, org.junit.runner.manipulation.Filter)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.fFilter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.fRequest</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.Request()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.FilterRequest.fFilter</name>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.FilterRequest(org.junit.runner.Request, org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.FilterRequest.fRequest</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.FilterRequest(org.junit.runner.Request, org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.FilterRequest.getRunner()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.fFilter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.fRequest</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.errorReport(java.lang.Class, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.apply(org.junit.runner.Runner)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.describe()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.requests.SortingRequest</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.SortingRequest.SortingRequest(org.junit.runner.Request, java.util.Comparator)</name>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.fComparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.fRequest</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.Request()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.sortWith(java.util.Comparator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.SortingRequest.fComparator</name>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.SortingRequest(org.junit.runner.Request, java.util.Comparator)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.SortingRequest.fRequest</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.SortingRequest(org.junit.runner.Request, java.util.Comparator)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.SortingRequest.getRunner()</name>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.fComparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.fRequest</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.Sorter(java.util.Comparator)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.apply(org.junit.runner.Runner)</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.internal.runners</name>
        <class confirmed="yes">
            <name>org.junit.internal.runners.BeforeAndAfterRunner</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner$1</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestMethodRunner</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fAfterAnnotation</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fBeforeAnnotation</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fTestIntrospector</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.TestIntrospector(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.addFailure(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.fAfterAnnotation</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.fBeforeAnnotation</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.fTest</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.fTestIntrospector</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.addFailure(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fAfterAnnotation</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fTestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runProtected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore.BeforeAndAfterRunner$FailedBefore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.addFailure(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fBeforeAnnotation</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fTestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runProtected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.runProtected()</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runUnprotected()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.runUnprotected()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runProtected()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore</name>
            <outbound type="class" confirmed="no">java.lang.Exception</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runProtected()</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore.BeforeAndAfterRunner$FailedBefore()</name>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.CompositeRunner</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filterable</outbound>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sortable</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.CompositeRunner$1(org.junit.internal.runners.CompositeRunner, org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.this$0</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fName</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.addAll(java.util.List)</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.fName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.fRunners</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.addAll(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getRunners()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.remove()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.apply(org.junit.runner.Runner)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.shouldRun(org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.getDescription()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fName</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.addChild(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.getName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.getRunners()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.run(org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.sort(java.util.List, java.util.Comparator)</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.CompositeRunner$1(org.junit.internal.runners.CompositeRunner, org.junit.runner.manipulation.Sorter)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.apply(org.junit.runner.Runner)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.CompositeRunner$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Comparator</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner$1.CompositeRunner$1(org.junit.internal.runners.CompositeRunner, org.junit.runner.manipulation.Sorter)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.CompositeRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.val$sorter</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner$1.compare(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(org.junit.runner.Runner, org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner$1.compare(org.junit.runner.Runner, org.junit.runner.Runner)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.val$sorter</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.CompositeRunner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.CompositeRunner$1(org.junit.internal.runners.CompositeRunner, org.junit.runner.manipulation.Sorter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner$1.val$sorter</name>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.CompositeRunner$1(org.junit.internal.runners.CompositeRunner, org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(org.junit.runner.Runner, org.junit.runner.Runner)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.ErrorReportingRunner</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.ErrorReportingRunner.ErrorReportingRunner(org.junit.runner.Description, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.fCause</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.fDescription</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.ErrorReportingRunner.fCause</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.ErrorReportingRunner(org.junit.runner.Description, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.ErrorReportingRunner.fDescription</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.ErrorReportingRunner(org.junit.runner.Description, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.ErrorReportingRunner.getDescription()</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.fDescription</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.fCause</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.fDescription</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.InitializationError</name>
            <outbound type="class" confirmed="no">java.lang.Exception</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.assertValid()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.InitializationError.InitializationError(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.Throwable[])</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.InitializationError.InitializationError(java.lang.Throwable[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.util.List)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.InitializationError.InitializationError(java.util.List)</name>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.fErrors</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.Throwable[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.assertValid()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.InitializationError.fErrors</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.getCauses()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.InitializationError.getCauses()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.fErrors</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.InitializationError.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.MethodValidator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.validate(org.junit.internal.runners.MethodValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.validate(org.junit.internal.runners.MethodValidator)</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fErrors</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fTestClass</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.TestIntrospector(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.assertValid()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fErrors</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.fErrors</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.assertValid()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateAllMethods()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.fIntrospector</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.fTestClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.validateAllMethods()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fErrors</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateInstanceMethods()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateStaticMethods()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.validate(org.junit.internal.runners.MethodValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.validateInstanceMethods()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.junit.After</outbound>
                <outbound type="class" confirmed="yes">org.junit.Before</outbound>
                <outbound type="class" confirmed="yes">org.junit.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateAllMethods()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.validate(org.junit.internal.runners.MethodValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getConstructor(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fErrors</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fTestClass</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateAllMethods()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.validateStaticMethods()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.junit.AfterClass</outbound>
                <outbound type="class" confirmed="yes">org.junit.BeforeClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateAllMethods()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.validate(org.junit.internal.runners.MethodValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isPublic(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isStatic(int)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fErrors</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fIntrospector</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateInstanceMethods()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateStaticMethods()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.OldTestClassRunner</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.OldTestClassRunner$1(org.junit.internal.runners.OldTestClassRunner, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.this$0</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.AllTests</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(junit.framework.Test)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.fTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.AllTests(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner.fTest</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner.getDescription()</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.fTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner.getListener(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.OldTestClassRunner$1(org.junit.internal.runners.OldTestClassRunner, org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.extensions.TestDecorator</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.getTest()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapter</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getDescription()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.getName()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestSuite</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.getName()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.testCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.addChild(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.getDescription()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.fTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.getListener(org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.OldTestClassRunner$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$1.OldTestClassRunner$1(org.junit.internal.runners.OldTestClassRunner, org.junit.runner.notification.RunNotifier)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.OldTestClassRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.val$notifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.getListener(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$1.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.asDescription(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.val$notifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.addError(junit.framework.Test, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$1.asDescription(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestCaseFacade</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.getDescription()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.getName(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$1.endTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.asDescription(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.val$notifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$1.getName(junit.framework.Test)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.getName()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.asDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$1.startTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.asDescription(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.val$notifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.OldTestClassRunner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.OldTestClassRunner$1(org.junit.internal.runners.OldTestClassRunner, org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$1.val$notifier</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.OldTestClassRunner$1(org.junit.internal.runners.OldTestClassRunner, org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.startTest(junit.framework.Test)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.TestClassMethodsRunner</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filterable</outbound>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sortable</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.TestClassMethodsRunner$1(org.junit.internal.runners.TestClassMethodsRunner, org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.this$0</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.junit.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestMethods</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getTestClass()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.TestIntrospector(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestMethodRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.createTest()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getConstructor(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getTestClass()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.fTestClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getTestClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.fTestMethods</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.remove()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestMethods</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.shouldRun(org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException.NoTestsRemainException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.getDescription()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestMethods</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getName()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.addChild(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.getName()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getTestClass()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.getTestClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestClass</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createTest()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testAborted(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestMethodRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getTestClass()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testName(java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestMethods</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testAborted(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.sort(org.junit.runner.manipulation.Sorter)</name>
                <outbound type="feature" confirmed="no">java.util.Collections.sort(java.util.List, java.util.Comparator)</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.TestClassMethodsRunner$1(org.junit.internal.runners.TestClassMethodsRunner, org.junit.runner.manipulation.Sorter)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestMethods</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.testAborted(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.testName(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.TestClassMethodsRunner$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Comparator</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner$1.TestClassMethodsRunner$1(org.junit.internal.runners.TestClassMethodsRunner, org.junit.runner.manipulation.Sorter)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.val$sorter</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.val$sorter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.TestClassMethodsRunner$1(org.junit.internal.runners.TestClassMethodsRunner, org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner$1.val$sorter</name>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.TestClassMethodsRunner$1(org.junit.internal.runners.TestClassMethodsRunner, org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.TestClassRunner</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filterable</outbound>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sortable</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.this$0</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Parameterized</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Suite</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.MethodValidator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.assertValid()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fEnclosedRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fTestClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.validate(org.junit.internal.runners.MethodValidator)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.Parameterized(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.fEnclosedRunner</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.runUnprotected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.fTestClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.getTestClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.filter(org.junit.runner.manipulation.Filter)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fEnclosedRunner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.apply(org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.getDescription()</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fEnclosedRunner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.getTestClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fTestClass</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.junit.AfterClass</outbound>
                <outbound type="class" confirmed="yes">org.junit.BeforeClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runProtected()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.getTestClass()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.sort(org.junit.runner.manipulation.Sorter)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fEnclosedRunner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.apply(org.junit.runner.Runner)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.validate(org.junit.internal.runners.MethodValidator)</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.MethodValidator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateAllMethods()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.TestClassRunner$1</name>
            <outbound type="class" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.val$notifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.val$notifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner$1.runUnprotected()</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.val$notifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fEnclosedRunner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.run(org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.runUnprotected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner$1.val$notifier</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.runUnprotected()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.TestIntrospector</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fTestIntrospector</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fIntrospector</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fTestIntrospector</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.TestIntrospector(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.fTestClass</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.junit.Test</outbound>
                <outbound type="class" confirmed="yes">org.junit.Test$None</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Test.expected()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.fTestClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.TestIntrospector(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.getSuperClasses(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSuperclass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getDeclaredMethods()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.reverse(java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.fTestClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getSuperClasses(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.runsTopToBottom(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.getTimeout(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.junit.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Test.timeout()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.isIgnored(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.junit.Ignore</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.runsTopToBottom(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.Before</outbound>
                <outbound type="class" confirmed="yes">org.junit.BeforeClass</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.TestMethodRunner</name>
            <outbound type="class" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.TestMethodRunner$1(org.junit.internal.runners.TestMethodRunner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.call()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.this$0</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="yes">org.junit.After</outbound>
                <outbound type="class" confirmed="yes">org.junit.Before</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.TestIntrospector(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fDescription</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fMethod</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fTestIntrospector</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.access$0(org.junit.internal.runners.TestMethodRunner)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.call()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fDescription</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.executeMethodBody()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fMethod</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.expectedException()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fMethod</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fTestIntrospector</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectsException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.isUnexpected(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.expectsException()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.fDescription</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.fMethod</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.executeMethodBody()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.fNotifier</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.fTest</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.executeMethodBody()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.fTestIntrospector</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.isUnexpected(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.run()</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTimeout(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isIgnored(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fDescription</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fMethod</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fTestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestIgnored(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.runMethod()</name>
                <outbound type="feature" confirmed="no">org.junit.internal.runners.TestMethodRunner.runProtected()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.access$0(org.junit.internal.runners.TestMethodRunner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.internal.runners.TestMethodRunner.runProtected()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runMethod()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.runUnprotected()</name>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.executeMethodBody()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectsException()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.isUnexpected(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.valueOf(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.Callable</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ExecutorService</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ExecutorService.awaitTermination(long, java.util.concurrent.TimeUnit)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ExecutorService.shutdown()</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ExecutorService.shutdownNow()</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.Executors.newSingleThreadExecutor()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.Future</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.Future.get(long, java.util.concurrent.TimeUnit)</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.TimeUnit</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.TimeUnit.MILLISECONDS</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.TimeoutException</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.TestMethodRunner$1(org.junit.internal.runners.TestMethodRunner)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.TestMethodRunner$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.concurrent.Callable</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner$1.TestMethodRunner$1(org.junit.internal.runners.TestMethodRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestMethodRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner$1.call()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestMethodRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.access$0(org.junit.internal.runners.TestMethodRunner)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestMethodRunner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.TestMethodRunner$1(org.junit.internal.runners.TestMethodRunner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.call()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.TextListener</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.TextListener()</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener(java.io.PrintStream)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.TextListener(java.io.PrintStream)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.fWriter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.RunListener()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.elapsedTimeAsString(long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.text.NumberFormat</outbound>
                <outbound type="feature" confirmed="no">java.text.NumberFormat.format(double)</outbound>
                <outbound type="feature" confirmed="no">java.text.NumberFormat.getInstance()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.fWriter</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.getWriter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testIgnored(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.getWriter()</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.fWriter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureTrace(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.printFailure(org.junit.runner.notification.Failure, int)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureTrace(org.junit.runner.notification.Failure)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.getWriter()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTestHeader()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailure(org.junit.runner.notification.Failure, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.printFailureTrace(org.junit.runner.notification.Failure)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.getWriter()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailure(org.junit.runner.notification.Failure, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.getWriter()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailure(org.junit.runner.notification.Failure, int)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.getWriter()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.wasSuccessful()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.printHeader(long)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.elapsedTimeAsString(long)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.testFailure(org.junit.runner.notification.Failure)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.append(char)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.fWriter</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.testIgnored(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.append(char)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.fWriter</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.testRunFinished(org.junit.runner.Result)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunTime()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.testStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.append(char)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.fWriter</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.runner</name>
        <class confirmed="yes">
            <name>org.junit.runner.Description</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.JUnit4TestCaseFacade(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.fDescription</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(org.junit.runner.Runner, org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.ErrorReportingRunner(org.junit.runner.Description, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.fDescription</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.asDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testAborted(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fDescription</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testIgnored(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.Request$1(org.junit.runner.Request, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.describe()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.val$desiredDescription</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.method(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testIgnored(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Runner.testCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter$1.shouldRun(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.shouldRun(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.fDescription</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTestHeader()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testIgnored(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.RunNotifier$1(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.val$description</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.val$description</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.val$description</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.val$description</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestIgnored(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.Description(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.fChildren</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.fDisplayName</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.TEST_MECHANISM</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.addChild(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.createSuiteDescription(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.createSuiteDescription(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.asDescription(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.method(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.equals(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.fChildren</name>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.fDisplayName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.getChildren()</name>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.fChildren</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.addChild(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.isTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.getDisplayName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.fDisplayName</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.hashCode()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.describe()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTestHeader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.hashCode()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.hashCode()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.isSuite()</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.isTest()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.isTest()</name>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.isEmpty()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.isSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.static {}</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.TEST_MECHANISM</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.testCount()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.isTest()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Runner.testCount()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.toString()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.JUnitCore</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.JUnitCore()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.fNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.RunNotifier()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.fNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.fNotifier</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.removeListener(org.junit.runner.notification.RunListener)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.getVersion()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.Version.id()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.killAllThreads(org.junit.runner.Result)</name>
                <outbound type="feature" confirmed="no">java.lang.System.exit(int)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.wasSuccessful()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.main(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.killAllThreads(org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.removeListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.fNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.run(java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.classes(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.run(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.run(org.junit.runner.Request)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.fNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.removeListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.createListener()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.run(org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestRunFinished(org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestRunStarted(org.junit.runner.Description)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.runMain(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class[]</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.toArray(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.Version.id()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.main(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.Request</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.requests.ClassRequest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.requests.ClassesRequest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.requests.FilterRequest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.FilterRequest(org.junit.runner.Request, org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.fRequest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.requests.SortingRequest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.SortingRequest(org.junit.runner.Request, java.util.Comparator)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.fRequest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.Request$1(org.junit.runner.Request, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.Request()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.ClassesRequest(java.lang.String, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.ErrorReportingRequest(java.lang.Class, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.FilterRequest(org.junit.runner.Request, org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.SortingRequest(org.junit.runner.Request, java.util.Comparator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.aClass(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.method(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.classes(java.lang.String, java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.ClassesRequest(java.lang.String, java.lang.Class[])</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.errorReport(java.lang.Class, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.ErrorReportingRequest(java.lang.Class, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.filterWith(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request$1.Request$1(org.junit.runner.Request, org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.method(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.FilterRequest(org.junit.runner.Request, org.junit.runner.manipulation.Filter)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.getRunner()</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.method(java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.Description)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.sortWith(java.util.Comparator)</name>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.SortingRequest(org.junit.runner.Request, java.util.Comparator)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.Request$1</name>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.Request$1.Request$1(org.junit.runner.Request, org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request$1.val$desiredDescription</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.Filter()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request$1.describe()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request$1.val$desiredDescription</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.isTest()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request$1.val$desiredDescription</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.Request$1(org.junit.runner.Request, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request$1.val$desiredDescription</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.Request$1(org.junit.runner.Request, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.describe()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.Result</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testRunFinished(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.killAllThreads(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.Result$Listener(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testIgnored(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunFinished(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testRunFinished(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.val$result</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestRunFinished(org.junit.runner.Result)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.Result()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fCount</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fFailures</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fIgnoreCount</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fRunTime</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.access$0(org.junit.runner.Result, long)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fStartTime</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.access$1(org.junit.runner.Result)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fRunTime</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.access$2(org.junit.runner.Result)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fStartTime</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.access$3(org.junit.runner.Result, long)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fRunTime</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.access$4(org.junit.runner.Result)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fCount</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.access$5(org.junit.runner.Result, int)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fCount</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.access$6(org.junit.runner.Result)</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fFailures</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.access$7(org.junit.runner.Result)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fIgnoreCount</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testIgnored(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.access$8(org.junit.runner.Result, int)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fIgnoreCount</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testIgnored(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.createListener()</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.Result$Listener(org.junit.runner.Result)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.fCount</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$4(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$5(org.junit.runner.Result, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.fFailures</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$6(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.fIgnoreCount</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$7(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$8(org.junit.runner.Result, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.getIgnoreCount()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.fRunTime</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$1(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$3(org.junit.runner.Result, long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.getRunTime()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.fStartTime</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$0(org.junit.runner.Result, long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$2(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.getFailureCount()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fFailures</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.wasSuccessful()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.getFailures()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fFailures</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.getIgnoreCount()</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fIgnoreCount</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.getRunCount()</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fCount</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.getRunTime()</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fRunTime</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.wasSuccessful()</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.killAllThreads(org.junit.runner.Result)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.Result$Listener</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.Result$Listener.Result$Listener(org.junit.runner.Result)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.RunListener()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.createListener()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.access$6(org.junit.runner.Result)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result$Listener.testIgnored(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.access$7(org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.access$8(org.junit.runner.Result, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result$Listener.testRunFinished(org.junit.runner.Result)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.access$1(org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.access$2(org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.access$3(org.junit.runner.Result, long)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result$Listener.testRunStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.access$0(org.junit.runner.Result, long)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result$Listener.testStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.access$4(org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.access$5(org.junit.runner.Result, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result$Listener.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.Result$Listener(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testIgnored(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunFinished(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunStarted(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testStarted(org.junit.runner.Description)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.RunWith</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.RunWith.value()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.Runner</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.countTestCases()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fRunner</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.getRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.CompositeRunner</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(org.junit.runner.Runner, org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.OldTestClassRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fEnclosedRunner</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.apply(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.apply(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.Parameterized(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.Runner.Runner()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.ErrorReportingRunner(org.junit.runner.Description, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Runner.getDescription()</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(org.junit.runner.Runner, org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Runner.testCount()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Runner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.runUnprotected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Runner.testCount()</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.countTestCases()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.runner.manipulation</name>
        <class confirmed="yes">
            <name>org.junit.runner.manipulation.Filter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.FilterRequest(org.junit.runner.Request, org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.fFilter</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.Request$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filterable.filter(org.junit.runner.manipulation.Filter)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter.ALL</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter.Filter()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.Request$1(org.junit.runner.Request, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter$1.Filter$1()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter.apply(org.junit.runner.Runner)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filterable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filterable.filter(org.junit.runner.manipulation.Filter)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter.describe()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter.shouldRun(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter.static {}</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter$1.Filter$1()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.ALL</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.manipulation.Filter$1</name>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter$1.Filter$1()</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.Filter()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter$1.describe()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter$1.shouldRun(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.manipulation.Filterable</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.CompositeRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.apply(org.junit.runner.Runner)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filterable.filter(org.junit.runner.manipulation.Filter)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.apply(org.junit.runner.Runner)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.manipulation.NoTestsRemainException</name>
            <outbound type="class" confirmed="no">java.lang.Exception</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.apply(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filterable.filter(org.junit.runner.manipulation.Filter)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.NoTestsRemainException.NoTestsRemainException()</name>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.NoTestsRemainException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.manipulation.Sortable</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.CompositeRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.apply(org.junit.runner.Runner)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Sortable.sort(org.junit.runner.manipulation.Sorter)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.apply(org.junit.runner.Runner)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.manipulation.Sorter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Comparator</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.CompositeRunner$1(org.junit.internal.runners.CompositeRunner, org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(org.junit.runner.Runner, org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.val$sorter</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.TestClassMethodsRunner$1(org.junit.internal.runners.TestClassMethodsRunner, org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.val$sorter</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sortable.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Sorter.Sorter(java.util.Comparator)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.fComparator</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Sorter.apply(org.junit.runner.Runner)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sortable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sortable.sort(org.junit.runner.manipulation.Sorter)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Sorter.compare(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="no">java.util.Comparator.compare(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.fComparator</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(org.junit.runner.Runner, org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Sorter.fComparator</name>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.Sorter(java.util.Comparator)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.runner.notification</name>
        <class confirmed="yes">
            <name>org.junit.runner.notification.Failure</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testAborted(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailure(org.junit.runner.notification.Failure, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureTrace(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.val$failure</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.fDescription</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.fThrownException</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testAborted(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.fDescription</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTestHeader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.fThrownException</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.getDescription()</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.fDescription</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.getException()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.fThrownException</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.getMessage()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.getTestHeader()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.fDescription</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.getTrace()</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.getBuffer()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.printStackTrace(java.io.PrintWriter)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureTrace(org.junit.runner.notification.Failure)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.fThrownException</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTestHeader()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunListener</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TextListener</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.removeListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.Result$Listener</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result.createListener()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunListener.RunListener()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.JUnit4TestAdapterCache$1(junit.framework.JUnit4TestAdapterCache, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.Result$Listener(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunListener.testFailure(org.junit.runner.notification.Failure)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunListener.testFinished(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunListener.testIgnored(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunListener.testRunFinished(org.junit.runner.Result)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunListener.testRunStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunListener.testStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunNotifier</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.OldTestClassRunner$1(org.junit.internal.runners.OldTestClassRunner, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.val$notifier</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.getListener(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testAborted(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.val$notifier</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fNotifier</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.fNotifier</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.removeListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Runner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.RunNotifier$1(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.this$0</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.RunNotifier()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fListeners</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fPleaseStop</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.access$0(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fListeners</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fListeners</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.fListeners</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.RunNotifier()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.access$0(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.fPleaseStop</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.RunNotifier()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.pleaseStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</outbound>
                <outbound type="feature" confirmed="no">org.junit.runner.notification.RunNotifier$4.run()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testAborted(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="no">org.junit.runner.notification.RunNotifier$6.run()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testAborted(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.fireTestIgnored(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="no">org.junit.runner.notification.RunNotifier$5.run()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.fireTestRunFinished(org.junit.runner.Result)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="no">org.junit.runner.notification.RunNotifier$2.run()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.fireTestRunStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.RunNotifier$1(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="no">org.junit.runner.notification.RunNotifier$1.run()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="no">org.junit.runner.notification.RunNotifier$3.run()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fPleaseStop</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.StoppedByUserException</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.StoppedByUserException.StoppedByUserException()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testAborted(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.pleaseStop()</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fPleaseStop</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.remove(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fListeners</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.removeListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunNotifier$1</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$1.RunNotifier$1(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.val$description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestRunStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$1.notifyListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testRunStarted(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.val$description</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runner.notification.RunNotifier$1.run()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestRunStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.RunNotifier$1(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$1.val$description</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.RunNotifier$1(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunNotifier$2</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.val$result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$2.notifyListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testRunFinished(org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.val$result</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runner.notification.RunNotifier$2.run()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$2.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$2.val$result</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunNotifier$3</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.val$description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$3.notifyListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testStarted(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.val$description</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runner.notification.RunNotifier$3.run()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$3.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$3.val$description</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunNotifier$4</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.val$failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$4.notifyListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testFailure(org.junit.runner.notification.Failure)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.val$failure</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runner.notification.RunNotifier$4.run()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$4.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$4.val$failure</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunNotifier$5</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.val$description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestIgnored(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$5.notifyListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testIgnored(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.val$description</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runner.notification.RunNotifier$5.run()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestIgnored(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$5.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$5.val$description</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunNotifier$6</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.val$description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$6.notifyListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testFinished(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.val$description</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runner.notification.RunNotifier$6.run()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$6.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$6.val$description</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunNotifier$SafeNotifier</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$1</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$2</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$3</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$4</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$5</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$6</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.RunNotifier$1(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$SafeNotifier.notifyListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$SafeNotifier.run()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.remove()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.TEST_MECHANISM</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.notifyListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.access$0(org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$SafeNotifier.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.StoppedByUserException</name>
            <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.StoppedByUserException.StoppedByUserException()</name>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.StoppedByUserException.serialVersionUID</name>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.runners</name>
        <class confirmed="yes">
            <name>org.junit.runners.AllTests</name>
            <outbound type="class" confirmed="yes">org.junit.internal.runners.OldTestClassRunner</outbound>
            <feature confirmed="yes">
                <name>org.junit.runners.AllTests.AllTests(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.AllTests.suite(java.lang.Class)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.AllTests.suite(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getCause()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isStatic(int)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.AllTests(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runners.Parameterized</name>
            <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</outbound>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized.Parameterized(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized.eachOne(java.lang.Object[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized.validate(org.junit.internal.runners.MethodValidator)</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.MethodValidator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateInstanceMethods()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateStaticMethods()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runners.Parameterized$Parameters</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
        </class>
        <class confirmed="yes">
            <name>org.junit.runners.Parameterized$RunAllParameterMethods</name>
            <outbound type="class" confirmed="yes">org.junit.internal.runners.CompositeRunner</outbound>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Object[]</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.fKlass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.Parameterized(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$RunAllParameterMethods.fKlass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runners.Parameterized$RunAllParameterMethods.getName()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethods()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isStatic(int)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runners.Parameterized$Parameters</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.fKlass</outbound>
                <outbound type="feature" confirmed="no">org.junit.runners.Parameterized$RunAllParameterMethods.getName()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runners.Parameterized$TestClassRunnerForParameters</name>
            <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner</outbound>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fConstructor</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fParameterSetNumber</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fParameters</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.createTest()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fConstructor</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fParameters</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.fConstructor</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.createTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.fParameterSetNumber</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.fParameters</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.createTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.getName()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fParameterSetNumber</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getConstructors()</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.junit.runners.Parameterized$TestClassRunnerForParameters.getTestClass()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.getTestClass()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fParameterSetNumber</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runners.Suite</name>
            <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</outbound>
            <feature confirmed="yes">
                <name>org.junit.runners.Suite.Suite(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.classes(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runners.Suite$SuiteClasses</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Suite$SuiteClasses.value()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runners.Suite$SuiteClasses</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runners.Suite$SuiteClasses.value()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            </feature>
        </class>
    </package>
</dependencies>
