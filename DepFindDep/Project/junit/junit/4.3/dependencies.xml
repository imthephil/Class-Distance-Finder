<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE dependencies SYSTEM "http://depfind.sourceforge.net/dtd/dependencies.dtd">

<dependencies>
    <package confirmed="no">
        <name></name>
        <class confirmed="no">
            <name>int[]</name>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalIntArraysAreEqual()</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.io</name>
        <class confirmed="no">
            <name>java.io.BufferedReader</name>
            <feature confirmed="no">
                <name>java.io.BufferedReader.BufferedReader(java.io.Reader)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.BufferedReader.readLine()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ByteArrayOutputStream</name>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.results</inbound>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.ByteArrayOutputStream()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.expected(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.convert(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.setUp()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.toString()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.File</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            <feature confirmed="no">
                <name>java.io.File.File(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.pathSeparator</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.separator</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileInputStream</name>
            <feature confirmed="no">
                <name>java.io.FileInputStream.FileInputStream(java.io.File)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileOutputStream</name>
            <feature confirmed="no">
                <name>java.io.FileOutputStream.FileOutputStream(java.io.File)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.FileOutputStream.close()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.IOException</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.InputStream</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            <feature confirmed="no">
                <name>java.io.InputStream.close()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.InputStream.read()</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.OutputStream</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.expected(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.convert(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.results</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.setUp()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testError()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testSuccess()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testTime()</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.PrintStream</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.Version.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.fWriter</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener(java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.fWriter</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.getWriter()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureTrace(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testIgnored(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.oldOut</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$1.ForwardCompatibilityPrintingTest$1(org.junit.tests.ForwardCompatibilityPrintingTest, java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$1.printErrors(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$3.ForwardCompatibilityPrintingTest$3(org.junit.tests.ForwardCompatibilityPrintingTest, java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$3.printErrors(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$TestResultPrinter.ForwardCompatibilityPrintingTest$TestResultPrinter(java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.setUp()</inbound>
            <feature confirmed="no">
                <name>java.io.PrintStream.PrintStream(java.io.OutputStream)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.expected(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.convert(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.setUp()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.append(char)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testIgnored(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.print(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureTrace(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.println()</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.convert(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.println(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.Version.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runFailed(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$1.printErrors(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$3.printErrors(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.expected(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.PrintWriter</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            <feature confirmed="no">
                <name>java.io.PrintWriter.PrintWriter(java.io.Writer)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintWriter.println(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.Reader</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.StringReader</name>
            <feature confirmed="no">
                <name>java.io.StringReader.StringReader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.StringWriter</name>
            <feature confirmed="no">
                <name>java.io.StringWriter.StringWriter()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.StringWriter.getBuffer()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.StringWriter.toString()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.Writer</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang</name>
        <class confirmed="no">
            <name>java.lang.AssertionError</name>
            <inbound type="class" confirmed="yes">junit.framework.AssertionFailedError</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.junit.ComparisonFailure</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.ArrayComparisonFailure</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.ArrayComparisonFailure(java.lang.String, java.lang.AssertionError, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.fCause</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysActualNullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement0nullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement0withMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1nullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1withMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferentLengthMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysExpectedNullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.errorMessageDistinguishesDifferentValuesWithSameToString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqualNoMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSameNullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSameWithMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessageDisappearsWithAssertEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.sameNullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.sameWithMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
            <feature confirmed="no">
                <name>java.lang.AssertionError.AssertionError()</name>
                <inbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.ArrayComparisonFailure(java.lang.String, java.lang.AssertionError, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.AssertionError.AssertionError(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.AssertionError.getMessage()</name>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysActualNullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement0nullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement0withMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1nullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1withMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferentLengthMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysExpectedNullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.errorMessageDistinguishesDifferentValuesWithSameToString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqualNoMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSameNullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSameWithMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessageDisappearsWithAssertEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.sameNullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.sameWithMessage()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Boolean</name>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement0nullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement0withMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1nullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1withMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.booleansNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.equals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqualNoMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysDeclaredAsOneDimensionalAreEqual()</inbound>
            <feature confirmed="no">
                <name>java.lang.Boolean.valueOf(boolean)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement0nullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement0withMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1nullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1withMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.booleansNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.equals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqualNoMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysDeclaredAsOneDimensionalAreEqual()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Byte</name>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.bytesNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.equals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.implicitTypecastEquality()</inbound>
            <feature confirmed="no">
                <name>java.lang.Byte.Byte(byte)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Byte.valueOf(byte)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.bytesNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.equals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.implicitTypecastEquality()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.CharSequence</name>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClassesRegardless()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAftersRegardless()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestInheritance()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.runWithExtendsToSubclasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.convert(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testTime()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Character</name>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.charsNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.equals()</inbound>
            <feature confirmed="no">
                <name>java.lang.Character.Character(char)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, char, char)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Character.valueOf(char)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.charsNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.equals()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Class</name>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fNewTestClass</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTestClass()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.isArray(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Test.expected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.fTestClass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.hasSuiteMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.isPre4Test(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.ClassesRequest(java.lang.String, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.fClasses</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.ErrorReportingRequest(java.lang.Class, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.fClass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner.IgnoredClassRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner.fTestClass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fAfterAnnotation</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fBeforeAnnotation</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fTestClass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateInstanceMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateStaticMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.asDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestClass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getTestClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fTestClass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.getTestClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.TestIntrospector(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.fTestClass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getSuperClasses(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTimeout(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isIgnored(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.runsTopToBottom(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectsException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.isUnexpected(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.classWithoutSuiteMethod(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.classes(java.lang.String, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.errorReport(java.lang.Class, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.method(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.RunWith.value()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.AllTests(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Enclosed.Enclosed(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.fKlass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int, org.junit.runners.Parameterized$1)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.Parameterized(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite$SuiteClasses.value()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.addParent(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTests.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$All.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$AllJUnit4.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCountAdapted()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.ensureTestIsRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.exceptionThrownWhenSuiteIsBad()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testAnnotatedMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInAfterClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testExceptionNotThrown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testNonStaticOneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldSuiteTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOneTimeTeardown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrder()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrderingOfInheritance()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClassesRegardless()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAftersRegardless()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testShadowing()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownAfterFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestInheritance()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTwoTests()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ClassRequestTest.noSuiteMethodIfMethodPrivate()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runAClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClassesAsArray()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerIsNamedForEnclosingClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerPlansEnclosedClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerRunsEnclosedClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.expected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.expectsSuperclass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest.failedConstructionIsTestFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$MarkerRunner.ForwardCompatibilityTest$MarkerRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testBeforeAndAfterClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testCompatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testExceptionInBefore()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testExpected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNoException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testRunWithClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToStringSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testUseGlobalCache()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.IgnoreClassTest.ignoreClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InaccessibleBaseClassTest.inaccessibleBaseClassIsCaughtAtValidation()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitialize.InitializationErrorForwardCompatibilityTest$CantInitialize(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$InitializesWithError.InitializationErrorForwardCompatibilityTest$InitializesWithError(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.createAdapter()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.notifyListenersInTheOrderInWhichTheyAreAdded()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.plansDecoratorCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.ParameterizedTestMethodTest(java.lang.Class, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.fClass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.testFailures()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.validateAllMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.beforeAndAfterClassAreRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.count()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.countBeforeRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresAddedForBadTestMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresNamedCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParameterListsAreNotArrays()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParametersNotPublic()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.validateClassCatchesNoParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$1.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.testListener()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.RunWithTest$ExampleRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.characterizeErrorMessageFromBadRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.runWithExtendsToSubclasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.newTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.oldTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.testFinished()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAffectsPlan()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAwayEverythingThrowsException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.nonexistentMethodCreatesFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnTestClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnTestClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$UnsortableRunner.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$UnsortableRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.testClassRunnerCanBeWrappedAroundUnsortable()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.unsortablesAreHandledWithoutCrashing()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.descriptionWithTwoKids(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest$NewTest.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.makeSureSuiteIsCalled()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.makeSureSuiteWorksWithJUnit4Classes()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.beforeAndAfterClassRunOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureSuitesWorkWithForwardCompatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureTestIsRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithGetTests()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteShouldBeOKwithNonDefaultConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteTestCountIsCorrect()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteContainsItselfIndirectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasACycle()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasAForkingCycle()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.constructorException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.noRunnableMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestDescriptionTest.equalsIsFalseForNonTestDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.failingListener()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.freshResultEachTime()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.compatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.dontValidateShadowedMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.ignoreRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.onlyIgnoredMethodsIsStillFineTestClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.overloaded()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.testFailures()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateAllMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateInheritedMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testError()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testSuccess()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testTime()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.compatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoopRunsForApproximatelyLengthOfTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.runAndTime(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.successWithTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopMethodRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.initializationErrorIsOnCorrectClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.testClassRunnerHandlesBeforeClassAndAfterClassValidation()</inbound>
            <feature confirmed="no">
                <name>java.lang.Class.asSubclass(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.forName(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getClassLoader()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getClasses()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Enclosed.Enclosed(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getConstructor(java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createTest()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getConstructors()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getDeclaredMethods()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.hasSuiteMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopMethodRunner()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getMethods()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getModifiers()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getName()</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.addParent(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerIsNamedForEnclosingClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToStringSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresNamedCorrectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParameterListsAreNotArrays()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParametersNotPublic()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.initializationErrorIsOnCorrectClass()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getSimpleName()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getSuperclass()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getSuperClasses(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isArray()</name>
                <inbound type="feature" confirmed="yes">org.junit.Assert.isArray(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isAssignableFrom(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.isPre4Test(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.isUnexpected(java.lang.Throwable)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassCastException</name>
            <feature confirmed="no">
                <name>java.lang.ClassCastException.ClassCastException()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest$ExpectSuperclass.throwsSubclass()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassLoader</name>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.getResource(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassNotFoundException</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <feature confirmed="no">
                <name>java.lang.ClassNotFoundException.getMessage()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Class[]</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Double</name>
            <feature confirmed="no">
                <name>java.lang.Double.Double(double)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Double.compare(double, double)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Error</name>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
            <feature confirmed="no">
                <name>java.lang.Error.Error()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$ExceptionTest.expectedException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClasses.bad()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfters.bad()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SetupFailureTest.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TeardownFailureTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TestAndTeardownFailureTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest$Unexpected.expected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$ExceptionInBeforeTest.error()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$UnExpectedExceptionTest.expected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ErrorListener.testRunStarted(org.junit.runner.Description)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Exception</name>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.setUp()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.tearDown()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.setUp()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.tearDown()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(java.lang.reflect.Method)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.call()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testIgnored(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunFinished(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testIgnored(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testRunFinished(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.RunNotifier$1(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.createTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.Parameterized(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$ErrorInAfterClass.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$ErrorInBeforeClass.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$FailureTest.error()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TeardownAfterFailureTest.test()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TestAndTeardownFailureTest.test()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testAnnotatedMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInAfterClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testExceptionNotThrown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testNonStaticOneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldSuiteTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOneTimeTeardown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrder()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrderingOfInheritance()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testShadowing()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownAfterFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestInheritance()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTwoTests()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerIsNamedForEnclosingClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerPlansEnclosedClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerRunsEnclosedClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest$Expected.expected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest$Unexpected.expected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$2.ForwardCompatibilityPrintingTest$2(org.junit.tests.ForwardCompatibilityPrintingTest)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$2.runTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$ErrorTest.error()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$ExpectedTest.expected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NoExceptionTest.succeed()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$UnExpectedExceptionTest.expected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.exception</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitialize.InitializationErrorForwardCompatibilityTest$CantInitialize(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$InitializesWithError.InitializationErrorForwardCompatibilityTest$InitializesWithError(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.failureCausesExitCodeOf1()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.missingClassCausesExitCodeOf1()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.successCausesExitCodeOf0()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$1.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$2.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.testFailures()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.countBeforeRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresAddedForBadTestMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParametersNotPublic()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.testListener()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAffectsPlan()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.nonexistentMethodCreatesFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteShouldBeOKwithNonDefaultConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteTestCountIsCorrect()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest$FaultyConstructor.TestClassMethodsRunnerTest$FaultyConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ErrorListener.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ExceptionListener.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.dontValidateShadowedMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.testFailures()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateInheritedMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest$ErrorTest.error()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testError()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testSuccess()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoopRunsForApproximatelyLengthOfTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.successWithTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopMethodRunner()</inbound>
            <feature confirmed="no">
                <name>java.lang.Exception.Exception()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore.BeforeAndAfterRunner$FailedBefore()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException.NoTestsRemainException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$ErrorInAfterClass.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$ErrorInBeforeClass.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TeardownAfterFailureTest.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TestAndTeardownFailureTest.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest$Expected.expected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$2.runTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$ExpectedTest.expected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$InitializesWithError.InitializationErrorForwardCompatibilityTest$InitializesWithError(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ExceptionListener.testRunStarted(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest$ErrorTest.error()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Exception.Exception(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitialize.InitializationErrorForwardCompatibilityTest$CantInitialize(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest$FaultyConstructor.TestClassMethodsRunnerTest$FaultyConstructor()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Exception.Exception(java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Exception.getMessage()</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Exception.toString()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Float</name>
            <feature confirmed="no">
                <name>java.lang.Float.Float(float)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Float.compare(float, float)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalAccessException</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.executeMethodBody()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</inbound>
            <feature confirmed="no">
                <name>java.lang.IllegalAccessException.fillInStackTrace()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.IllegalAccessException.toString()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalArgumentException</name>
            <feature confirmed="no">
                <name>java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.InstantiationException</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Integer</name>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.addDimension(int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.capacity()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.contains()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.elementAt()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.removeElement()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.setUp()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.setUpOnce()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.testCopy()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.testEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagHash()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyHash()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.zeroMoniesAreEqualRegardlessOfCurrency()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCountAdapted()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysContainingIntsAreEqualToArraysContainingLongs()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.equals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.implicitTypecastEquality()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.intsEqualLongs()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.intsNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessageDisappearsWithAssertEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClassesAsArray()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerPlansEnclosedClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerRunsEnclosedClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.IgnoreClassTest.ignoreClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsShowUpAsWarnings()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.plansDecoratorCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.params()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.testFailures()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.data()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.test()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$IncorrectTest.data()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.count()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.countBeforeRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresAddedForBadTestMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.validateClassCatchesNoParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.testListener()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.newTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.oldTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$ParameterizedOneTimeSetup.params()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAffectsPlan()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.nonexistentMethodCreatesFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.hashCodeIsReasonable()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureSuitesWorkWithForwardCompatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureTestIsRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithGetTests()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteTestCountIsCorrect()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteContainsItselfIndirectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasACycle()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasAForkingCycle()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.compatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.ignoreRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.onlyIgnoredMethodsIsStillFineTestClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.overloaded()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.testFailures()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateInheritedMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.compatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.successWithTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            <feature confirmed="no">
                <name>java.lang.Integer.Integer(int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.removeElement()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.errorMessageDistinguishesDifferentValuesWithSameToString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.equalsIsCorrect()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestDescriptionTest.equalsIsFalseForNonTestDescription()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.intValue()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.elementAt()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.parseInt(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.valueOf(int)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.addDimension(int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.capacity()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.contains()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.removeElement()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.setUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.setUpOnce()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.testCopy()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.testEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagHash()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyHash()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.zeroMoniesAreEqualRegardlessOfCurrency()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCountAdapted()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysContainingIntsAreEqualToArraysContainingLongs()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.equals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.implicitTypecastEquality()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.intsEqualLongs()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.intsNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessageDisappearsWithAssertEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClassesAsArray()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerPlansEnclosedClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerRunsEnclosedClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.IgnoreClassTest.ignoreClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsShowUpAsWarnings()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.plansDecoratorCorrectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.params()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.testFailures()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.data()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$IncorrectTest.data()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.count()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.countBeforeRun()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresAddedForBadTestMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.validateClassCatchesNoParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.testListener()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.newTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.oldTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$ParameterizedOneTimeSetup.params()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAffectsPlan()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.nonexistentMethodCreatesFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.hashCodeIsReasonable()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureSuitesWorkWithForwardCompatibility()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureTestIsRun()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithGetTests()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteTestCountIsCorrect()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteContainsItselfIndirectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasACycle()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasAForkingCycle()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.compatibility()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.ignoreRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.onlyIgnoredMethodsIsStillFineTestClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.overloaded()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.testFailures()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateInheritedMethods()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.compatibility()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.successWithTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.InterruptedException</name>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.waitUntilFinished()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest$Slow.pause()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest$TimeoutFailureTest.success()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Long</name>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.testEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysContainingIntsAreEqualToArraysContainingLongs()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.equals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.implicitTypecastEquality()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.intsEqualLongs()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.longsNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoopRunsForApproximatelyLengthOfTimeout()</inbound>
            <feature confirmed="no">
                <name>java.lang.Long.Long(long)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, long, long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.testEquals()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Long.valueOf(long)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.testEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysContainingIntsAreEqualToArraysContainingLongs()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.equals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.implicitTypecastEquality()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.intsEqualLongs()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.longsNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoopRunsForApproximatelyLengthOfTimeout()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Math</name>
            <feature confirmed="no">
                <name>java.lang.Math.abs(double)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Math.abs(float)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Math.max(int, int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Math.min(int, int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.NoSuchMethodException</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.hasSuiteMethod()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.NullPointerException</name>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
            <feature confirmed="no">
                <name>java.lang.NullPointerException.NullPointerException()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest$FailureWithTimeoutRunTimeExceptionTest.failure()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Number</name>
            <inbound type="feature" confirmed="yes">org.junit.Assert.isEquals(java.lang.Object, java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>java.lang.Number.longValue()</name>
                <inbound type="feature" confirmed="yes">org.junit.Assert.isEquals(java.lang.Object, java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.NumberFormatException</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Object</name>
            <inbound type="class" confirmed="yes">junit.extensions.TestSetup$1</inbound>
            <inbound type="class" confirmed="yes">junit.framework.Assert</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, char, char)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, long, long)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, short, short)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.ComparisonCompactor</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.areStringsEqual()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapter</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.JUnit4TestCaseFacade</inbound>
            <inbound type="class" confirmed="yes">junit.framework.Protectable</inbound>
            <inbound type="class" confirmed="yes">junit.framework.Test</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestFailure</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestListener</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestResult</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestResult$1</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.removeListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestSuite</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</inbound>
            <inbound type="class" confirmed="yes">junit.runner.BaseTestRunner</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</inbound>
            <inbound type="class" confirmed="yes">junit.runner.TestRunListener</inbound>
            <inbound type="class" confirmed="yes">junit.runner.Version</inbound>
            <inbound type="class" confirmed="yes">junit.textui.ResultPrinter</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="class" confirmed="yes">org.junit.After</inbound>
            <inbound type="class" confirmed="yes">org.junit.AfterClass</inbound>
            <inbound type="class" confirmed="yes">org.junit.Assert</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.Object[], java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, byte[], byte[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, char[], char[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, int[], int[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, long[], long[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, short[], short[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object[], java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.isArray(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.isEquals(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.junit.Before</inbound>
            <inbound type="class" confirmed="yes">org.junit.BeforeClass</inbound>
            <inbound type="class" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.areStringsEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.junit.Ignore</inbound>
            <inbound type="class" confirmed="yes">org.junit.Test</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.addDimension(int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.CompositeRunner$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.Throwable[])</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.MethodValidator</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getSuperClasses(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.runsTopToBottom(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.call()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.executeMethodBody()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.Description</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.addChild(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.JUnitCore</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.Request</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.describe()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.Result</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.Result$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.RunWith</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.Runner</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.manipulation.Filterable</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.manipulation.Sortable</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.Failure</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Parameterized$1</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Parameterized$Parameters</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int, org.junit.runners.Parameterized$1)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.createTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fParameters</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.eachOne(java.lang.Object[])</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Suite$SuiteClasses</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.addParent(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">org.junit.samples.ListTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.capacity()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.contains()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.elementAt()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.removeElement()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.setUp()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.setUpOnce()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.testCopy()</inbound>
            <inbound type="class" confirmed="yes">org.junit.samples.SimpleTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.testEquals()</inbound>
            <inbound type="class" confirmed="yes">org.junit.samples.money.MoneyTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagMultiply()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNegate()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNotEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSimpleAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSubtract()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSumAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMixedSimpleAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagHash()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyHash()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize2()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize3()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize4()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testPrint()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleBagAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleMultiply()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleNegate()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleSubtract()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimplify()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.zeroMoniesAreEqualRegardlessOfCurrency()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AllTests</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AllTestsTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AllTestsTest$All</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AllTestsTest$AllJUnit4</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AllTestsTest$BadSuiteMethod</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AllTestsTest$JUnit4Test</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCountAdapted()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$ErrorInAfterClass</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$ErrorInBeforeClass</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$ExceptionTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$FailureTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$NoExceptionTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$NonStaticOneTimeSetup</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$OneTimeSetup</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$OneTimeTeardown</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClasses</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfters</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SetupFailureTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SetupTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SimpleTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SuperShadowing</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SuperTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$TeardownAfterFailureTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$TeardownFailureTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$TeardownTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$TestAndTeardownFailureTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$TwoTests</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TwoTests.one()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TwoTests.two()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testExceptionNotThrown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AssertionTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysActualNullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysContainingIntsAreEqualToArraysContainingLongs()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDeclaredAsObjectAreComparedAsObjects()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement0nullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement0withMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1nullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1withMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferentLengthMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysElementsDiffer()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysEqualWithMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysExpectedNullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysNotEqualWithMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysWithNullElementEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.booleansNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.bytesNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.charsNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.equals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.errorMessageDistinguishesDifferentValuesWithSameToString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.implicitTypecastEquality()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.intsEqualLongs()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.intsNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.longsNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqualNoMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysDeclaredAsOneDimensionalAreEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalIntArraysAreEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSame()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSameNullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSameWithMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessageDisappearsWithAssertEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessageDisappearsWithStringAssertEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.objectsAreSame()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.objectsNotEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.objectsNotSame()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.same()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.sameNullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.sameWithMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.shortsNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.stringsDifferWithUserMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.stringsNotEqual()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ClassRequestTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ClassRequestTest$PrivateSuiteMethod</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.CommandLineTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.CommandLineTest$Count</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.CommandLineTest$Example</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClassesAsArray()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.EnclosedTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.EnclosedTest$Enclosing</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.EnclosedTest$Enclosing$A</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.EnclosedTest$Enclosing$B</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerIsNamedForEnclosingClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerPlansEnclosedClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerRunsEnclosedClasses()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ExpectedTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ExpectedTest$ExpectSuperclass</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ExpectedTest$Expected</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ExpectedTest$NoneThrown</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ExpectedTest$Unexpected</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.FailedConstructionTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.FailedConstructionTest$CantConstruct</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest.failedConstructionIsTestFailure()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$ATest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.startTest(junit.framework.Test)</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$ErrorTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$ExceptionInBeforeTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$ExpectedTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$InvalidMethodTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NoExceptionTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NoTests</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$UnExpectedExceptionTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testUseGlobalCache()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.IgnoreClassTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.IgnoreClassTest$IgnoreMe</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.IgnoreClassTest.ignoreClass()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.InaccessibleBaseClassTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$1</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitializeTests</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsShowUpAsWarnings()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.JUnitCoreTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.JUnitCoreTest$Fail</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.JUnitCoreTest$Succeed</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ListenerTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$1.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$2.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ListenerTest$OneTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.access$084(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.notifyListenersInTheOrderInWhichTheyAreAdded()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.OldTestClassRunnerTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.OldTestClassRunnerTest$AnnotatedTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.plansDecoratorCorrectly()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.OldTests</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest$EverythingWrong</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest$SuperWrong</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.params()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.testFailures()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestTest$BeforeAndAfter</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$BeforeAndAfter.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$BeforeAndAfter.before()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestTest$EmptyTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$EmptyTest.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$EmptyTest.before()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.data()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.test()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestTest$IncorrectTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$IncorrectTest.data()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestTest$ProtectedParametersTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestTest$WrongElementType</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$WrongElementType.data()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.access$084(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.beforeAndAfterClassAreRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.count()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.countBeforeRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresAddedForBadTestMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresNamedCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParameterListsAreNotArrays()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParametersNotPublic()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.validateClassCatchesNoParameters()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$1.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.testListener()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.RunWithTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.RunWithTest$Empty</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.RunWithTest$ExampleRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.testCount()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.RunWithTest$ExampleTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.access$084(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.characterizeErrorMessageFromBadRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.RunnerTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.RunnerTest$Example</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.RunnerTest$NewExample</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.newTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.oldTestCount()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SingleMethodTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SingleMethodTest$OneTimeSetup</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SingleMethodTest$OneTwoSuite</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SingleMethodTest$ParameterizedOneTimeSetup</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$ParameterizedOneTimeSetup.params()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SingleMethodTest$TestOne</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SingleMethodTest$TestTwo</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAffectsPlan()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.nonexistentMethodCreatesFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SortableTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SortableTest$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$1.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SortableTest$2</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$2.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$A</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$A.a()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$A.b()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$A.c()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$B</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$B.a()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$B.b()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$B.c()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe.a()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe.b()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe.c()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnTestClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnTestClassRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$Unsortable</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SuiteDescriptionTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.equalsIsCorrect()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.hashCodeIsReasonable()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SuiteMethodTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SuiteMethodTest$NewTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SuiteTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SuiteTest$All</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SuiteTest$AllWithBeforeAndAfterClass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$AllWithBeforeAndAfterClass.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$AllWithBeforeAndAfterClass.before()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SuiteTest$AllWithOutAnnotation</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SuiteTest$BiInfiniteLoop</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SuiteTest$Hercules</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SuiteTest$Hydra</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SuiteTest$InfiniteLoop</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SuiteTest$TestA</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SuiteTest$TestB</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SuiteTest$WithoutDefaultConstructor</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.access$084(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.beforeAndAfterClassRunOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureSuitesWorkWithForwardCompatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureTestIsRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithGetTests()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteTestCountIsCorrect()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteContainsItselfIndirectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasACycle()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasAForkingCycle()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest$FaultyConstructor</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest$NoTests</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.constructorException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.noRunnableMethods()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TestDescriptionTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestDescriptionTest.equalsIsFalseForNonTestDescription()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TestListenerTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TestListenerTest$OneTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.freshResultEachTime()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TestMethodTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TestMethodTest$Confused</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest$Confused.a(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TestMethodTest$EverythingWrong</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TestMethodTest$IgnoredTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TestMethodTest$OnlyTestIsIgnored</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TestMethodTest$SuperWrong</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.compatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.ignoreRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.onlyIgnoredMethodsIsStillFineTestClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.overloaded()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.testFailures()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateInheritedMethods()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TextListenerTest$ErrorTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TextListenerTest$OneTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TextListenerTest$Slow</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TimeoutTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TimeoutTest$FailureWithTimeoutRunTimeExceptionTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TimeoutTest$FailureWithTimeoutTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TimeoutTest$ImpatientLoopTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TimeoutTest$InfiniteLoopTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TimeoutTest$SuccessWithTimeoutTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TimeoutTest$TimeoutFailureTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.compatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoopRunsForApproximatelyLengthOfTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.successWithTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.UserStopTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.UserStopTest$OneTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopMethodRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ValidationTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ValidationTest$WrongBeforeClass</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.initializationErrorIsOnCorrectClass()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.anotherpackage.Super</inbound>
            <feature confirmed="no">
                <name>java.lang.Object.Object()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.Assert()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.JUnit4TestCaseFacade(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestResult, junit.framework.TestCase)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.BaseTestRunner()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.Version.Version()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.Assert()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.ComparisonFailure$ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.CompositeRunner$1(org.junit.internal.runners.CompositeRunner, org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.OldTestClassRunner$OldTestClassAdaptingListener(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.TestClassMethodsRunner$1(org.junit.internal.runners.TestClassMethodsRunner, org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.TestIntrospector(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.TestMethodRunner$1(org.junit.internal.runners.TestMethodRunner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.Request()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.Filter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.Sorter(java.util.Comparator)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.RunListener()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.RunNotifier()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.ListTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.SimpleTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.MoneyTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTests.AllTests()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$All.AllTestsTest$All()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$AllJUnit4.AllTestsTest$AllJUnit4()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$BadSuiteMethod.AllTestsTest$BadSuiteMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$JUnit4Test.AllTestsTest$JUnit4Test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.AllTestsTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$ErrorInAfterClass.AnnotationTest$ErrorInAfterClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$ErrorInBeforeClass.AnnotationTest$ErrorInBeforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$ExceptionTest.AnnotationTest$ExceptionTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$FailureTest.AnnotationTest$FailureTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$NoExceptionTest.AnnotationTest$NoExceptionTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$NonStaticOneTimeSetup.AnnotationTest$NonStaticOneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OneTimeSetup.AnnotationTest$OneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OneTimeTeardown.AnnotationTest$OneTimeTeardown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.AnnotationTest$OrderTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClasses.AnnotationTest$RunAllAfterClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.AnnotationTest$RunAllAfterClassesRegardless()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfters.AnnotationTest$RunAllAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless.AnnotationTest$RunAllAftersRegardless()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SetupFailureTest.AnnotationTest$SetupFailureTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SetupTest.AnnotationTest$SetupTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SimpleTest.AnnotationTest$SimpleTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.AnnotationTest$SuperInheritance()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperShadowing.AnnotationTest$SuperShadowing()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperTest.AnnotationTest$SuperTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TeardownAfterFailureTest.AnnotationTest$TeardownAfterFailureTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TeardownFailureTest.AnnotationTest$TeardownFailureTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TeardownTest.AnnotationTest$TeardownTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TestAndTeardownFailureTest.AnnotationTest$TestAndTeardownFailureTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TwoTests.AnnotationTest$TwoTests()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.AssertionTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysActualNullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysEqualWithMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysExpectedNullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysNotEqualWithMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.equals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSame()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSameNullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSameWithMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.objectsAreSame()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.objectsNotEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.objectsNotSame()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.same()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ClassRequestTest$PrivateSuiteMethod.ClassRequestTest$PrivateSuiteMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ClassRequestTest.ClassRequestTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest$Count.CommandLineTest$Count()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest$Example.CommandLineTest$Example()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.CommandLineTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest$Enclosing$A.EnclosedTest$Enclosing$A()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest$Enclosing$B.EnclosedTest$Enclosing$B()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest$Enclosing.EnclosedTest$Enclosing()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.EnclosedTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest$ExpectSuperclass.ExpectedTest$ExpectSuperclass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest$Expected.ExpectedTest$Expected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest$NoneThrown.ExpectedTest$NoneThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest$Unexpected.ExpectedTest$Unexpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.ExpectedTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest$CantConstruct.FailedConstructionTest$CantConstruct()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest.FailedConstructionTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$ATest.ForwardCompatibilityPrintingTest$ATest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.ForwardCompatibilityTest$1(org.junit.tests.ForwardCompatibilityTest, java.lang.StringBuffer)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.ForwardCompatibilityTest$BeforeClassTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$ErrorTest.ForwardCompatibilityTest$ErrorTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$ExceptionInBeforeTest.ForwardCompatibilityTest$ExceptionInBeforeTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$ExpectedTest.ForwardCompatibilityTest$ExpectedTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$InvalidMethodTest.ForwardCompatibilityTest$InvalidMethodTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.ForwardCompatibilityTest$NewTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NoExceptionTest.ForwardCompatibilityTest$NoExceptionTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NoTests.ForwardCompatibilityTest$NoTests()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$UnExpectedExceptionTest.ForwardCompatibilityTest$UnExpectedExceptionTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.IgnoreClassTest$IgnoreMe.IgnoreClassTest$IgnoreMe()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.IgnoreClassTest.IgnoreClassTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InaccessibleBaseClassTest.InaccessibleBaseClassTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitializeTests.InitializationErrorForwardCompatibilityTest$CantInitializeTests()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener(org.junit.tests.InitializationErrorForwardCompatibilityTest)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.InitializationErrorForwardCompatibilityTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest$Fail.JUnitCoreTest$Fail()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest$Succeed.JUnitCoreTest$Succeed()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.JUnitCoreTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$OneTest.ListenerTest$OneTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.ListenerTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.OldTestClassAdaptingListenerTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest$AnnotatedTest.OldTestClassRunnerTest$AnnotatedTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.OldTestClassRunnerTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTests.OldTests()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.ParameterizedTestMethodTest$EverythingWrong()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest$SuperWrong.ParameterizedTestMethodTest$SuperWrong()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.ParameterizedTestMethodTest(java.lang.Class, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$BeforeAndAfter.ParameterizedTestTest$BeforeAndAfter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$EmptyTest.ParameterizedTestTest$EmptyTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.ParameterizedTestTest$FibonacciTest(int, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$IncorrectTest.ParameterizedTestTest$IncorrectTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$ProtectedParametersTest.ParameterizedTestTest$ProtectedParametersTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$WrongElementType.ParameterizedTestTest$WrongElementType()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.ParameterizedTestTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.PreJUnit4TestCaseRunnerTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$Empty.RunWithTest$Empty()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleTest.RunWithTest$ExampleTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.RunWithTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$Example.RunnerTest$Example()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$NewExample.RunnerTest$NewExample()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.RunnerTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$OneTimeSetup.SingleMethodTest$OneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$OneTwoSuite.SingleMethodTest$OneTwoSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$ParameterizedOneTimeSetup.SingleMethodTest$ParameterizedOneTimeSetup(int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$TestOne.SingleMethodTest$TestOne()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$TestTwo.SingleMethodTest$TestTwo()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.SingleMethodTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$1.SortableTest$1()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$2.SortableTest$2()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$A.SortableTest$TestClassRunnerIsSortable$Enclosing$A()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$B.SortableTest$TestClassRunnerIsSortable$Enclosing$B()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing.SortableTest$TestClassRunnerIsSortable$Enclosing()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe.SortableTest$TestClassRunnerIsSortable$SortMe()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.SortableTest$TestClassRunnerIsSortable()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$Unsortable.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$Unsortable()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.SortableTest$UnsortableRunnersAreHandledWithoutCrashing()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest.SortableTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.SuiteDescriptionTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest$NewTest.SuiteMethodTest$NewTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.SuiteMethodTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$All.SuiteTest$All()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$AllWithBeforeAndAfterClass.SuiteTest$AllWithBeforeAndAfterClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$AllWithOutAnnotation.SuiteTest$AllWithOutAnnotation()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$BiInfiniteLoop.SuiteTest$BiInfiniteLoop()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$Hercules.SuiteTest$Hercules()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$Hydra.SuiteTest$Hydra()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$InfiniteLoop.SuiteTest$InfiniteLoop()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$TestA.SuiteTest$TestA()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$TestB.SuiteTest$TestB()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$WithoutDefaultConstructor.SuiteTest$WithoutDefaultConstructor(org.junit.tests.SuiteTest, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.SuiteTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest$FaultyConstructor.TestClassMethodsRunnerTest$FaultyConstructor()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest$NoTests.TestClassMethodsRunnerTest$NoTests()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.TestClassMethodsRunnerTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestDescriptionTest.TestDescriptionTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$OneTest.TestListenerTest$OneTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.TestListenerTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest$Confused.TestMethodTest$Confused()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest$EverythingWrong.TestMethodTest$EverythingWrong()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest$IgnoredTest.TestMethodTest$IgnoredTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest$OnlyTestIsIgnored.TestMethodTest$OnlyTestIsIgnored()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest$SuperWrong.TestMethodTest$SuperWrong()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.TestMethodTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest$ErrorTest.TextListenerTest$ErrorTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest$OneTest.TextListenerTest$OneTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest$Slow.TextListenerTest$Slow()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest$FailureWithTimeoutRunTimeExceptionTest.TimeoutTest$FailureWithTimeoutRunTimeExceptionTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest$FailureWithTimeoutTest.TimeoutTest$FailureWithTimeoutTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest$ImpatientLoopTest.TimeoutTest$ImpatientLoopTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest$InfiniteLoopTest.TimeoutTest$InfiniteLoopTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest$SuccessWithTimeoutTest.TimeoutTest$SuccessWithTimeoutTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest$TimeoutFailureTest.TimeoutTest$TimeoutFailureTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.TimeoutTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest$OneTest.UserStopTest$OneTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.UserStopTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest$WrongBeforeClass.ValidationTest$WrongBeforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.ValidationTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.anotherpackage.Super.Super()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.isEquals(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.runsTopToBottom(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNotEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagEquals()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.getClass()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.isArray(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.asDescription(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.isUnexpected(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.descriptionWithTwoKids(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestDescriptionTest.equalsIsFalseForNonTestDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.hashCode()</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagHash()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.notifyAll()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runFinished()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.toString()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.getName(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.expected(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToStringSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.convert(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testSuccess()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testTime()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.wait()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.waitUntilFinished()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Object[]</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqualNoMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.params()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.data()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Process</name>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            <feature confirmed="no">
                <name>java.lang.Process.getInputStream()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Process.waitFor()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Runtime</name>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            <feature confirmed="no">
                <name>java.lang.Runtime.exec(java.lang.String[])</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Runtime.getRuntime()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.RuntimeException</name>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.StoppedByUserException</inbound>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.StoppedByUserException.StoppedByUserException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest$CantConstruct.FailedConstructionTest$CantConstruct()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$BadSuiteMethod.suite()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Short</name>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.equals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.implicitTypecastEquality()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.shortsNotEqual()</inbound>
            <feature confirmed="no">
                <name>java.lang.Short.Short(short)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, short, short)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Short.valueOf(short)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.equals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.implicitTypecastEquality()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.shortsNotEqual()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.String</name>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(byte, byte)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(char, char)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(double, double, double)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(float, float, float)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(int, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, char, char)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, long, long)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, short, short)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(long, long)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(short, short)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertFalse(boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertFalse(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.fail()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.DELTA_END</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.DELTA_START</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.ELLIPSIS</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.areStringsEqual()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fActual</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fExpected</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonPrefix()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonSuffix()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fActual</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fExpected</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getActual()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getExpected()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.fName</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.getName()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.setName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.exceptionMessage()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.TestSuite$1(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.val$message</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.fName</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getName()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.setName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.SUITE_METHODNAME</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.elapsedTimeAsString(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.extractClassName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.filterLine(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.runFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.static {}</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testEnded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testStarted(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestRunListener.testEnded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestRunListener.testFailed(int, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestRunListener.testRunStarted(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestRunListener.testStarted(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.Version.id()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.Version.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.elapsedTimeAsString(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.testEnded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.testStarted(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(byte[], byte[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(char[], char[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(int[], int[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.Object[], java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, byte[], byte[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, char[], char[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, int[], int[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, long[], long[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, short[], short[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(long[], long[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(short[], short[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(double, double, double)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertFalse(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertFalse(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.fail()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.failSame(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.ComparisonFailure$ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.DELTA_END</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.DELTA_START</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.ELLIPSIS</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.areStringsEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fActual</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fExpected</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.fActual</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.fExpected</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getActual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getExpected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Ignore.value()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.ArrayComparisonFailure(java.lang.String, java.lang.AssertionError, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.fMessage</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.CONSTRUCTOR_ERROR_FORMAT</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.hasSuiteMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.ClassesRequest(java.lang.String, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.fName</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fName</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.asDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.getName(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testName(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.elapsedTimeAsString(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureTrace(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.fDisplayName</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.hashCode()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.getVersion()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.describe()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.classes(java.lang.String, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.method(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter$1.describe()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.describe()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTestHeader()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.addParent(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.testEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.setUp()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagMultiply()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNegate()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNotEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSimpleAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSubtract()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSumAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testIsZero()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagHash()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyHash()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize2()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize3()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize4()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testPrint()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleBagAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleMultiply()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleNegate()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleSubtract()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimplify()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.zeroMoniesAreEqualRegardlessOfCurrency()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$BadSuiteMethod.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.onceAfter()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.onceBefore()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.test()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClasses.one()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClasses.two()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.one()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.two()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfters.one()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfters.two()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless.one()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless.two()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.afterClassSub()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.afterSub()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.beforeClassSub()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.beforeSub()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.test()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.test()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubTest.one()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.afterClassSuper()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.afterSuper()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.beforeClassSuper()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.beforeSuper()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperShadowing.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperShadowing.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperTest.one()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperTest.two()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testExceptionNotThrown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrder()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrderingOfInheritance()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClassesRegardless()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAftersRegardless()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testShadowing()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestInheritance()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysActualNullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement0nullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement0withMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1nullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1withMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferentLengthMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysElementsDiffer()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysEqualWithMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysExpectedNullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysNotEqualWithMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.errorMessageDistinguishesDifferentValuesWithSameToString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqual()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqualNoMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSameNullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSameWithMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessageDisappearsWithAssertEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessageDisappearsWithStringAssertEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.sameNullMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.sameWithMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.stringsDifferWithUserMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runATest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerIsNamedForEnclosingClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest.failedConstructionIsTestFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$1.printErrors(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$3.printErrors(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$TestResultPrinter.elapsedTimeAsString(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.expected(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.afterClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.beforeClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.one()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.two()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.test()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.fLog</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.log</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testBeforeAndAfterClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testCompatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToStringSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitialize.InitializationErrorForwardCompatibilityTest$CantInitialize(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitialize.UNIQUE_ERROR_MESSAGE</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.failureCausesExitCodeOf1()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.missingClassCausesExitCodeOf1()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.successCausesExitCodeOf0()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$1.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$2.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.access$084(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.log</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.notifyListenersInTheOrderInWhichTheyAreAdded()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$BeforeAndAfter.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$BeforeAndAfter.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$EmptyTest.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$EmptyTest.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$WrongElementType.data()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.access$084(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.beforeAndAfterClassAreRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.fLog</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresNamedCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParameterListsAreNotArrays()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParametersNotPublic()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$1.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.RunWithTest$ExampleRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.testCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.access$084(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.characterizeErrorMessageFromBadRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.log</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.runWithExtendsToSubclasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$1.describe()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAffectsPlan()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.nonexistentMethodCreatesFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$1.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$2.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$A.a()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$A.b()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$A.c()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$B.a()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$B.b()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$B.c()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe.a()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe.b()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe.c()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.log</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.resetLog()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnTestClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnTestClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.SuiteDescriptionTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.descriptionWithTwoKids(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest$OldTest.SuiteMethodTest$OldTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest$OldTest.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$AllWithBeforeAndAfterClass.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$AllWithBeforeAndAfterClass.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.access$084(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.beforeAndAfterClassRunOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.log</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest$FaultyConstructor.TestClassMethodsRunnerTest$FaultyConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.constructorException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.noRunnableMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestDescriptionTest.equalsIsFalseForNonTestDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.convert(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testError()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testSuccess()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testTime()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoopRunsForApproximatelyLengthOfTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopMethodRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.initializationErrorIsOnCorrectClass()</inbound>
            <feature confirmed="no">
                <name>java.lang.String.charAt(int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.compareTo(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$1.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$2.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.contains(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClassesRegardless()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAftersRegardless()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestInheritance()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.run()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.runWithExtendsToSubclasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testTime()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.endsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testSuccess()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.areStringsEqual()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.areStringsEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.format(java.lang.String, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.describe()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.addParent(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresNamedCorrectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParameterListsAreNotArrays()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParametersNotPublic()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoopRunsForApproximatelyLengthOfTimeout()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.hashCode()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.hashCode()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.indexOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.filterLine(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testError()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.lastIndexOf(int)</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.lastIndexOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.extractClassName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.length()</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.convert(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.startsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.extractClassName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testSuccess()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.extractClassName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int, int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.StringBuffer</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.ForwardCompatibilityTest$1(org.junit.tests.ForwardCompatibilityTest, java.lang.StringBuffer)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.val$log</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.StringBuffer()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.append(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.toString()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.StringBuilder</name>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.failSame(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.onceAfter()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.onceBefore()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.test()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClasses.one()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClasses.two()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.one()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.two()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfters.one()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfters.two()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless.one()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless.two()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.afterClassSub()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.afterSub()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.beforeClassSub()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.beforeSub()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.test()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.test()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubTest.one()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.afterClassSuper()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.afterSuper()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.beforeClassSuper()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.beforeSuper()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperShadowing.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperShadowing.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperTest.one()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperTest.two()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.afterClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.beforeClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.one()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.two()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.after()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.before()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.test()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.access$084(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.access$084(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.access$084(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.access$084(java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failSame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.onceAfter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.onceBefore()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClasses.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClasses.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfters.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfters.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.afterClassSub()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.afterSub()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.beforeClassSub()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.beforeSub()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubTest.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.afterClassSuper()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.afterSuper()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.beforeClassSuper()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.beforeSuper()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperShadowing.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperShadowing.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperTest.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperTest.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.afterClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.beforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.access$084(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(int)</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.access$084(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failSame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.onceAfter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.onceBefore()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClasses.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClasses.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfters.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfters.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.afterClassSub()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.afterSub()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.beforeClassSub()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.beforeSub()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubTest.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.afterClassSuper()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.afterSuper()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.beforeClassSuper()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.beforeSuper()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperShadowing.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperShadowing.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperTest.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperTest.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.afterClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.beforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.access$084(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.toString()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failSame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.onceAfter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.onceBefore()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClasses.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClasses.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfters.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfters.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.afterClassSub()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.afterSub()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.beforeClassSub()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.beforeSub()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubTest.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.afterClassSuper()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.afterSuper()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.beforeClassSuper()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.beforeSuper()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperShadowing.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperShadowing.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperTest.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperTest.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.afterClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.beforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.access$084(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.System</name>
            <feature confirmed="no">
                <name>java.lang.System.currentTimeMillis()</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunFinished(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunStarted(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.runAndTime(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.err</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runFailed(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.exit(int)</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runFailed(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.killAllThreads(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.getProperty(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.in</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.out</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.Version.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.before()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.setOut(java.io.PrintStream)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.before()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Thread</name>
            <inbound type="class" confirmed="yes">junit.extensions.ActiveTestSuite$1</inbound>
            <feature confirmed="no">
                <name>java.lang.Thread.Thread()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.sleep(long)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest$Slow.pause()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest$TimeoutFailureTest.success()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.start()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ThreadDeath</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Throwable</name>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Protectable.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runBare()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.exceptionMessage()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.fThrownException</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.isFailure()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.thrownException()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestResult, junit.framework.TestCase)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="class" confirmed="yes">org.junit.Test$None</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.ErrorReportingRequest(java.lang.Class, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.fCause</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.ErrorReportingRunner(org.junit.runner.Description, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.fCause</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.Throwable[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.isUnexpected(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.errorReport(java.lang.Class, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.fThrownException</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.testAborted(org.junit.runner.Description, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.AllTests(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCountAdapted()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.exceptionThrownWhenSuiteIsBad()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.stringsDifferWithUserMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.constructorException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.noRunnableMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            <feature confirmed="no">
                <name>java.lang.Throwable.Throwable()</name>
                <inbound type="feature" confirmed="yes">org.junit.Test$None.Test$None()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Throwable.getCause()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Throwable.getMessage()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.exceptionMessage()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.stringsDifferWithUserMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.constructorException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.noRunnableMethods()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Throwable.printStackTrace(java.io.PrintWriter)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Throwable.toString()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Void</name>
            <feature confirmed="no">
                <name>java.lang.Void.TYPE</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.annotation</name>
        <class confirmed="no">
            <name>java.lang.annotation.Annotation</name>
            <inbound type="class" confirmed="yes">org.junit.After</inbound>
            <inbound type="class" confirmed="yes">org.junit.AfterClass</inbound>
            <inbound type="class" confirmed="yes">org.junit.Before</inbound>
            <inbound type="class" confirmed="yes">org.junit.BeforeClass</inbound>
            <inbound type="class" confirmed="yes">org.junit.Ignore</inbound>
            <inbound type="class" confirmed="yes">org.junit.Test</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTimeout(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isIgnored(java.lang.reflect.Method)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.RunWith</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Parameterized$Parameters</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Suite$SuiteClasses</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.annotation.Annotation.annotationType()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.reflect</name>
        <class confirmed="no">
            <name>java.lang.reflect.Array</name>
            <feature confirmed="no">
                <name>java.lang.reflect.Array.get(java.lang.Object, int)</name>
                <inbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Array.getLength(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Constructor</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.createTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fConstructor</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.getParameterTypes()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.newInstance(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.createTest()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.InvocationTargetException</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.executeMethodBody()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.InvocationTargetException.fillInStackTrace()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.InvocationTargetException.getCause()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.InvocationTargetException.getTargetException()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Method</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.hasSuiteMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testName(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTimeout(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isIgnored(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.executeMethodBody()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fMethod</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopMethodRunner()</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTimeout(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isIgnored(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getAnnotations()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getDeclaringClass()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getModifiers()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getName()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testName(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getParameterTypes()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getReturnType()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.executeMethodBody()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Modifier</name>
            <feature confirmed="no">
                <name>java.lang.reflect.Modifier.isPublic(int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Modifier.isStatic(int)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.net</name>
        <class confirmed="no">
            <name>java.net.URL</name>
            <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            <feature confirmed="no">
                <name>java.net.URL.getFile()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.text</name>
        <class confirmed="no">
            <name>java.text.NumberFormat</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.elapsedTimeAsString(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.elapsedTimeAsString(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.elapsedTimeAsString(long)</inbound>
            <feature confirmed="no">
                <name>java.text.NumberFormat.format(double)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.elapsedTimeAsString(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.elapsedTimeAsString(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.elapsedTimeAsString(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.text.NumberFormat.getInstance()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.elapsedTimeAsString(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.elapsedTimeAsString(long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.elapsedTimeAsString(long)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util</name>
        <class confirmed="no">
            <name>java.util.ArrayList</name>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.addChild(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.fChildren</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.isTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList()</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.ArrayComparisonFailure(java.lang.String, java.lang.AssertionError, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getSuperClasses(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.RunNotifier()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.eachOne(java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.setUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.setUpOnce()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList(int)</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.testCopy()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getSuperClasses(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.addChild(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.get(int)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.isEmpty()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.isTest()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.iterator()</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.size()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Arrays</name>
            <feature confirmed="no">
                <name>java.util.Arrays.asList(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.Throwable[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.params()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.data()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$WrongElementType.data()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Collection</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.addAll(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.eachOne(java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.removeAll()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.testCopy()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TwoTests.one()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TwoTests.two()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTwoTests()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.tests</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.params()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$BeforeAndAfter.data()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.data()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$IncorrectTest.data()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$ProtectedParametersTest.data()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$WrongElementType.data()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$ParameterizedOneTimeSetup.params()</inbound>
            <feature confirmed="no">
                <name>java.util.Collection.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TwoTests.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TwoTests.two()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collection.iterator()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collection.size()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTwoTests()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Collections</name>
            <feature confirmed="no">
                <name>java.util.Collections.emptyList()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.validateAllMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$BeforeAndAfter.data()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$ProtectedParametersTest.data()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateAllMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.enumeration(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.reverse(java.util.List)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.sort(java.util.List, java.util.Comparator)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Comparator</name>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.SortingRequest(org.junit.runner.Request, java.util.Comparator)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.fComparator</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.getRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.CompositeRunner$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.sortWith(java.util.Comparator)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.Sorter(java.util.Comparator)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.fComparator</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SortableTest$1</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SortableTest$2</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnTestClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnTestClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.testClassRunnerCanBeWrappedAroundUnsortable()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.unsortablesAreHandledWithoutCrashing()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest.access$100()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest.access$200()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest.backward()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest.forward()</inbound>
            <feature confirmed="no">
                <name>java.util.Comparator.compare(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Enumeration</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.tests()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</inbound>
            <feature confirmed="no">
                <name>java.util.Enumeration.hasMoreElements()</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Enumeration.nextElement()</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.HashMap</name>
            <inbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</inbound>
            <feature confirmed="no">
                <name>java.util.HashMap.HashMap()</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.JUnit4TestAdapterCache()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.HashSet</name>
            <feature confirmed="no">
                <name>java.util.HashSet.HashSet()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTwoTests()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Iterator</name>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.util.Iterator.hasNext()</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Iterator.next()</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Iterator.remove()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.List</name>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.fErrors</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.fFailures</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.fListeners</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.removeListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.ArrayComparisonFailure(java.lang.String, java.lang.AssertionError, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.addDimension(int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.fIndices</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.addAll(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getRunners()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.Throwable[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.fErrors</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.getCauses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.assertValid()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fErrors</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestMethods</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.validate(org.junit.internal.runners.MethodValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getSuperClasses(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$300(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result.fFailures</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.RunNotifier()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.access$000(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fListeners</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.capacity()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.contains()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.elementAt()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.fEmpty</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.fFull</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.fgHeavy</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.removeAll()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.removeElement()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.setUp()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.setUpOnce()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.testCopy()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testExceptionNotThrown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest.failedConstructionIsTestFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testUseGlobalCache()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InaccessibleBaseClassTest.inaccessibleBaseClassIsCaughtAtValidation()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsShowUpAsWarnings()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.params()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.testFailures()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.validateAllMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$BeforeAndAfter.data()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.data()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$ProtectedParametersTest.data()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$WrongElementType.data()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresNamedCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParameterListsAreNotArrays()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParametersNotPublic()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.characterizeErrorMessageFromBadRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithGetTests()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.constructorException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.noRunnableMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.dontValidateShadowedMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.overloaded()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.testFailures()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateAllMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateInheritedMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            <feature confirmed="no">
                <name>java.util.List.add(int, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.addDimension(int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.eachOne(java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.capacity()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.setUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.setUpOnce()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.addAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.addAll(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.testCopy()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.contains(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.contains()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.removeElement()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.testCopy()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.get(int)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.elementAt()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testExceptionNotThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest.failedConstructionIsTestFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testUseGlobalCache()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresNamedCorrectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParameterListsAreNotArrays()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParametersNotPublic()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.characterizeErrorMessageFromBadRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.constructorException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.noRunnableMethods()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.isEmpty()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.assertValid()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.removeAll()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.dontValidateShadowedMethods()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.iterator()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.remove(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.removeListener(junit.framework.TestListener)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.removeElement()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.removeAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.removeAll()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.size()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.capacity()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.elementAt()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.testCopy()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsShowUpAsWarnings()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.testFailures()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithGetTests()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.overloaded()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.testFailures()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateInheritedMethods()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.toArray(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Properties</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fPreferences</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreferences(java.util.Properties)</inbound>
            <feature confirmed="no">
                <name>java.util.Properties.Properties()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.Properties(java.util.Properties)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.getProperty(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.load(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.store(java.io.OutputStream, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Set</name>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.addParent(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.parents</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.static {}</inbound>
            <feature confirmed="no">
                <name>java.util.Set.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.addParent(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.remove(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Vector</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testCount()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.tests()</inbound>
            <feature confirmed="no">
                <name>java.util.Vector.Vector(int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.elements()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.tests()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.get(int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.iterator()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.size()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testCount()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.concurrent</name>
        <class confirmed="no">
            <name>java.util.concurrent.Callable</name>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.ExecutorService</name>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.ExecutorService.awaitTermination(long, java.util.concurrent.TimeUnit)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ExecutorService.shutdown()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ExecutorService.shutdownNow()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.Executors</name>
            <feature confirmed="no">
                <name>java.util.concurrent.Executors.newSingleThreadExecutor()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.Future</name>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.Future.get(long, java.util.concurrent.TimeUnit)</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.TimeUnit</name>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.TimeUnit.MILLISECONDS</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.TimeoutException</name>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
        </class>
    </package>
    <package confirmed="yes">
        <name>junit.extensions</name>
        <class confirmed="yes">
            <name>junit.extensions.ActiveTestSuite</name>
            <outbound type="class" confirmed="yes">junit.framework.TestSuite</outbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.this$0</inbound>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.ActiveTestSuite()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.fActiveTestDeathCount</name>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runFinished()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.waitUntilFinished()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.run(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.fActiveTestDeathCount</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.waitUntilFinished()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.runFinished()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.notifyAll()</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.fActiveTestDeathCount</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="no">java.lang.Thread.start()</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
            </feature>
            <feature confirmed="no">
                <name>junit.extensions.ActiveTestSuite.testCount()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.waitUntilFinished()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.waitUntilFinished()</name>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.wait()</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.fActiveTestDeathCount</outbound>
                <outbound type="feature" confirmed="no">junit.extensions.ActiveTestSuite.testCount()</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.run(junit.framework.TestResult)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.extensions.ActiveTestSuite$1</name>
            <outbound type="class" confirmed="no">java.lang.Thread</outbound>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="no">java.lang.Thread.Thread()</outbound>
                <outbound type="class" confirmed="yes">junit.extensions.ActiveTestSuite</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$result</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite$1.run()</name>
                <outbound type="class" confirmed="yes">junit.extensions.ActiveTestSuite</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$result</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$test</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runFinished()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.extensions.ActiveTestSuite</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite$1.val$result</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite$1.val$test</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.extensions.RepeatedTest</name>
            <outbound type="class" confirmed="yes">junit.extensions.TestDecorator</outbound>
            <feature confirmed="yes">
                <name>junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.fTimesRepeat</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.RepeatedTest.countTestCases()</name>
                <outbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.fTimesRepeat</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.countTestCases()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.RepeatedTest.fTimesRepeat</name>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.RepeatedTest.run(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.fTimesRepeat</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.shouldStop()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.RepeatedTest.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.toString()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.extensions.TestDecorator</name>
            <outbound type="class" confirmed="yes">junit.framework.Assert</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            <inbound type="class" confirmed="yes">junit.extensions.RepeatedTest</inbound>
            <inbound type="class" confirmed="yes">junit.extensions.TestSetup</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.Assert()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.TestSetup(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.plansDecoratorCorrectly()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.countTestCases()</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.countTestCases()</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.countTestCases()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.fTest</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.getTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.getTest()</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.run(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.toString()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.extensions.TestSetup</name>
            <outbound type="class" confirmed="yes">junit.extensions.TestDecorator</outbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.this$0</inbound>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup.TestSetup(junit.framework.Test)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="no">
                <name>junit.extensions.TestSetup.basicRun(junit.framework.TestResult)</name>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup.run(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Protectable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup.setUp()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup.tearDown()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.extensions.TestSetup$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Protectable</outbound>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.extensions.TestSetup</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.val$result</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup$1.protect()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">junit.extensions.TestSetup</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.val$result</outbound>
                <outbound type="feature" confirmed="no">junit.extensions.TestSetup.basicRun(junit.framework.TestResult)</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup.setUp()</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup.tearDown()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.extensions.TestSetup</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup$1.val$result</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>junit.framework</name>
        <class confirmed="yes">
            <name>junit.framework.Assert</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">junit.extensions.TestDecorator</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestCase</inbound>
            <feature confirmed="yes">
                <name>junit.framework.Assert.Assert()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(boolean, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(byte, byte)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(char, char)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, char, char)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(double, double, double)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(float, float, float)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(int, int)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</name>
                <outbound type="feature" confirmed="no">java.lang.Byte.Byte(byte)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(byte, byte)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, char, char)</name>
                <outbound type="feature" confirmed="no">java.lang.Character.Character(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(char, char)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</name>
                <outbound type="feature" confirmed="no">java.lang.Double.Double(double)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.compare(double, double)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.abs(double)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(double, double, double)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</name>
                <outbound type="feature" confirmed="no">java.lang.Float.Float(float)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Float.compare(float, float)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.abs(float)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(float, float, float)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, int, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.Integer(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, char, char)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, long, long)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, short, short)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, long, long)</name>
                <outbound type="feature" confirmed="no">java.lang.Long.Long(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(long, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, short, short)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Short.Short(short)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(short, short)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(long, long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, long, long)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(short, short)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, short, short)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertFalse(boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertFalse(java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertFalse(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertFalse(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNotNull(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNull(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertTrue(boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertTrue(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertFalse(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.fail()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.fail(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.fail()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.failSame(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.AssertionFailedError</name>
            <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
            <inbound type="class" confirmed="yes">junit.framework.ComparisonFailure</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.isFailure()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
            <feature confirmed="yes">
                <name>junit.framework.AssertionFailedError.AssertionFailedError()</name>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.framework.AssertionFailedError.getMessage()</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.AssertionFailedError.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.ComparisonCompactor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.ComparisonCompactor(int, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fContextLength</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fExpected</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.DELTA_END</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.DELTA_START</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.ELLIPSIS</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.areStringsEqual()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fExpected</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.compact(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.areStringsEqual()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonPrefix()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonSuffix()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.compactString(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fPrefix</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fSuffix</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.computeCommonPrefix()</name>
                <outbound type="feature" confirmed="no">java.lang.Math.max(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fContextLength</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fPrefix</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.computeCommonSuffix()</name>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fContextLength</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fSuffix</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.fActual</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.areStringsEqual()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.fContextLength</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.fExpected</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.areStringsEqual()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.fPrefix</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.fSuffix</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.findCommonPrefix()</name>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fPrefix</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonCompactor.findCommonSuffix()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fPrefix</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.fSuffix</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.ComparisonFailure</name>
            <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fActual</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fExpected</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.MAX_CONTEXT_LENGTH</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.fActual</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getActual()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.fExpected</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getExpected()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.getActual()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fActual</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.getExpected()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fExpected</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.getMessage()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">junit.framework.AssertionFailedError.getMessage()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.ComparisonCompactor(int, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonCompactor.compact(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fActual</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fExpected</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.JUnit4TestAdapter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.createAdapter()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.fAdapter</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsShowUpAsWarnings()</inbound>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getDefault()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.suite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.suite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.suite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTests.suite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$AllJUnit4.suite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testBeforeAndAfterClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testCompatibility()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testExceptionInBefore()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testExpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNoException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testRunWithClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToStringSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testUseGlobalCache()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.createAdapter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.suite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest$NewTest.suite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureSuitesWorkWithForwardCompatibility()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithGetTests()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.compatibility()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.compatibility()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fNewTestClass</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fRunner</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.classWithoutSuiteMethod(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.countTestCases()</name>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fRunner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.testCount()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithTestCount()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.fCache</name>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.fNewTestClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTestClass()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.fRunner</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.getDescription()</name>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fRunner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.getTestClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fNewTestClass</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.getTests()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getDescription()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testUseGlobalCache()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsShowUpAsWarnings()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithGetTests()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fRunner</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.run(org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.compatibility()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.compatibility()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapter.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fNewTestClass</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.JUnit4TestAdapterCache</name>
            <outbound type="class" confirmed="no">java.util.HashMap</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fCache</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.JUnit4TestAdapterCache$1(junit.framework.JUnit4TestAdapterCache, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.this$0</inbound>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.JUnit4TestAdapterCache()</name>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">junit.framework.JUnit4TestAdapterCache.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="no">junit.framework.JUnit4TestAdapterCache.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">junit.framework.JUnit4TestAdapterCache.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.isSuite()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.isTest()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.framework.JUnit4TestAdapterCache.containsKey(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.JUnit4TestCaseFacade(org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.isTest()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.fInstance</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getDefault()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.framework.JUnit4TestAdapterCache.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.getDefault()</name>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.fInstance</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</name>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapter</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.JUnit4TestAdapterCache$1(junit.framework.JUnit4TestAdapterCache, junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.RunNotifier()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.framework.JUnit4TestAdapterCache.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache.static {}</name>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.JUnit4TestAdapterCache()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.fInstance</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.JUnit4TestAdapterCache$1</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache$1.JUnit4TestAdapterCache$1(junit.framework.JUnit4TestAdapterCache, junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.val$result</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.RunListener()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.val$result</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getDescription()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.val$result</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.val$result</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.JUnit4TestAdapterCache$1(junit.framework.JUnit4TestAdapterCache, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestAdapterCache$1.val$result</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.JUnit4TestAdapterCache$1(junit.framework.JUnit4TestAdapterCache, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.JUnit4TestCaseFacade</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.asDescription(junit.framework.Test)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestCaseFacade.JUnit4TestCaseFacade(org.junit.runner.Description)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.fDescription</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestCaseFacade.countTestCases()</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestCaseFacade.fDescription</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.JUnit4TestCaseFacade(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.getDescription()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestCaseFacade.getDescription()</name>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.fDescription</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.asDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestCaseFacade.run(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.JUnit4TestCaseFacade.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.toString()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.Protectable</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">junit.extensions.TestSetup$1</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.run(junit.framework.TestResult)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestResult$1</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.Protectable.protect()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.Test</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$test</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</inbound>
            <inbound type="class" confirmed="yes">junit.extensions.TestDecorator</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.countTestCases()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.getTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.TestSetup(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.run(junit.framework.TestResult)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapter</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.JUnit4TestCaseFacade</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestCase</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.fFailedTest</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.failedTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestSuite</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runAndWait(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.asDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.getName(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.fTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.AllTests(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTests.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$All.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$AllJUnit4.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$BadSuiteMethod.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldSuiteTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ClassRequestTest$PrivateSuiteMethod.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.fError</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.getError()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.plansDecoratorCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTests.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest$NewTest.suite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest$OldTest.suite()</inbound>
            <feature confirmed="yes">
                <name>junit.framework.Test.countTestCases()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Test.run(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testBeforeAndAfterClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testCompatibility()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testExceptionInBefore()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testExpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNoException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testRunWithClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureSuitesWorkWithForwardCompatibility()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestCase</name>
            <outbound type="class" confirmed="yes">junit.framework.Assert</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestResult, junit.framework.TestCase)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.val$test</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestSuite$1</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.isPre4Test(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.getName(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AllTestsTest$OneTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$OldSuiteTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$OldTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$2</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest$1</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.OldTestClassRunnerTest$MyTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$OneTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.RunnerTest$ExampleTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SuiteMethodTest$OldTest</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TextListenerTest</inbound>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.TestCase()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.Assert()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.fName</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$OneTest.AllTestsTest$OneTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OldSuiteTest.AnnotationTest$OldSuiteTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OldTest.AnnotationTest$OldTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.AnnotationTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$2.ForwardCompatibilityPrintingTest$2(org.junit.tests.ForwardCompatibilityPrintingTest)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.ForwardCompatibilityPrintingTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.ForwardCompatibilityTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest$1.OldTestClassAdaptingListenerTest$1(org.junit.tests.OldTestClassAdaptingListenerTest)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest$MyTest.OldTestClassRunnerTest$MyTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$OneTest.PreJUnit4TestCaseRunnerTest$OneTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$ExampleTest.RunnerTest$ExampleTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.TextListenerTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.TestCase(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.Assert()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.fName</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.TestSuite$1(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest$OldTest.SuiteMethodTest$OldTest(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.framework.TestCase.assertNotNull(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.countTestCases()</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.createResult()</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.fName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.getName()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.setName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.framework.TestCase.fail(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.getName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.fName</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.getName(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.run()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.createResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.run(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.runBare()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.setUp()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.tearDown()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.protect()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.runTest()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Class[]</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalAccessException.fillInStackTrace()</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.fillInStackTrace()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isPublic(int)</outbound>
                <outbound type="feature" confirmed="no">junit.framework.TestCase.assertNotNull(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.fName</outbound>
                <outbound type="feature" confirmed="no">junit.framework.TestCase.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runBare()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.setName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.fName</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.setUp()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runBare()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.tearDown()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runBare()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.getName()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestFailure</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefect(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</inbound>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fFailedTest</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fThrownException</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.exceptionMessage()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.thrownException()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.fFailedTest</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.failedTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.fThrownException</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.thrownException()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.failedTest()</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fFailedTest</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.isFailure()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.thrownException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.thrownException()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fThrownException</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.exceptionMessage()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.isFailure()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testException()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fFailedTest</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fThrownException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.trace()</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.getBuffer()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.printStackTrace(java.io.PrintWriter)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.thrownException()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestListener</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.removeListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            <inbound type="class" confirmed="yes">junit.runner.BaseTestRunner</inbound>
            <inbound type="class" confirmed="yes">junit.textui.ResultPrinter</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.createAdaptingListener(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
            <feature confirmed="yes">
                <name>junit.framework.TestListener.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestListener.endTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestListener.startTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestResult</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$result</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.val$result</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.JUnit4TestAdapterCache$1(junit.framework.JUnit4TestAdapterCache, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.val$result</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.createResult()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestResult, junit.framework.TestCase)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.createTestResult()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runAndWait(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$1.printErrors(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$3.printErrors(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testBeforeAndAfterClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testCompatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testExceptionInBefore()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testExpected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNoException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testRunWithClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureSuitesWorkWithForwardCompatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.compatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.compatibility()</inbound>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.TestResult()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fErrors</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fFailures</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fListeners</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fRunTests</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fStop</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.createResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.createTestResult()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testBeforeAndAfterClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testCompatibility()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testExceptionInBefore()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testExpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNoException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testRunWithClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureSuitesWorkWithForwardCompatibility()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.compatibility()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.compatibility()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestListener.addError(junit.framework.Test, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fErrors</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fFailures</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.addListener(junit.framework.TestListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fListeners</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.cloneListeners()</name>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fListeners</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.endTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestListener.endTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.errorCount()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fErrors</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testExceptionInBefore()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.compatibility()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.errors()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fErrors</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.fErrors</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.fFailures</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.fListeners</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.removeListener(junit.framework.TestListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.fRunTests</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.runCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.fStop</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.shouldStop()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.stop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.failureCount()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fFailures</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.failures()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fFailures</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.removeListener(junit.framework.TestListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.remove(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fListeners</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.run(junit.framework.TestCase)</name>
                <outbound type="class" confirmed="yes">junit.framework.Protectable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestResult, junit.framework.TestCase)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.runCount()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fRunTests</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureSuitesWorkWithForwardCompatibility()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.compatibility()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</name>
                <outbound type="class" confirmed="no">java.lang.ThreadDeath</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Protectable</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Protectable.protect()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.shouldStop()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fStop</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.startTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.countTestCases()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestListener.startTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fRunTests</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.stop()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fStop</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.wasSuccessful()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testExpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNoException()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestResult$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Protectable</outbound>
            <feature confirmed="yes">
                <name>junit.framework.TestResult$1.TestResult$1(junit.framework.TestResult, junit.framework.TestCase)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult$1.val$test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult$1.protect()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.runBare()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult$1.val$test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestResult, junit.framework.TestCase)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult$1.val$test</name>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestResult, junit.framework.TestCase)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.protect()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestSuite</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            <inbound type="class" confirmed="yes">junit.extensions.ActiveTestSuite</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.TestSuite()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$All.suite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$AllJUnit4.suite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest$OldTest.suite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.TestSuite(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getDeclaredMethods()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSuperclass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isPublic(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fName</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldSuiteTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.plansDecoratorCorrectly()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.setName(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.TestSuite(java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.asSubclass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector(int)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[], java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.TestSuite(java.lang.Class[], java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.setName(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.TestSuite(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.setName(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.addTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$AllJUnit4.suite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest$OldTest.suite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.addTestSuite(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$All.suite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.countTestCases()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.iterator()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.countTestCases()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.getParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.setName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.toString()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.printStackTrace(java.io.PrintWriter)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.fName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getName()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.setName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.fTests</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.tests()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.getName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fName</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.getTestConstructor(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getConstructor(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isPublic(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.run(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.iterator()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.shouldStop()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.setName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fName</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.testAt(int)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.get(int)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.testCount()</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.tests()</name>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elements()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.toString()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.getName()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.warning(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite$1.TestSuite$1(java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestSuite$1</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite$1.TestSuite$1(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite$1.val$message</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.framework.TestSuite$1.fail(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.runTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite$1.runTest()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">junit.framework.TestSuite$1.fail(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite$1.val$message</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite$1.val$message</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.TestSuite$1(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.runTest()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>junit.runner</name>
        <class confirmed="yes">
            <name>junit.runner.BaseTestRunner</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
            <inbound type="class" confirmed="yes">junit.textui.TestRunner</inbound>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.BaseTestRunner()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fLoading</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.SUITE_METHODNAME</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.clearStatus()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.elapsedTimeAsString(long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.text.NumberFormat</outbound>
                <outbound type="feature" confirmed="no">java.text.NumberFormat.format(double)</outbound>
                <outbound type="feature" confirmed="no">java.text.NumberFormat.getInstance()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.endTest(junit.framework.Test)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testEnded(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.extractClassName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.fLoading</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.BaseTestRunner()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setLoading(boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.fPreferences</name>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreferences(java.util.Properties)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.fgFilterStack</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.fgMaxMessageLength</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.static {}</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.filterLine(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.io.BufferedReader.BufferedReader(java.io.Reader)</outbound>
                <outbound type="feature" confirmed="no">java.io.BufferedReader.readLine()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="feature" confirmed="no">java.io.StringReader.StringReader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.toString()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.filterLine(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.getBuffer()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.printStackTrace(java.io.PrintWriter)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getPreference(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.getProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.parseInt(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getPreferences()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.Properties()</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fPreferences</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getPreferencesFile()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getTest(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassNotFoundException.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalAccessException.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Object[]</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isStatic(int)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.clearStatus()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.runFailed(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.asSubclass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.processArguments(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.extractClassName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fgFilterStack</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setLoading(boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.readPreferences()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileInputStream.FileInputStream(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.Properties(java.util.Properties)</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.load(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreferences(java.util.Properties)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.runFailed(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.savePreferences()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileOutputStream.FileOutputStream(java.io.File)</outbound>
                <outbound type="feature" confirmed="no">java.io.FileOutputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.store(java.io.OutputStream, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.setLoading(boolean)</name>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fLoading</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.setPreferences(java.util.Properties)</name>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fPreferences</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.showStackRaw()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fgFilterStack</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.startTest(junit.framework.Test)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testStarted(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.static {}</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fgFilterStack</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fgMaxMessageLength</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.testEnded(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.endTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.testStarted(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.truncate(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fgMaxMessageLength</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fLoading</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.TestRunListener</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.STATUS_ERROR</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.STATUS_FAILURE</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testEnded(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testFailed(int, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testRunEnded(long)</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testRunStarted(java.lang.String, int)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testRunStopped(long)</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testStarted(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.Version</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.runner.Version.Version()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.Version.id()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.Version.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.getVersion()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.Version.main(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.Version.id()</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>junit.samples.money</name>
        <class confirmed="no">
            <name>junit.samples.money.IMoney</name>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB2</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.setUp()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagMultiply()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNegate()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNotEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSimpleAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSubtract()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSumAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testIsZero()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMixedSimpleAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagHash()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize2()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize3()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize4()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleBagAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleMultiply()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleNegate()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleSubtract()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimplify()</inbound>
            <feature confirmed="no">
                <name>junit.samples.money.IMoney.add(junit.samples.money.IMoney)</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSimpleAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSumAdd()</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.samples.money.IMoney.isZero()</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagMultiply()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testIsZero()</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.samples.money.IMoney.multiply(int)</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagMultiply()</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.samples.money.IMoney.negate()</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNegate()</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.samples.money.IMoney.subtract(junit.samples.money.IMoney)</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSubtract()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testIsZero()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize2()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize3()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>junit.samples.money.Money</name>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f12CHF</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f14CHF</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f21USD</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f7USD</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.setUp()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNotEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSimpleAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMixedSimpleAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyEquals()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyHash()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize2()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize4()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testPrint()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleBagAdd()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleMultiply()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleNegate()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleSubtract()</inbound>
            <feature confirmed="no">
                <name>junit.samples.money.Money.Money(int, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.setUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagMultiply()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNegate()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNotEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSimpleAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSubtract()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSumAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testIsZero()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagHash()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyHash()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize2()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize3()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize4()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleBagAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleMultiply()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleNegate()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleSubtract()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimplify()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.zeroMoniesAreEqualRegardlessOfCurrency()</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.samples.money.Money.add(junit.samples.money.IMoney)</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNotEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMixedSimpleAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleBagAdd()</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.samples.money.Money.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyHash()</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.samples.money.Money.hashCode()</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyHash()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.zeroMoniesAreEqualRegardlessOfCurrency()</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.samples.money.Money.multiply(int)</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleMultiply()</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.samples.money.Money.negate()</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleNegate()</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.samples.money.Money.subtract(junit.samples.money.IMoney)</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize4()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleSubtract()</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.samples.money.Money.toString()</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testPrint()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>junit.samples.money.MoneyBag</name>
            <feature confirmed="no">
                <name>junit.samples.money.MoneyBag.create(junit.samples.money.IMoney, junit.samples.money.IMoney)</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.setUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagMultiply()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNegate()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNotEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSimpleAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSubtract()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSumAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testIsZero()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMixedSimpleAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagHash()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize3()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize4()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleBagAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimplify()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>junit.tests</name>
        <class confirmed="no">
            <name>junit.tests.AllTests</name>
            <feature confirmed="no">
                <name>junit.tests.AllTests.suite()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTests.suite()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>junit.textui</name>
        <class confirmed="yes">
            <name>junit.textui.ResultPrinter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.fPrinter</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.setPrinter(junit.textui.ResultPrinter)</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$TestResultPrinter</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.fColumn</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.fWriter</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$TestResultPrinter.ForwardCompatibilityPrintingTest$TestResultPrinter(java.io.PrintStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.elapsedTimeAsString(long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.text.NumberFormat</outbound>
                <outbound type="feature" confirmed="no">java.text.NumberFormat.format(double)</outbound>
                <outbound type="feature" confirmed="no">java.text.NumberFormat.getInstance()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.endTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.fColumn</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.fWriter</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.getWriter()</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.fWriter</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printDefect(junit.framework.TestFailure, int)</name>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.failedTest()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefect(junit.framework.TestFailure, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefect(junit.framework.TestFailure, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefect(junit.framework.TestFailure, int)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.runCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printHeader(long)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.elapsedTimeAsString(long)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printWaitPrompt()</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.startTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.fColumn</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.textui.TestRunner</name>
            <outbound type="class" confirmed="yes">junit.runner.BaseTestRunner</outbound>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.EXCEPTION_EXIT</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.FAILURE_EXIT</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.SUCCESS_EXIT</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.TestRunner()</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(java.io.PrintStream)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runAndWait(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.TestRunner(java.io.PrintStream)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</name>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.BaseTestRunner()</outbound>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.fPrinter</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.createTestResult()</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.doRun(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</name>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</outbound>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.createTestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.fPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runAndWait(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.textui.TestRunner.extractClassName(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.fPrinter</name>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.setPrinter(junit.textui.ResultPrinter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.textui.TestRunner.getTest(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>junit.textui.TestRunner.loadSuiteClass(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.main(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.err</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.exit(int)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.pause(boolean)</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.in</outbound>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.fPrinter</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.run(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.run(junit.framework.Test)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.run(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.runAndWait(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.runFailed(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.err</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.exit(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</outbound>
                <outbound type="feature" confirmed="no">junit.textui.TestRunner.loadSuiteClass(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.setPrinter(junit.textui.ResultPrinter)</name>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.fPrinter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.start(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.err</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.Version.id()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</outbound>
                <outbound type="feature" confirmed="no">junit.textui.TestRunner.extractClassName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.textui.TestRunner.getTest(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.runSingleMethod(java.lang.String, java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.testEnded(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.testStarted(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit</name>
        <class confirmed="yes">
            <name>org.junit.After</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateInstanceMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.junit.AfterClass</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateStaticMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.junit.Assert</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.Assert.Assert()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertArrayEquals(byte[], byte[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, byte[], byte[])</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.oneDimensionalPrimitiveArraysAreEqual()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertArrayEquals(char[], char[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, char[], char[])</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.oneDimensionalPrimitiveArraysAreEqual()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertArrayEquals(int[], int[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, int[], int[])</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.oneDimensionalPrimitiveArraysAreEqual()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertArrayEquals(java.lang.Object[], java.lang.Object[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object[], java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysContainingIntsAreEqualToArraysContainingLongs()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement0nullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1nullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysWithNullElementEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqualNoMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysDeclaredAsOneDimensionalAreEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalIntArraysAreEqual()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertArrayEquals(java.lang.String, byte[], byte[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.ArrayComparisonFailure</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(byte[], byte[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertArrayEquals(java.lang.String, char[], char[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.ArrayComparisonFailure</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(char[], char[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertArrayEquals(java.lang.String, int[], int[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.ArrayComparisonFailure</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(int[], int[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.ArrayComparisonFailure</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.Object[], java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysActualNullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement0withMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1withMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferentLengthMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysElementsDiffer()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysEqualWithMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysExpectedNullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysNotEqualWithMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqual()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertArrayEquals(java.lang.String, long[], long[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.ArrayComparisonFailure</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(long[], long[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertArrayEquals(java.lang.String, short[], short[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.ArrayComparisonFailure</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(short[], short[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertArrayEquals(long[], long[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, long[], long[])</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.oneDimensionalPrimitiveArraysAreEqual()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertArrayEquals(short[], short[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, short[], short[])</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.oneDimensionalPrimitiveArraysAreEqual()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertEquals(double, double, double)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, double, double, double)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.doublesNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.equals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.floatsNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.implicitTypecastEquality()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.naNsAreEqual()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.testEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagMultiply()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNegate()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSimpleAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSubtract()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSumAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMixedSimpleAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagHash()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyHash()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize2()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize3()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize4()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testPrint()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleBagAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleMultiply()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleNegate()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleSubtract()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimplify()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.zeroMoniesAreEqualRegardlessOfCurrency()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCountAdapted()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysActualNullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDeclaredAsObjectAreComparedAsObjects()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement0nullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement0withMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1nullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1withMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferentLengthMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysExpectedNullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.booleansNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.bytesNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.charsNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.equals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.errorMessageDistinguishesDifferentValuesWithSameToString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.implicitTypecastEquality()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.intsEqualLongs()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.intsNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.longsNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqualNoMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSameNullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSameWithMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessageDisappearsWithAssertEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessageDisappearsWithStringAssertEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.objectsNotEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.sameNullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.sameWithMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.shortsNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.stringsDifferWithUserMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.stringsNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClassesAsArray()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerIsNamedForEnclosingClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerPlansEnclosedClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerRunsEnclosedClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest.failedConstructionIsTestFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.IgnoreClassTest.ignoreClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsShowUpAsWarnings()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.notifyListenersInTheOrderInWhichTheyAreAdded()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.plansDecoratorCorrectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.testFailures()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.beforeAndAfterClassAreRun()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.count()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.countBeforeRun()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresAddedForBadTestMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresNamedCorrectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParameterListsAreNotArrays()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParametersNotPublic()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.validateClassCatchesNoParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$1.testStarted(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.testListener()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.characterizeErrorMessageFromBadRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.newTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.oldTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAffectsPlan()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.nonexistentMethodCreatesFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnTestClassRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnTestClassRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.equalsIsCorrect()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.hashCodeIsReasonable()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.beforeAndAfterClassRunOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureSuitesWorkWithForwardCompatibility()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureTestIsRun()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithGetTests()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteTestCountIsCorrect()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteContainsItselfIndirectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasACycle()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasAForkingCycle()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.constructorException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.noRunnableMethods()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.compatibility()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.ignoreRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.onlyIgnoredMethodsIsStillFineTestClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.overloaded()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.testFailures()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateInheritedMethods()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.compatibility()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.successWithTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.initializationErrorIsOnCorrectClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertEquals(java.lang.Object[], java.lang.Object[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.Object[], java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertEquals(java.lang.String, double, double, double)</name>
                <outbound type="feature" confirmed="no">java.lang.Double.Double(double)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.compare(double, double)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.abs(double)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(double, double, double)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.testEquals()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.isEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.testEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessageDisappearsWithAssertEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessageDisappearsWithStringAssertEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.stringsDifferWithUserMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertFalse(boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertFalse(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNotEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ClassRequestTest.noSuiteMethodIfMethodPrivate()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.equalsIsCorrect()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.hashCodeIsReasonable()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestDescriptionTest.equalsIsFalseForNonTestDescription()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertFalse(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertFalse(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertNotNull(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotNull(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertNotSame(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSame()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSameNullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.objectsAreSame()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.freshResultEachTime()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.failSame(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSameWithMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertNull(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertNull(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertNull(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertNull(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.objectsNotSame()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.same()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.sameNullMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.sameWithMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertTrue(boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.capacity()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.contains()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.elementAt()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.removeAll()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.removeElement()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.testCopy()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagMultiply()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testIsZero()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyHash()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.ensureTestIsRun()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runAClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runATest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.expected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.expectsSuperclass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.run()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.runWithExtendsToSubclasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.testFinished()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.makeSureSuiteIsCalled()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.makeSureSuiteWorksWithJUnit4Classes()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteShouldBeOKwithNonDefaultConstructor()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.dontValidateShadowedMethods()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.assertTrue(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertFalse(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertNull(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoopRunsForApproximatelyLengthOfTimeout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.fail()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$FailureTest.error()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.arraysDifferAtElement1withMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.fails()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqualNoMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSameNullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.notSameWithMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessageDisappearsWithAssertEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessageDisappearsWithStringAssertEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.sameNullMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.sameWithMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$ATest.error()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.IgnoreClassTest$IgnoreMe.iFail()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.IgnoreClassTest$IgnoreMe.iFailToo()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest$Fail.kaboom()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest$AnnotatedTest.foo()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$TestB.fail()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest$FailureWithTimeoutTest.failure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.fail(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.fail()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failSame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.failSame(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Array.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Array.getLength(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.isArray(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.ArrayComparisonFailure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.ArrayComparisonFailure(java.lang.String, java.lang.AssertionError, int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.addDimension(int)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, byte[], byte[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, char[], char[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, int[], int[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, long[], long[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, short[], short[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.isArray(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isArray()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Assert.isEquals(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Number</outbound>
                <outbound type="feature" confirmed="no">java.lang.Number.longValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.Before</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateInstanceMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.runsTopToBottom(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.junit.BeforeClass</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateStaticMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.runsTopToBottom(java.lang.Class)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.junit.ComparisonFailure</name>
            <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessageDisappearsWithStringAssertEquals()</inbound>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure.fActual</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure.fExpected</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure.MAX_CONTEXT_LENGTH</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure.fActual</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getActual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure.fExpected</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getExpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure.getActual()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure.fActual</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure.getExpected()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure.fExpected</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure.getMessage()</name>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.ComparisonFailure$ComparisonCompactor(int, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure.fActual</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure.fExpected</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AssertionTest.nullMessageDisappearsWithStringAssertEquals()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.ComparisonFailure$ComparisonCompactor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.ComparisonFailure$ComparisonCompactor(int, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fContextLength</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fExpected</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.DELTA_END</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.DELTA_START</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.ELLIPSIS</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.areStringsEqual()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fExpected</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.format(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.areStringsEqual()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fPrefix</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fSuffix</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</name>
                <outbound type="feature" confirmed="no">java.lang.Math.max(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fContextLength</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fPrefix</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</name>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fContextLength</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fSuffix</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.fActual</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.ComparisonFailure$ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.areStringsEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.fContextLength</name>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.ComparisonFailure$ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.fExpected</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.ComparisonFailure$ComparisonCompactor(int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.areStringsEqual()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.fPrefix</name>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.fSuffix</name>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compactString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.computeCommonSuffix()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.findCommonPrefix()</name>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fPrefix</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.ComparisonFailure$ComparisonCompactor.findCommonSuffix()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fActual</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fExpected</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fPrefix</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.fSuffix</outbound>
                <inbound type="feature" confirmed="yes">org.junit.ComparisonFailure$ComparisonCompactor.compact(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.Ignore</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isIgnored(java.lang.reflect.Method)</inbound>
            <feature confirmed="yes">
                <name>org.junit.Ignore.value()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.Test</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateInstanceMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTimeout(java.lang.reflect.Method)</inbound>
            <feature confirmed="yes">
                <name>org.junit.Test.expected()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Test.timeout()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTimeout(java.lang.reflect.Method)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.Test$None</name>
            <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</inbound>
            <feature confirmed="yes">
                <name>org.junit.Test$None.Test$None()</name>
                <outbound type="feature" confirmed="no">java.lang.Throwable.Throwable()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.Test$None.serialVersionUID</name>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.internal</name>
        <class confirmed="yes">
            <name>org.junit.internal.ArrayComparisonFailure</name>
            <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, byte[], byte[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, char[], char[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, int[], int[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, long[], long[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, short[], short[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.ArrayComparisonFailure.ArrayComparisonFailure(java.lang.String, java.lang.AssertionError, int)</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.addDimension(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.fCause</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.fIndices</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.fMessage</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.ArrayComparisonFailure.addDimension(int)</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(int, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.fIndices</outbound>
                <inbound type="feature" confirmed="yes">org.junit.Assert.internalArrayEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.ArrayComparisonFailure(java.lang.String, java.lang.AssertionError, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.ArrayComparisonFailure.fCause</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.ArrayComparisonFailure(java.lang.String, java.lang.AssertionError, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.ArrayComparisonFailure.fIndices</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.ArrayComparisonFailure(java.lang.String, java.lang.AssertionError, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.addDimension(int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.ArrayComparisonFailure.fMessage</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.ArrayComparisonFailure(java.lang.String, java.lang.AssertionError, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.ArrayComparisonFailure.getMessage()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.intValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.fCause</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.fIndices</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.fMessage</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.ArrayComparisonFailure.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.ArrayComparisonFailure.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.ArrayComparisonFailure.getMessage()</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.internal.requests</name>
        <class confirmed="yes">
            <name>org.junit.internal.requests.ClassRequest</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassRequest.CONSTRUCTOR_ERROR_FORMAT</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ClassRequestTest.noSuiteMethodIfMethodPrivate()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.fCanUseSuiteMethod</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.fTestClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.Request()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.classWithoutSuiteMethod(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getConstructor(java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSimpleName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.fTestClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.errorReport(java.lang.Class, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassRequest.fCanUseSuiteMethod</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassRequest.fTestClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.hasSuiteMethod()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassRequest.getRunner()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.fTestClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="yes">org.junit.Ignore</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.fCanUseSuiteMethod</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.hasSuiteMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.isPre4Test(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner.IgnoredClassRunner(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.OldTestClassRunner</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.RunWith</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.RunWith.value()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runners.AllTests</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassRequest.hasSuiteMethod()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.fTestClass</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ClassRequestTest.noSuiteMethodIfMethodPrivate()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassRequest.isPre4Test(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.requests.ClassesRequest</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassesRequest.ClassesRequest(java.lang.String, java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.fClasses</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.fName</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.Request()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.classes(java.lang.String, java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassesRequest.fClasses</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.ClassesRequest(java.lang.String, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassesRequest.fName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.ClassesRequest(java.lang.String, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ClassesRequest.getRunner()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.fClasses</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.fName</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.requests.ErrorReportingRequest</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ErrorReportingRequest.ErrorReportingRequest(java.lang.Class, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.fCause</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.fClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.Request()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.errorReport(java.lang.Class, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ErrorReportingRequest.fCause</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.ErrorReportingRequest(java.lang.Class, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ErrorReportingRequest.fClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.ErrorReportingRequest(java.lang.Class, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getCause()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.getCauses()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.ErrorReportingRequest.getRunner()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.fCause</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.fClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.ErrorReportingRunner(org.junit.runner.Description, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.requests.FilterRequest</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.FilterRequest.FilterRequest(org.junit.runner.Request, org.junit.runner.manipulation.Filter)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.fFilter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.fRequest</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.Request()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.FilterRequest.fFilter</name>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.FilterRequest(org.junit.runner.Request, org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.FilterRequest.fRequest</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.FilterRequest(org.junit.runner.Request, org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.FilterRequest.getRunner()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.fFilter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.fRequest</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.errorReport(java.lang.Class, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.apply(org.junit.runner.Runner)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.describe()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.requests.IgnoredClassRunner</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.IgnoredClassRunner.IgnoredClassRunner(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner.fTestClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.IgnoredClassRunner.fTestClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner.IgnoredClassRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner.getDescription()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.IgnoredClassRunner.getDescription()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner.fTestClass</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.IgnoredClassRunner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestIgnored(org.junit.runner.Description)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.requests.SortingRequest</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.SortingRequest.SortingRequest(org.junit.runner.Request, java.util.Comparator)</name>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.fComparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.fRequest</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.Request()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.sortWith(java.util.Comparator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.SortingRequest.fComparator</name>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.SortingRequest(org.junit.runner.Request, java.util.Comparator)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.SortingRequest.fRequest</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.SortingRequest(org.junit.runner.Request, java.util.Comparator)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.requests.SortingRequest.getRunner()</name>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.fComparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.fRequest</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.Sorter(java.util.Comparator)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.apply(org.junit.runner.Runner)</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.internal.runners</name>
        <class confirmed="yes">
            <name>org.junit.internal.runners.BeforeAndAfterRunner</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner$1</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestMethodRunner</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fAfterAnnotation</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fBeforeAnnotation</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fTestIntrospector</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.TestIntrospector(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.addFailure(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.fAfterAnnotation</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.fBeforeAnnotation</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.fTest</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.fTestIntrospector</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.addFailure(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fAfterAnnotation</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fTestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runProtected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner$1</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore.BeforeAndAfterRunner$FailedBefore(org.junit.internal.runners.BeforeAndAfterRunner$1)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.addFailure(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fBeforeAnnotation</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fTestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runProtected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.runProtected()</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runUnprotected()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner.runUnprotected()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runProtected()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.BeforeAndAfterRunner$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore.BeforeAndAfterRunner$FailedBefore(org.junit.internal.runners.BeforeAndAfterRunner$1)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore</name>
            <outbound type="class" confirmed="no">java.lang.Exception</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runProtected()</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore.BeforeAndAfterRunner$FailedBefore()</name>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore.BeforeAndAfterRunner$FailedBefore(org.junit.internal.runners.BeforeAndAfterRunner$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore.BeforeAndAfterRunner$FailedBefore(org.junit.internal.runners.BeforeAndAfterRunner$1)</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner$1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore.BeforeAndAfterRunner$FailedBefore()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.BeforeAndAfterRunner$FailedBefore.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.CompositeRunner</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filterable</outbound>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sortable</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.CompositeRunner$1(org.junit.internal.runners.CompositeRunner, org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.this$0</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fName</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.addAll(java.util.List)</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.fName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.fRunners</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.addAll(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getRunners()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.remove()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.apply(org.junit.runner.Runner)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.shouldRun(org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.getDescription()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fName</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.addChild(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.getName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.getRunners()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.run(org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.sort(java.util.List, java.util.Comparator)</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.CompositeRunner$1(org.junit.internal.runners.CompositeRunner, org.junit.runner.manipulation.Sorter)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.fRunners</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.apply(org.junit.runner.Runner)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.CompositeRunner$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Comparator</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner$1.CompositeRunner$1(org.junit.internal.runners.CompositeRunner, org.junit.runner.manipulation.Sorter)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.CompositeRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.val$sorter</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner$1.compare(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(org.junit.runner.Runner, org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner$1.compare(org.junit.runner.Runner, org.junit.runner.Runner)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.val$sorter</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.CompositeRunner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.CompositeRunner$1(org.junit.internal.runners.CompositeRunner, org.junit.runner.manipulation.Sorter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.CompositeRunner$1.val$sorter</name>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.CompositeRunner$1(org.junit.internal.runners.CompositeRunner, org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(org.junit.runner.Runner, org.junit.runner.Runner)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.ErrorReportingRunner</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.ErrorReportingRunner.ErrorReportingRunner(org.junit.runner.Description, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.fCause</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.fDescription</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.ErrorReportingRunner.fCause</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.ErrorReportingRunner(org.junit.runner.Description, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.ErrorReportingRunner.fDescription</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.ErrorReportingRunner(org.junit.runner.Description, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.ErrorReportingRunner.getDescription()</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.fDescription</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.fCause</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.fDescription</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.testAborted(org.junit.runner.Description, java.lang.Throwable)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.InitializationError</name>
            <outbound type="class" confirmed="no">java.lang.Exception</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.assertValid()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Enclosed.Enclosed(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.addParent(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InaccessibleBaseClassTest.inaccessibleBaseClassIsCaughtAtValidation()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.validateAllMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.testClassRunnerCanBeWrappedAroundUnsortable()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateAllMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.testClassRunnerHandlesBeforeClassAndAfterClassValidation()</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.InitializationError.InitializationError(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.Throwable[])</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.addParent(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.InitializationError.InitializationError(java.lang.Throwable[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.util.List)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.InitializationError.InitializationError(java.util.List)</name>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.fErrors</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.Throwable[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.assertValid()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.InitializationError.fErrors</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.getCauses()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.InitializationError.getCauses()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.fErrors</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getCauses(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.validateAllMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateAllMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.InitializationError.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.MethodValidator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.validate(org.junit.internal.runners.MethodValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.validate(org.junit.internal.runners.MethodValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.validate(org.junit.internal.runners.MethodValidator)</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fErrors</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fTestClass</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.TestIntrospector(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InaccessibleBaseClassTest.inaccessibleBaseClassIsCaughtAtValidation()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.overloaded()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.assertValid()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fErrors</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InaccessibleBaseClassTest.inaccessibleBaseClassIsCaughtAtValidation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.fErrors</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.assertValid()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.fIntrospector</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.fTestClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.validateInstanceMethods()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.junit.After</outbound>
                <outbound type="class" confirmed="yes">org.junit.Before</outbound>
                <outbound type="class" confirmed="yes">org.junit.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.validate(org.junit.internal.runners.MethodValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.validate(org.junit.internal.runners.MethodValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fErrors</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateInstanceMethods()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateStaticMethods()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.validate(org.junit.internal.runners.MethodValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InaccessibleBaseClassTest.inaccessibleBaseClassIsCaughtAtValidation()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.overloaded()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.validateNoArgConstructor()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getConstructor(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fErrors</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fTestClass</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.validateStaticMethods()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.junit.AfterClass</outbound>
                <outbound type="class" confirmed="yes">org.junit.BeforeClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.validate(org.junit.internal.runners.MethodValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.validate(org.junit.internal.runners.MethodValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaringClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isPublic(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isStatic(int)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fErrors</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fIntrospector</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateInstanceMethods()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateStaticMethods()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.OldTestClassRunner</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.AllTests</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.asSubclass(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(junit.framework.Test)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.fTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.AllTests(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.plansDecoratorCorrectly()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner.createAdaptingListener(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.OldTestClassRunner$OldTestClassAdaptingListener(org.junit.runner.notification.RunNotifier, org.junit.internal.runners.OldTestClassRunner$1)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner.fTest</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner.getDescription()</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.fTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.extensions.TestDecorator</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.getTest()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapter</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getDescription()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.getName()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestSuite</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.getName()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.testCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.addChild(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.getDescription()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.createAdaptingListener(org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.fTest</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.internal.runners.OldTestClassRunner.testCount()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.plansDecoratorCorrectly()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.OldTestClassRunner$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.OldTestClassRunner$OldTestClassAdaptingListener(org.junit.runner.notification.RunNotifier, org.junit.internal.runners.OldTestClassRunner$1)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.createAdaptingListener(org.junit.runner.notification.RunNotifier)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.OldTestClassRunner$OldTestClassAdaptingListener(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.fNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.OldTestClassRunner$OldTestClassAdaptingListener(org.junit.runner.notification.RunNotifier, org.junit.internal.runners.OldTestClassRunner$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.OldTestClassRunner$OldTestClassAdaptingListener(org.junit.runner.notification.RunNotifier, org.junit.internal.runners.OldTestClassRunner$1)</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.OldTestClassRunner$OldTestClassAdaptingListener(org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.createAdaptingListener(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.asDescription(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.fNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.addError(junit.framework.Test, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.asDescription(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestCaseFacade</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.getDescription()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.getName(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.endTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.asDescription(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.fNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.fNotifier</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.OldTestClassRunner$OldTestClassAdaptingListener(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.getName(junit.framework.Test)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.getName()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.asDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.startTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.asDescription(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.fNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.TestClassMethodsRunner</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filterable</outbound>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sortable</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.TestClassMethodsRunner$1(org.junit.internal.runners.TestClassMethodsRunner, org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.this$0</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.junit.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestMethods</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getTestClass()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.TestIntrospector(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestMethodRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.createTest()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getConstructor(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getTestClass()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.fTestClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getTestClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.fTestMethods</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.remove()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestMethods</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.shouldRun(org.junit.runner.Description)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException.NoTestsRemainException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.getDescription()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestMethods</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getName()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.addChild(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.getName()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getTestClass()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.getTestClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestClass</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getCause()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createTest()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestMethodRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.testAborted(org.junit.runner.Description, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getTestClass()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.testName(java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestMethods</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.testAborted(org.junit.runner.Description, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.sort(org.junit.runner.manipulation.Sorter)</name>
                <outbound type="feature" confirmed="no">java.util.Collections.sort(java.util.List, java.util.Comparator)</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.TestClassMethodsRunner$1(org.junit.internal.runners.TestClassMethodsRunner, org.junit.runner.manipulation.Sorter)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.fTestMethods</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner.testName(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.TestClassMethodsRunner$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Comparator</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner$1.TestClassMethodsRunner$1(org.junit.internal.runners.TestClassMethodsRunner, org.junit.runner.manipulation.Sorter)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.val$sorter</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.val$sorter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.TestClassMethodsRunner$1(org.junit.internal.runners.TestClassMethodsRunner, org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassMethodsRunner$1.val$sorter</name>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.TestClassMethodsRunner$1(org.junit.internal.runners.TestClassMethodsRunner, org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.TestClassRunner</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filterable</outbound>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sortable</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.this$0</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Parameterized</inbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Suite</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$InitializesWithError</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$InitializesWithError.InitializationErrorForwardCompatibilityTest$InitializesWithError(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.validateAllMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateAllMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.MethodValidator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.assertValid()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fEnclosedRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fTestClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.validate(org.junit.internal.runners.MethodValidator)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.Parameterized(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.testClassRunnerCanBeWrappedAroundUnsortable()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.testClassRunnerHandlesBeforeClassAndAfterClassValidation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.fEnclosedRunner</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.runUnprotected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.fTestClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.getTestClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.filter(org.junit.runner.manipulation.Filter)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fEnclosedRunner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.apply(org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.getDescription()</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fEnclosedRunner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.getTestClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fTestClass</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.junit.AfterClass</outbound>
                <outbound type="class" confirmed="yes">org.junit.BeforeClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runProtected()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.getTestClass()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.sort(org.junit.runner.manipulation.Sorter)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fEnclosedRunner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.apply(org.junit.runner.Runner)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.testClassRunnerCanBeWrappedAroundUnsortable()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner.validate(org.junit.internal.runners.MethodValidator)</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.MethodValidator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.TestClassRunner$1</name>
            <outbound type="class" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.val$notifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.val$notifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner$1.runUnprotected()</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.val$notifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fEnclosedRunner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.run(org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.runUnprotected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestClassRunner$1.val$notifier</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.runUnprotected()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.TestIntrospector</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.fTestIntrospector</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.fIntrospector</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fTestIntrospector</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.TestIntrospector(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.fTestClass</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.junit.Test</outbound>
                <outbound type="class" confirmed="yes">org.junit.Test$None</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Test.expected()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.fTestClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.TestIntrospector(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.getSuperClasses(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSuperclass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getDeclaredMethods()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.reverse(java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.fTestClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getSuperClasses(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.runsTopToBottom(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.runBefores()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateTestMethods(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.getTimeout(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.junit.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Test.timeout()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.isIgnored(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.junit.Ignore</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getParameterTypes()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.util.List)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isShadowed(java.lang.reflect.Method, java.lang.reflect.Method)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestIntrospector.runsTopToBottom(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.Before</outbound>
                <outbound type="class" confirmed="yes">org.junit.BeforeClass</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTestMethods(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.TestMethodRunner</name>
            <outbound type="class" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.TestMethodRunner$1(org.junit.internal.runners.TestMethodRunner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.call()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.this$0</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="yes">org.junit.After</outbound>
                <outbound type="class" confirmed="yes">org.junit.Before</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.BeforeAndAfterRunner.BeforeAndAfterRunner(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.TestIntrospector(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fDescription</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fMethod</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fTestIntrospector</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopMethodRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.access$000(org.junit.internal.runners.TestMethodRunner)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.call()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fDescription</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.executeMethodBody()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fMethod</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.expectedException()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.expectedException(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fMethod</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fTestIntrospector</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectsException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.isUnexpected(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.expectsException()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.fDescription</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.fMethod</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.executeMethodBody()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.fNotifier</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.fTest</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.executeMethodBody()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.fTestIntrospector</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.isUnexpected(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runUnprotected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.run()</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.getTimeout(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestIntrospector.isIgnored(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fDescription</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fMethod</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fTestIntrospector</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestIgnored(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopMethodRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.runMethod()</name>
                <outbound type="feature" confirmed="no">org.junit.internal.runners.TestMethodRunner.runProtected()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.access$000(org.junit.internal.runners.TestMethodRunner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.internal.runners.TestMethodRunner.runProtected()</name>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runMethod()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.runUnprotected()</name>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.executeMethodBody()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectedException()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.expectsException()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.isUnexpected(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.valueOf(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.Callable</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ExecutorService</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ExecutorService.awaitTermination(long, java.util.concurrent.TimeUnit)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ExecutorService.shutdown()</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ExecutorService.shutdownNow()</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.Executors.newSingleThreadExecutor()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.Future</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.Future.get(long, java.util.concurrent.TimeUnit)</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.TimeUnit</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.TimeUnit.MILLISECONDS</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.TimeoutException</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.TestMethodRunner$1(org.junit.internal.runners.TestMethodRunner)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.TestMethodRunner$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.concurrent.Callable</outbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner$1.TestMethodRunner$1(org.junit.internal.runners.TestMethodRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestMethodRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.runWithTimeout(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner$1.call()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestMethodRunner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.access$000(org.junit.internal.runners.TestMethodRunner)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TestMethodRunner$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TestMethodRunner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.TestMethodRunner$1(org.junit.internal.runners.TestMethodRunner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner$1.call()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.internal.runners.TextListener</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.listener</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.setUp()</inbound>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.TextListener()</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener(java.io.PrintStream)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.TextListener(java.io.PrintStream)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.fWriter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.RunListener()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.setUp()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.elapsedTimeAsString(long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.text.NumberFormat</outbound>
                <outbound type="feature" confirmed="no">java.text.NumberFormat.format(double)</outbound>
                <outbound type="feature" confirmed="no">java.text.NumberFormat.getInstance()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.fWriter</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.getWriter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testIgnored(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.getWriter()</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.fWriter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureTrace(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.printFailure(org.junit.runner.notification.Failure, int)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureTrace(org.junit.runner.notification.Failure)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.getWriter()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTestHeader()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailure(org.junit.runner.notification.Failure, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.printFailureTrace(org.junit.runner.notification.Failure)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.getWriter()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailure(org.junit.runner.notification.Failure, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.getWriter()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailure(org.junit.runner.notification.Failure, int)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.getWriter()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.wasSuccessful()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.printHeader(long)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.elapsedTimeAsString(long)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.testFailure(org.junit.runner.notification.Failure)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.append(char)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.fWriter</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.testIgnored(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.append(char)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.fWriter</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.testRunFinished(org.junit.runner.Result)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printHeader(long)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunTime()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.internal.runners.TextListener.testStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.append(char)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.fWriter</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.runner</name>
        <class confirmed="yes">
            <name>org.junit.runner.Description</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.JUnit4TestCaseFacade(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.fDescription</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(org.junit.runner.Runner, org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.ErrorReportingRunner(org.junit.runner.Description, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.fDescription</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.asDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fDescription</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testIgnored(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.Request$1(org.junit.runner.Request, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.describe()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.val$desiredDescription</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.method(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testIgnored(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Runner.testCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter$1.shouldRun(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.shouldRun(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.fDescription</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTestHeader()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testIgnored(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.RunNotifier$1(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.val$description</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.val$description</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.val$description</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.val$description</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestIgnored(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.testAborted(org.junit.runner.Description, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerIsNamedForEnclosingClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest.failedConstructionIsTestFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$MarkerRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitialize.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$1.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$2.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$1.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$BadRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$1.testFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$MyListener.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$1.shouldRun(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$1.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$1.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$2.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$2.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$UnsortableRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.SuiteDescriptionTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.anotherChildless</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.anotherTwoKids</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.childless</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.descriptionWithTwoKids(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.equalsIsCorrect()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.hashCodeIsReasonable()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.namedB</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.twoKids</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestDescriptionTest.equalsIsFalseForNonTestDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ErrorListener.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ExceptionListener.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopMethodRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.userStop()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest$1.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.initializationErrorIsOnCorrectClass()</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.Description(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.fChildren</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.fDisplayName</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.EMPTY</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$MarkerRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitialize.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$UnsortableRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest$1.getDescription()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.TEST_MECHANISM</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.addChild(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.descriptionWithTwoKids(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.createSuiteDescription(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.createSuiteDescription(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.SuiteDescriptionTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.descriptionWithTwoKids(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.asDescription(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.makeDescription(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.methodDescription(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.method(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest.failedConstructionIsTestFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$1.testStarted(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.descriptionWithTwoKids(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestDescriptionTest.equalsIsFalseForNonTestDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopMethodRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.equals(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.equalsIsCorrect()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestDescriptionTest.equalsIsFalseForNonTestDescription()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.fChildren</name>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.fDisplayName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.getChildren()</name>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.fChildren</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.addChild(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.isTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.getDisplayName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.fDisplayName</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.hashCode()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.describe()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTestHeader()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerIsNamedForEnclosingClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$1.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$2.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.initializationErrorIsOnCorrectClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.hashCode()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.hashCode()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.hashCodeIsReasonable()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.isSuite()</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.isTest()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.isTest()</name>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.isEmpty()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.isSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.static {}</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.Description(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.EMPTY</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.TEST_MECHANISM</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.testCount()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.isTest()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Runner.testCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$MyListener.testRunStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Description.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestCaseFacade.toString()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.JUnitCore</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.runner</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.setUp()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testError()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testSuccess()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testTime()</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.JUnitCore()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.fNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.RunNotifier()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.ensureTestIsRun()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testAnnotatedMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInAfterClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testExceptionNotThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testNonStaticOneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldSuiteTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOneTimeTeardown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrder()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrderingOfInheritance()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClassesRegardless()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAftersRegardless()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testShadowing()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownAfterFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestInheritance()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTwoTests()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runATest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.expected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.expectsSuperclass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.notifyListenersInTheOrderInWhichTheyAreAdded()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.testListener()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.newTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.oldTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.testFinished()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.nonexistentMethodCreatesFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnTestClassRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnTestClassRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.unsortablesAreHandledWithoutCrashing()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureTestIsRun()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.constructorException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.noRunnableMethods()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.failingListener()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.freshResultEachTime()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.ignoreRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.setUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.runAndTime(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.successWithTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.addFirstListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.fNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.fNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.notifyListenersInTheOrderInWhichTheyAreAdded()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.testListener()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.newTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.oldTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.testFinished()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.failingListener()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.setUp()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.fNotifier</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addFirstListener(org.junit.runner.notification.RunListener)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.removeListener(org.junit.runner.notification.RunListener)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.getVersion()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.Version.id()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.killAllThreads(org.junit.runner.Result)</name>
                <outbound type="feature" confirmed="no">java.lang.System.exit(int)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.wasSuccessful()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.main(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.killAllThreads(org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.removeListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.fNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.run(java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.classes(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.ensureTestIsRun()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testAnnotatedMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInAfterClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testExceptionNotThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testNonStaticOneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOneTimeTeardown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrder()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrderingOfInheritance()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClassesRegardless()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAftersRegardless()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testShadowing()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownAfterFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestInheritance()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTwoTests()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.expected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.expectsSuperclass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.notifyListenersInTheOrderInWhichTheyAreAdded()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.testListener()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.newTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.oldTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.testFinished()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureTestIsRun()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.constructorException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.noRunnableMethods()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.failingListener()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.freshResultEachTime()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.ignoreRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testSuccess()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testTime()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.runAndTime(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.successWithTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.run(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldSuiteTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.run(org.junit.runner.Request)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.nonexistentMethodCreatesFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnTestClassRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnTestClassRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.unsortablesAreHandledWithoutCrashing()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addFirstListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.fNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.removeListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.createListener()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.run(org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestRunFinished(org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestRunStarted(org.junit.runner.Description)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runAClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClassesAsArray()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerRunsEnclosedClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest.failedConstructionIsTestFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.IgnoreClassTest.ignoreClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.beforeAndAfterClassAreRun()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.count()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresAddedForBadTestMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresNamedCorrectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParameterListsAreNotArrays()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParametersNotPublic()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.validateClassCatchesNoParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.characterizeErrorMessageFromBadRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.run()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.runWithExtendsToSubclasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.makeSureSuiteIsCalled()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.makeSureSuiteWorksWithJUnit4Classes()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.beforeAndAfterClassRunOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteShouldBeOKwithNonDefaultConstructor()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteContainsItselfIndirectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasACycle()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasAForkingCycle()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.onlyIgnoredMethodsIsStillFineTestClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoopRunsForApproximatelyLengthOfTimeout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.JUnitCore.runMain(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class[]</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.toArray(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.Version.id()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runATest()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.Request</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.requests.ClassRequest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.requests.ClassesRequest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.requests.FilterRequest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.FilterRequest(org.junit.runner.Request, org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.fRequest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.requests.SortingRequest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.SortingRequest(org.junit.runner.Request, java.util.Comparator)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.fRequest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.Request$1(org.junit.runner.Request, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerIsNamedForEnclosingClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerPlansEnclosedClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.countBeforeRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAffectsPlan()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAwayEverythingThrowsException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.nonexistentMethodCreatesFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnTestClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnTestClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.unsortablesAreHandledWithoutCrashing()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteTestCountIsCorrect()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.initializationErrorIsOnCorrectClass()</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.Request()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.ClassesRequest(java.lang.String, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.ErrorReportingRequest(java.lang.Class, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.FilterRequest(org.junit.runner.Request, org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.SortingRequest(org.junit.runner.Request, java.util.Comparator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.aClass(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.method(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerIsNamedForEnclosingClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerPlansEnclosedClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.countBeforeRun()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAwayEverythingThrowsException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnTestClassRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnTestClassRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.unsortablesAreHandledWithoutCrashing()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteTestCountIsCorrect()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopClassRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.initializationErrorIsOnCorrectClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.classWithoutSuiteMethod(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.classes(java.lang.String, java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.ClassesRequest(java.lang.String, java.lang.Class[])</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.errorReport(java.lang.Class, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.ErrorReportingRequest(java.lang.Class, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.filterWith(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request$1.Request$1(org.junit.runner.Request, org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.method(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)</name>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.FilterRequest(org.junit.runner.Request, org.junit.runner.manipulation.Filter)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.getRunner()</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerIsNamedForEnclosingClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerPlansEnclosedClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.countBeforeRun()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAffectsPlan()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAwayEverythingThrowsException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteTestCountIsCorrect()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopClassRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.initializationErrorIsOnCorrectClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.method(java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.Description)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAffectsPlan()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.nonexistentMethodCreatesFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request.sortWith(java.util.Comparator)</name>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.SortingRequest(org.junit.runner.Request, java.util.Comparator)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnTestClassRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnTestClassRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.unsortablesAreHandledWithoutCrashing()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.Request$1</name>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.Request$1.Request$1(org.junit.runner.Request, org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request$1.val$desiredDescription</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.Filter()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request$1.describe()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request$1.val$desiredDescription</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.isTest()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request$1.val$desiredDescription</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.Request$1(org.junit.runner.Request, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Request$1.val$desiredDescription</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.Request$1(org.junit.runner.Request, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.describe()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.shouldRun(org.junit.runner.Description)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.Result</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testRunFinished(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.killAllThreads(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.Result$Listener(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.Result$Listener(org.junit.runner.Result, org.junit.runner.Result$1)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testIgnored(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunFinished(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testRunFinished(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.val$result</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestRunFinished(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.ensureTestIsRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testAnnotatedMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInAfterClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testExceptionNotThrown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testNonStaticOneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldSuiteTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldTest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOneTimeTeardown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrder()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrderingOfInheritance()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClassesRegardless()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAftersRegardless()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testShadowing()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownAfterFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestInheritance()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTwoTests()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runAClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runATest()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClassesAsArray()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerRunsEnclosedClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.expected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.expectsSuperclass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest.failedConstructionIsTestFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.IgnoreClassTest.ignoreClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.notifyListenersInTheOrderInWhichTheyAreAdded()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.beforeAndAfterClassAreRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.count()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresAddedForBadTestMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresNamedCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParameterListsAreNotArrays()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParametersNotPublic()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.validateClassCatchesNoParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.testListener()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.characterizeErrorMessageFromBadRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.runWithExtendsToSubclasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.newTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.oldTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.testFinished()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.nonexistentMethodCreatesFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnTestClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnTestClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.unsortablesAreHandledWithoutCrashing()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.makeSureSuiteIsCalled()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.makeSureSuiteWorksWithJUnit4Classes()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.beforeAndAfterClassRunOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureTestIsRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteShouldBeOKwithNonDefaultConstructor()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteContainsItselfIndirectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasACycle()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasAForkingCycle()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.constructorException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.noRunnableMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.failingListener()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.freshResultEachTime()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.ignoreRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.onlyIgnoredMethodsIsStillFineTestClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testError()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testSuccess()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testTime()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoopRunsForApproximatelyLengthOfTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.runAndTime(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.successWithTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.Result()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fCount</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fFailures</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fIgnoreCount</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fRunTime</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.access$000(org.junit.runner.Result)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fStartTime</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.access$002(org.junit.runner.Result, long)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fStartTime</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.access$114(org.junit.runner.Result, long)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fRunTime</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.access$208(org.junit.runner.Result)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fCount</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.access$300(org.junit.runner.Result)</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fFailures</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.access$408(org.junit.runner.Result)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fIgnoreCount</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testIgnored(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.createListener()</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Result$1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.Result$Listener(org.junit.runner.Result, org.junit.runner.Result$1)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.fCount</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$208(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.fFailures</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$300(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.fIgnoreCount</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$408(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.getIgnoreCount()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.fRunTime</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$114(org.junit.runner.Result, long)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.getRunTime()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.fStartTime</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$000(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.access$002(org.junit.runner.Result, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.getFailureCount()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fFailures</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.wasSuccessful()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInAfterClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testExceptionNotThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testNonStaticOneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClassesRegardless()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAftersRegardless()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.IgnoreClassTest.ignoreClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.count()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresAddedForBadTestMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.validateClassCatchesNoParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.nonexistentMethodCreatesFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureTestIsRun()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteContainsItselfIndirectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasACycle()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasAForkingCycle()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.onlyIgnoredMethodsIsStillFineTestClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.successWithTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.getFailures()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fFailures</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testExceptionNotThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest.failedConstructionIsTestFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresNamedCorrectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParameterListsAreNotArrays()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParametersNotPublic()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.characterizeErrorMessageFromBadRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.constructorException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.noRunnableMethods()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.getIgnoreCount()</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fIgnoreCount</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.IgnoreClassTest.ignoreClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.ignoreRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.onlyIgnoredMethodsIsStillFineTestClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.getRunCount()</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fCount</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerRunsEnclosedClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.count()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.testListener()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureTestIsRun()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.successWithTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.getRunTime()</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.fRunTime</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result.wasSuccessful()</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFooter(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.killAllThreads(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.expected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.expectsSuperclass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteShouldBeOKwithNonDefaultConstructor()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.Result$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.Result$Listener(org.junit.runner.Result, org.junit.runner.Result$1)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result.createListener()</inbound>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.Result$Listener</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.Result$Listener.Result$Listener(org.junit.runner.Result)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.RunListener()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.Result$Listener(org.junit.runner.Result, org.junit.runner.Result$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result$Listener.Result$Listener(org.junit.runner.Result, org.junit.runner.Result$1)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result$1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.Result$Listener(org.junit.runner.Result)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result.createListener()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.access$300(org.junit.runner.Result)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result$Listener.testIgnored(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.access$408(org.junit.runner.Result)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result$Listener.testRunFinished(org.junit.runner.Result)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.access$000(org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.access$114(org.junit.runner.Result, long)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result$Listener.testRunStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.access$002(org.junit.runner.Result, long)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result$Listener.testStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.access$208(org.junit.runner.Result)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Result$Listener.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.Result$Listener(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testIgnored(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunFinished(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testRunStarted(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testStarted(org.junit.runner.Description)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.RunWith</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.RunWith.value()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.Runner</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class, junit.framework.JUnit4TestAdapterCache)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.countTestCases()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.fRunner</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.buildRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassesRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ErrorReportingRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.getRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.CompositeRunner</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(org.junit.runner.Runner, org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.OldTestClassRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.fEnclosedRunner</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.getDescription()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.apply(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.apply(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.Parameterized(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerIsNamedForEnclosingClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerPlansEnclosedClasses()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$MarkerRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitialize</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.countBeforeRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.RunWithTest$BadRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAffectsPlan()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAwayEverythingThrowsException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$UnsortableRunner</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.testClassRunnerCanBeWrappedAroundUnsortable()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteTestCountIsCorrect()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopClassRunner()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ValidationTest$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.initializationErrorIsOnCorrectClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.testClassRunnerHandlesBeforeClassAndAfterClassValidation()</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.Runner.Runner()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner.IgnoredClassRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.ErrorReportingRunner(org.junit.runner.Description, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$MarkerRunner.ForwardCompatibilityTest$MarkerRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitialize.InitializationErrorForwardCompatibilityTest$CantInitialize(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$BadRunner.RunWithTest$BadRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.RunWithTest$ExampleRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$UnsortableRunner.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$UnsortableRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest$1.ValidationTest$1(org.junit.tests.ValidationTest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Runner.getDescription()</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(org.junit.runner.Runner, org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Runner.testCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerIsNamedForEnclosingClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.initializationErrorIsOnCorrectClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Runner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.runUnprotected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopClassRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.Runner.testCount()</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerPlansEnclosedClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.countBeforeRun()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAffectsPlan()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteTestCountIsCorrect()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.runner.manipulation</name>
        <class confirmed="yes">
            <name>org.junit.runner.manipulation.Filter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.FilterRequest(org.junit.runner.Request, org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.fFilter</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.Request$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filterable.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.SingleMethodTest$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAwayEverythingThrowsException()</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter.ALL</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter.Filter()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Request$1.Request$1(org.junit.runner.Request, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter$1.Filter$1()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$1.SingleMethodTest$1(org.junit.tests.SingleMethodTest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter.apply(org.junit.runner.Runner)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filterable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filterable.filter(org.junit.runner.manipulation.Filter)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter.describe()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter.shouldRun(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter.static {}</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter$1.Filter$1()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.ALL</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.manipulation.Filter$1</name>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter$1.Filter$1()</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.Filter()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter$1.describe()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filter$1.shouldRun(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.manipulation.Filterable</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.CompositeRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.apply(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAwayEverythingThrowsException()</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Filterable.filter(org.junit.runner.manipulation.Filter)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.apply(org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAwayEverythingThrowsException()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.manipulation.NoTestsRemainException</name>
            <outbound type="class" confirmed="no">java.lang.Exception</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.FilterRequest.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.apply(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filterable.filter(org.junit.runner.manipulation.Filter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAwayEverythingThrowsException()</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.NoTestsRemainException.NoTestsRemainException()</name>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.filter(org.junit.runner.manipulation.Filter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.NoTestsRemainException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.manipulation.Sortable</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.CompositeRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.apply(org.junit.runner.Runner)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Sortable.sort(org.junit.runner.manipulation.Sorter)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.apply(org.junit.runner.Runner)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.manipulation.Sorter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Comparator</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.CompositeRunner$1(org.junit.internal.runners.CompositeRunner, org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(org.junit.runner.Runner, org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.val$sorter</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.TestClassMethodsRunner$1(org.junit.internal.runners.TestClassMethodsRunner, org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.val$sorter</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sortable.sort(org.junit.runner.manipulation.Sorter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.testClassRunnerCanBeWrappedAroundUnsortable()</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Sorter.Sorter(java.util.Comparator)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.fComparator</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.testClassRunnerCanBeWrappedAroundUnsortable()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Sorter.apply(org.junit.runner.Runner)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sortable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sortable.sort(org.junit.runner.manipulation.Sorter)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.SortingRequest.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.sort(org.junit.runner.manipulation.Sorter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Sorter.compare(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="no">java.util.Comparator.compare(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.fComparator</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner$1.compare(org.junit.runner.Runner, org.junit.runner.Runner)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner$1.compare(java.lang.reflect.Method, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.manipulation.Sorter.fComparator</name>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.Sorter(java.util.Comparator)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.compare(org.junit.runner.Description, org.junit.runner.Description)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.runner.notification</name>
        <class confirmed="yes">
            <name>org.junit.runner.notification.Failure</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailure(org.junit.runner.notification.Failure, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureTrace(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailures(org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.val$failure</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.testAborted(org.junit.runner.Description, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testExceptionNotThrown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest.failedConstructionIsTestFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresNamedCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParameterListsAreNotArrays()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParametersNotPublic()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.characterizeErrorMessageFromBadRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.constructorException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.noRunnableMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.fDescription</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.fThrownException</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.testAborted(org.junit.runner.Description, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.fDescription</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTestHeader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.fThrownException</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.getDescription()</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.fDescription</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest.failedConstructionIsTestFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.getException()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.fThrownException</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.testFailure(org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTrace()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.constructorException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.noRunnableMethods()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.getMessage()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testExceptionNotThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParameterListsAreNotArrays()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParametersNotPublic()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.characterizeErrorMessageFromBadRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.getTestHeader()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.fDescription</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureHeader(org.junit.runner.notification.Failure, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresNamedCorrectly()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.getTrace()</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.getBuffer()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.printStackTrace(java.io.PrintWriter)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.printFailureTrace(org.junit.runner.notification.Failure)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.Failure.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.fThrownException</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTestHeader()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunListener</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</inbound>
            <inbound type="class" confirmed="yes">org.junit.internal.runners.TextListener</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addFirstListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.removeListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.Result$Listener</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Result.createListener()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ListenerTest$1</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ListenerTest$2</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.notifyListenersInTheOrderInWhichTheyAreAdded()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$1</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.testListener()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.RunnerTest$MyListener</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.newTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.oldTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.testFinished()</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TestListenerTest$ErrorListener</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.failingListener()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.setUp()</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunListener.RunListener()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache$1.JUnit4TestAdapterCache$1(junit.framework.JUnit4TestAdapterCache, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.Result$Listener.Result$Listener(org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$1.ListenerTest$1(org.junit.tests.ListenerTest)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$2.ListenerTest$2(org.junit.tests.ListenerTest)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$1.PreJUnit4TestCaseRunnerTest$1(org.junit.tests.PreJUnit4TestCaseRunnerTest)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$MyListener.RunnerTest$MyListener(org.junit.tests.RunnerTest)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ErrorListener.TestListenerTest$ErrorListener(org.junit.tests.TestListenerTest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunListener.testFailure(org.junit.runner.notification.Failure)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunListener.testFinished(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunListener.testIgnored(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunListener.testRunFinished(org.junit.runner.Result)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunListener.testRunStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunListener.testStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunNotifier</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.OldTestClassRunner$OldTestClassAdaptingListener(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.OldTestClassRunner$OldTestClassAdaptingListener(org.junit.runner.notification.RunNotifier, org.junit.internal.runners.OldTestClassRunner$1)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.fNotifier</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.createAdaptingListener(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.createMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.TestClassRunner$1(org.junit.internal.runners.TestClassRunner, java.lang.Class, java.lang.Class, java.lang.Class, java.lang.Object, org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.runUnprotected()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.val$notifier</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.fNotifier</inbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addFirstListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.fNotifier</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.removeListener(org.junit.runner.notification.RunListener)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.Runner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.RunNotifier$1(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.RunNotifier$1)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$MarkerRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitialize.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$BadRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$UnsortableRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.createNotifier()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.fNotifier</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopMethodRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.userStop()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest$1.run(org.junit.runner.notification.RunNotifier)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.RunNotifier()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fListeners</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fPleaseStop</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.createNotifier()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.access$000(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fListeners</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(int, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fListeners</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addFirstListener(org.junit.runner.notification.RunListener)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fListeners</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapterCache.getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.fListeners</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.RunNotifier()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.access$000(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addListener(org.junit.runner.notification.RunListener)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.fPleaseStop</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.RunNotifier()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.pleaseStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</outbound>
                <outbound type="feature" confirmed="no">org.junit.runner.notification.RunNotifier$4.run()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner$1.addFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.addFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.testAborted(org.junit.runner.Description, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="no">org.junit.runner.notification.RunNotifier$6.run()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.testAborted(org.junit.runner.Description, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.fireTestIgnored(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="no">org.junit.runner.notification.RunNotifier$5.run()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.requests.IgnoredClassRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.fireTestRunFinished(org.junit.runner.Result)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="no">org.junit.runner.notification.RunNotifier$2.run()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.fireTestRunStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.RunNotifier$1(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="no">org.junit.runner.notification.RunNotifier$1.run()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="no">org.junit.runner.notification.RunNotifier$3.run()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fPleaseStop</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.StoppedByUserException</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.StoppedByUserException.StoppedByUserException()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner$OldTestClassAdaptingListener.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.testAborted(org.junit.runner.Description, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.userStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.pleaseStop()</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fPleaseStop</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.createNotifier()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.removeListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.remove(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fListeners</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.removeListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier.testAborted(org.junit.runner.Description, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.ErrorReportingRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(java.lang.reflect.Method, org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunNotifier$1</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier</outbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.RunNotifier$1)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$1.RunNotifier$1(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.val$description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.RunNotifier$1)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestRunStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$1.notifyListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testRunStarted(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.val$description</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runner.notification.RunNotifier$1.run()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestRunStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.RunNotifier$1(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$1.val$description</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.RunNotifier$1(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunNotifier$2</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.val$result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.RunNotifier$1)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$2.notifyListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testRunFinished(org.junit.runner.Result)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.val$result</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runner.notification.RunNotifier$2.run()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestRunFinished(org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$2.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$2.val$result</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunNotifier$3</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.val$description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.RunNotifier$1)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$3.notifyListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testStarted(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.val$description</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runner.notification.RunNotifier$3.run()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$3.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$3.val$description</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunNotifier$4</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.val$failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.RunNotifier$1)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$4.notifyListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testFailure(org.junit.runner.notification.Failure)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.val$failure</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runner.notification.RunNotifier$4.run()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$4.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$4.val$failure</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunNotifier$5</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.val$description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.RunNotifier$1)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestIgnored(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$5.notifyListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testIgnored(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.val$description</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runner.notification.RunNotifier$5.run()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestIgnored(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$5.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$5.val$description</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunNotifier$6</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier</outbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.val$description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.RunNotifier$1)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$6.notifyListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.testFinished(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.val$description</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runner.notification.RunNotifier$6.run()</name>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$6.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$6.val$description</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.notifyListener(org.junit.runner.notification.RunListener)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.RunNotifier$SafeNotifier</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$1</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$2</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$3</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$4</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$5</inbound>
            <inbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$6</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.RunNotifier$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.RunNotifier$1)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier$1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$1.RunNotifier$1(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$2.RunNotifier$2(org.junit.runner.notification.RunNotifier, org.junit.runner.Result)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$3.RunNotifier$3(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$4.RunNotifier$4(org.junit.runner.notification.RunNotifier, org.junit.runner.notification.Failure)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$5.RunNotifier$5(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$6.RunNotifier$6(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$SafeNotifier.notifyListener(org.junit.runner.notification.RunListener)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$SafeNotifier.run()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.remove()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.TEST_MECHANISM</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.Failure(org.junit.runner.Description, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.notifyListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.access$000(org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestFailure(org.junit.runner.notification.Failure)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.RunNotifier$SafeNotifier.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.RunNotifier$SafeNotifier(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier$SafeNotifier.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runner.notification.StoppedByUserException</name>
            <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
            <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.StoppedByUserException.StoppedByUserException()</name>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runner.notification.StoppedByUserException.serialVersionUID</name>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.runners</name>
        <class confirmed="yes">
            <name>org.junit.runners.AllTests</name>
            <outbound type="class" confirmed="yes">org.junit.internal.runners.OldTestClassRunner</outbound>
            <inbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.getRunnerClass(java.lang.Class)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runners.AllTests.AllTests(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCountAdapted()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.exceptionThrownWhenSuiteIsBad()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runners.AllTests.testCount()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCountAdapted()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.AllTests.testFromSuiteMethod(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getCause()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isStatic(int)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.AllTests.AllTests(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runners.Enclosed</name>
            <outbound type="class" confirmed="yes">org.junit.runners.Suite</outbound>
            <feature confirmed="yes">
                <name>org.junit.runners.Enclosed.Enclosed(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getClasses()</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runners.Parameterized</name>
            <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</outbound>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized.Parameterized(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized.eachOne(java.lang.Object[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$IncorrectTest.data()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$ParameterizedOneTimeSetup.params()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized.validate(org.junit.internal.runners.MethodValidator)</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.MethodValidator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateInstanceMethods()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateStaticMethods()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runners.Parameterized$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int, org.junit.runners.Parameterized$1)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.junit.runners.Parameterized$Parameters</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
        </class>
        <class confirmed="yes">
            <name>org.junit.runners.Parameterized$RunAllParameterMethods</name>
            <outbound type="class" confirmed="yes">org.junit.internal.runners.CompositeRunner</outbound>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Object[]</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.CompositeRunner(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.CompositeRunner.add(org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runners.Parameterized$1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.fKlass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int, org.junit.runners.Parameterized$1)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized.Parameterized(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$RunAllParameterMethods.fKlass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runners.Parameterized$RunAllParameterMethods.getName()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$RunAllParameterMethods.getParametersMethod()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethods()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isStatic(int)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runners.Parameterized$Parameters</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.fKlass</outbound>
                <outbound type="feature" confirmed="no">org.junit.runners.Parameterized$RunAllParameterMethods.getName()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.getParametersList()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runners.Parameterized$TestClassRunnerForParameters</name>
            <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner</outbound>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassMethodsRunner.TestClassMethodsRunner(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fConstructor</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fParameterSetNumber</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fParameters</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int, org.junit.runners.Parameterized$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int, org.junit.runners.Parameterized$1)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.junit.runners.Parameterized$1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$RunAllParameterMethods.Parameterized$RunAllParameterMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.createTest()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fConstructor</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fParameters</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.fConstructor</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.createTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.fParameterSetNumber</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.fParameters</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.createTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.getName()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fParameterSetNumber</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getConstructors()</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.junit.runners.Parameterized$TestClassRunnerForParameters.getTestClass()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.Parameterized$TestClassRunnerForParameters(java.lang.Class, java.lang.Object[], int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.getTestClass()</name>
                <inbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.getOnlyConstructor()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Parameterized$TestClassRunnerForParameters.testName(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized$TestClassRunnerForParameters.fParameterSetNumber</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runners.Suite</name>
            <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</outbound>
            <inbound type="class" confirmed="yes">org.junit.runners.Enclosed</inbound>
            <feature confirmed="yes">
                <name>org.junit.runners.Suite.Suite(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.remove(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.classes(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Suite.addParent(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Suite.parents</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Enclosed.Enclosed(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Suite.addParent(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Suite.parents</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.InitializationError(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runners.Suite$SuiteClasses</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Suite$SuiteClasses.value()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Suite.parents</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.Suite(java.lang.Class, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.addParent(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Suite.static {}</name>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Suite.parents</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.runners.Suite.validate(org.junit.internal.runners.MethodValidator)</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.MethodValidator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateInstanceMethods()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateStaticMethods()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.runners.Suite$SuiteClasses</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            <feature confirmed="yes">
                <name>org.junit.runners.Suite$SuiteClasses.value()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.runners.Suite.getAnnotatedClasses(java.lang.Class)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.samples</name>
        <class confirmed="yes">
            <name>org.junit.samples.ListTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.samples.ListTest.ListTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.ListTest.capacity()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.ListTest.fFull</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.ListTest.contains()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.contains(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.ListTest.fEmpty</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.ListTest.fFull</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.ListTest.elementAt()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.intValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.ListTest.fFull</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.ListTest.fEmpty</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.contains()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.removeAll()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.setUp()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.ListTest.fFull</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.capacity()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.contains()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.elementAt()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.removeAll()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.removeElement()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.setUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.testCopy()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.ListTest.fgHeavy</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.setUpOnce()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.ListTest.main(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.run(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.ListTest.suite()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.ListTest.removeAll()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.removeAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.ListTest.fEmpty</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.ListTest.fFull</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.ListTest.removeElement()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.Integer(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.contains(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.remove(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.ListTest.fFull</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.ListTest.setUp()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.ListTest.fEmpty</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.ListTest.fFull</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.ListTest.setUpOnce()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.ListTest.fgHeavy</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.ListTest.suite()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.ListTest.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.ListTest.testCopy()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(int)</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.contains(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.ListTest.fFull</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.samples.SimpleTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.samples.SimpleTest.SimpleTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.SimpleTest.divideByZero()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.SimpleTest.fValue1</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.setUp()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.SimpleTest.fValue2</name>
                <inbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.setUp()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.SimpleTest.setUp()</name>
                <outbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.fValue1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.SimpleTest.fValue2</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.SimpleTest.suite()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.SimpleTest.testEquals()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.Long(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.valueOf(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, double, double, double)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.samples.money</name>
        <class confirmed="yes">
            <name>org.junit.samples.money.MoneyTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.MoneyTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.f12CHF</name>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.setUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNotEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMixedSimpleAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyHash()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize2()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize4()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testPrint()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleSubtract()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.f14CHF</name>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.setUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSimpleAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleBagAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleMultiply()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleNegate()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleSubtract()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.f21USD</name>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.setUp()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.f7USD</name>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.setUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNotEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMixedSimpleAdd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.fMB1</name>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.setUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagMultiply()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagNegate()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSimpleAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSubtract()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSumAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testIsZero()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagEquals()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagHash()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize2()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testNormalize3()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testSimpleBagAdd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.fMB2</name>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.setUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSubtract()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testBagSumAdd()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.testMoneyBagEquals()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.setUp()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.MoneyBag.create(junit.samples.money.IMoney, junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f12CHF</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f14CHF</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f21USD</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f7USD</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB2</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.suite()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testBagMultiply()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.IMoney.isZero()</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.IMoney.multiply(int)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.MoneyBag.create(junit.samples.money.IMoney, junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB1</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testBagNegate()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.IMoney.negate()</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.MoneyBag.create(junit.samples.money.IMoney, junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB1</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testBagNotEquals()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.add(junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.MoneyBag.create(junit.samples.money.IMoney, junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertFalse(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f12CHF</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f7USD</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testBagSimpleAdd()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.IMoney.add(junit.samples.money.IMoney)</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.MoneyBag.create(junit.samples.money.IMoney, junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f14CHF</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB1</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testBagSubtract()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.IMoney.subtract(junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.MoneyBag.create(junit.samples.money.IMoney, junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB2</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testBagSumAdd()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.IMoney.add(junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.MoneyBag.create(junit.samples.money.IMoney, junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB2</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testIsZero()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.IMoney.isZero()</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.IMoney.subtract(junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.MoneyBag.create(junit.samples.money.IMoney, junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB1</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testMixedSimpleAdd()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.add(junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.MoneyBag.create(junit.samples.money.IMoney, junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f12CHF</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f7USD</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testMoneyBagEquals()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.MoneyBag.create(junit.samples.money.IMoney, junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f12CHF</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB2</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testMoneyBagHash()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.hashCode()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.MoneyBag.create(junit.samples.money.IMoney, junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB1</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testMoneyEquals()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.hashCode()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f12CHF</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f14CHF</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testMoneyHash()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.hashCode()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f12CHF</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testNormalize2()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.IMoney.subtract(junit.samples.money.IMoney)</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f12CHF</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB1</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testNormalize3()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.IMoney.subtract(junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.MoneyBag.create(junit.samples.money.IMoney, junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB1</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testNormalize4()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.subtract(junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.MoneyBag.create(junit.samples.money.IMoney, junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f12CHF</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testPrint()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f12CHF</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testSimpleAdd()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.add(junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f12CHF</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f14CHF</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testSimpleBagAdd()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.add(junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.MoneyBag.create(junit.samples.money.IMoney, junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f14CHF</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.fMB1</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testSimpleMultiply()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.multiply(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f14CHF</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testSimpleNegate()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.negate()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f14CHF</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testSimpleSubtract()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.Money</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.subtract(junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f12CHF</outbound>
                <outbound type="feature" confirmed="yes">org.junit.samples.money.MoneyTest.f14CHF</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.testSimplify()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">junit.samples.money.IMoney</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.MoneyBag.create(junit.samples.money.IMoney, junit.samples.money.IMoney)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.samples.money.MoneyTest.zeroMoniesAreEqualRegardlessOfCurrency()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.Money(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">junit.samples.money.Money.hashCode()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.tests</name>
        <class confirmed="yes">
            <name>org.junit.tests.AllTests</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTests.AllTests()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTests.suite()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AllTestsTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest.AllTestsTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest.access$002(boolean)</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.run</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$JUnit4Test.testSomething()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$OneTest.testSomething()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest.correctTestCount()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.AllTests.AllTests(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.junit.runners.AllTests.testCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AllTestsTest$All</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest.correctTestCountAdapted()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.AllTests.AllTests(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.junit.runners.AllTests.testCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AllTestsTest$AllJUnit4</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest.ensureTestIsRun()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AllTestsTest$All</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.run</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest.exceptionThrownWhenSuiteIsBad()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.AllTests.AllTests(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AllTestsTest$BadSuiteMethod</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest.run</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.access$002(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.ensureTestIsRun()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AllTestsTest$All</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.ensureTestIsRun()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest$All.AllTestsTest$All()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest$All.suite()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestSuite(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AllTestsTest$OneTest</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AllTestsTest$AllJUnit4</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.correctTestCountAdapted()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest$AllJUnit4.AllTestsTest$AllJUnit4()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest$AllJUnit4.suite()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AllTestsTest$JUnit4Test</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AllTestsTest$BadSuiteMethod</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.exceptionThrownWhenSuiteIsBad()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest$BadSuiteMethod.AllTestsTest$BadSuiteMethod()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest$BadSuiteMethod.suite()</name>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AllTestsTest$JUnit4Test</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$AllJUnit4.suite()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest$JUnit4Test.AllTestsTest$JUnit4Test()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest$JUnit4Test.testSomething()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.access$002(boolean)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AllTestsTest$OneTest</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest$All.suite()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest$OneTest.AllTestsTest$OneTest()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AllTestsTest$OneTest.testSomething()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AllTestsTest.access$002(boolean)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.AnnotationTest()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.tests.AnnotationTest.assertEquals(int, int)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInAfterClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testException()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testExceptionNotThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testNonStaticOneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOneTimeTeardown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClassesRegardless()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAftersRegardless()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTwoTests()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.tests.AnnotationTest.assertEquals(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.tests.AnnotationTest.assertEquals(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testExceptionNotThrown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrder()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrderingOfInheritance()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testShadowing()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.tests.AnnotationTest.assertFalse(boolean)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestInheritance()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.tests.AnnotationTest.assertTrue(boolean)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testAnnotatedMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInAfterClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldSuiteTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClassesRegardless()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAftersRegardless()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownAfterFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestInheritance()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.count</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OneTimeSetup.once()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OneTimeTeardown.once()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TwoTests.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TwoTests.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOneTimeTeardown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTwoTests()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.log</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.onceAfter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.onceBefore()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClasses.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClasses.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfters.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfters.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.afterClassSub()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.afterSub()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.beforeClassSub()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.beforeSub()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubTest.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.afterClassSuper()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.afterSuper()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.beforeClassSuper()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.beforeSuper()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperShadowing.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperShadowing.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperTest.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperTest.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrder()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrderingOfInheritance()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClassesRegardless()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfters()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAftersRegardless()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testShadowing()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestInheritance()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.run</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$ErrorInAfterClass.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$ErrorInBeforeClass.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OldSuiteTest.testOne()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$OldTest.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SetupFailureTest.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SetupTest.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SimpleTest.success()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TeardownAfterFailureTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TeardownTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.setUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testAnnotatedMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInAfterClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldSuiteTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardown()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownAfterFailure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.setUp()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testAnnotatedMethod()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SimpleTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testErrorInAfterClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$ErrorInAfterClass</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(int, int)</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testErrorInBeforeClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$ErrorInBeforeClass</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(int, int)</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertFalse(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testException()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$ExceptionTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testExceptionNotThrown()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getMessage()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$NoExceptionTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(int, int)</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(java.lang.String, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testNonStaticOneTimeSetup()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$NonStaticOneTimeSetup</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testOldSuiteTest()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$OldSuiteTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testOldTest()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$OldTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testOneTimeSetup()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$OneTimeSetup</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(int, int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.count</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testOneTimeTeardown()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$OneTimeTeardown</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(int, int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.count</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testOrder()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$OrderTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testOrderingOfInheritance()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testRunAllAfterClasses()</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClasses</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testRunAllAfterClassesRegardless()</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(int, int)</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testRunAllAfters()</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAfters</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testRunAllAftersRegardless()</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$RunAllAftersRegardless</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(int, int)</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testRunFailure()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$FailureTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(int, int)</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testSetup()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SetupTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testSetupFailure()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Error</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SetupFailureTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(int, int)</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertFalse(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testShadowing()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testTeardown()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$TeardownTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testTeardownAfterFailure()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$TeardownAfterFailureTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testTeardownFailure()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Error</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$TeardownFailureTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(int, int)</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Error</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$TestAndTeardownFailureTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(int, int)</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testTestInheritance()</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SubTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertFalse(boolean)</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.testTwoTests()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$TwoTests</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.AnnotationTest.assertEquals(int, int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.count</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.tests</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest.tests</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TwoTests.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$TwoTests.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTwoTests()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$ErrorInAfterClass</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInAfterClass()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$ErrorInAfterClass.AnnotationTest$ErrorInAfterClass()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$ErrorInAfterClass.after()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$ErrorInAfterClass.test()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$ErrorInBeforeClass</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testErrorInBeforeClass()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$ErrorInBeforeClass.AnnotationTest$ErrorInBeforeClass()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$ErrorInBeforeClass.before()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$ErrorInBeforeClass.test()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$ExceptionTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testException()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$ExceptionTest.AnnotationTest$ExceptionTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$ExceptionTest.expectedException()</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$FailureTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunFailure()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$FailureTest.AnnotationTest$FailureTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$FailureTest.error()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$NoExceptionTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testExceptionNotThrown()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$NoExceptionTest.AnnotationTest$NoExceptionTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$NoExceptionTest.expectedException()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$NonStaticOneTimeSetup</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testNonStaticOneTimeSetup()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$NonStaticOneTimeSetup.AnnotationTest$NonStaticOneTimeSetup()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$NonStaticOneTimeSetup.once()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$OldSuiteTest</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldSuiteTest()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OldSuiteTest.AnnotationTest$OldSuiteTest()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OldSuiteTest.testOne()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$OldTest</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOldTest()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OldTest.AnnotationTest$OldTest()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OldTest.test()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$OneTimeSetup</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOneTimeSetup()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OneTimeSetup.AnnotationTest$OneTimeSetup()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OneTimeSetup.once()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.count</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OneTimeSetup.one()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OneTimeSetup.two()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$OneTimeTeardown</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOneTimeTeardown()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OneTimeTeardown.AnnotationTest$OneTimeTeardown()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OneTimeTeardown.once()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.count</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OneTimeTeardown.one()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OneTimeTeardown.two()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$OrderTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrder()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OrderTest.AnnotationTest$OrderTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OrderTest.after()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OrderTest.before()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OrderTest.onceAfter()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OrderTest.onceBefore()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$OrderTest.test()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$RunAllAfterClasses</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClasses()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAfterClasses.AnnotationTest$RunAllAfterClasses()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAfterClasses.bad()</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAfterClasses.empty()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAfterClasses.good()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAfterClasses.one()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAfterClasses.two()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfterClassesRegardless()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.AnnotationTest$RunAllAfterClassesRegardless()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.empty()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.one()</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAfterClassesRegardless.two()</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$RunAllAfters</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAfters()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAfters.AnnotationTest$RunAllAfters()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAfters.bad()</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAfters.empty()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAfters.good()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAfters.one()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAfters.two()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$RunAllAftersRegardless</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testRunAllAftersRegardless()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAftersRegardless.AnnotationTest$RunAllAftersRegardless()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAftersRegardless.empty()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAftersRegardless.one()</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$RunAllAftersRegardless.two()</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$SetupFailureTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetupFailure()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SetupFailureTest.AnnotationTest$SetupFailureTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SetupFailureTest.before()</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SetupFailureTest.test()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$SetupTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testSetup()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SetupTest.AnnotationTest$SetupTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SetupTest.before()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SetupTest.success()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$SimpleTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testAnnotatedMethod()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SimpleTest.AnnotationTest$SimpleTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SimpleTest.success()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$SubInheritance</name>
            <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testOrderingOfInheritance()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SubInheritance.AnnotationTest$SubInheritance()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperInheritance.AnnotationTest$SuperInheritance()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SubInheritance.afterClassSub()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SubInheritance.afterSub()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SubInheritance.beforeClassSub()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SubInheritance.beforeSub()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SubInheritance.test()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$SubShadowing</name>
            <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SuperShadowing</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testShadowing()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SubShadowing.AnnotationTest$SubShadowing()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperShadowing.AnnotationTest$SuperShadowing()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SubShadowing.after()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SubShadowing.before()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SubShadowing.test()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$SubTest</name>
            <outbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SuperTest</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestInheritance()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SubTest.AnnotationTest$SubTest()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SuperTest.AnnotationTest$SuperTest()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SubTest.one()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$SuperInheritance</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SuperInheritance.AnnotationTest$SuperInheritance()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubInheritance.AnnotationTest$SubInheritance()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SuperInheritance.afterClassSuper()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SuperInheritance.afterSuper()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SuperInheritance.beforeClassSuper()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SuperInheritance.beforeSuper()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$SuperShadowing</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SuperShadowing.AnnotationTest$SuperShadowing()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubShadowing.AnnotationTest$SubShadowing()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SuperShadowing.after()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SuperShadowing.before()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$SuperTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.junit.tests.AnnotationTest$SubTest</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SuperTest.AnnotationTest$SuperTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest$SubTest.AnnotationTest$SubTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SuperTest.one()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$SuperTest.two()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.log</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$TeardownAfterFailureTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownAfterFailure()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$TeardownAfterFailureTest.AnnotationTest$TeardownAfterFailureTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$TeardownAfterFailureTest.after()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$TeardownAfterFailureTest.test()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$TeardownFailureTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardownFailure()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$TeardownFailureTest.AnnotationTest$TeardownFailureTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$TeardownFailureTest.after()</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$TeardownFailureTest.test()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$TeardownTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTeardown()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$TeardownTest.AnnotationTest$TeardownTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$TeardownTest.after()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.run</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$TeardownTest.success()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$TestAndTeardownFailureTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTestAndTeardownFailure()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$TestAndTeardownFailureTest.AnnotationTest$TestAndTeardownFailureTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$TestAndTeardownFailureTest.after()</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$TestAndTeardownFailureTest.test()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AnnotationTest$TwoTests</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.testTwoTests()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$TwoTests.AnnotationTest$TwoTests()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$TwoTests.one()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.count</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.tests</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AnnotationTest$TwoTests.two()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.count</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.AnnotationTest.tests</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.AssertionTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.AssertionTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.arraysActualNullMessage()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.arraysContainingIntsAreEqualToArraysContainingLongs()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.valueOf(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.Object[], java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.arraysDeclaredAsObjectAreComparedAsObjects()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.arraysDifferAtElement0nullMessage()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.Object[], java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.arraysDifferAtElement0withMessage()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.arraysDifferAtElement1nullMessage()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.Object[], java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.arraysDifferAtElement1withMessage()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.arraysDifferentLengthMessage()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.arraysElementsDiffer()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.arraysEqual()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.Object[], java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.arraysEqualWithMessage()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.arraysExpectedNullMessage()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.arraysNotEqual()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.Object[], java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.arraysNotEqualWithMessage()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.arraysWithNullElementEqual()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.Object[], java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.booleansNotEqual()</name>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.bytesNotEqual()</name>
                <outbound type="class" confirmed="no">java.lang.Byte</outbound>
                <outbound type="feature" confirmed="no">java.lang.Byte.valueOf(byte)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.charsNotEqual()</name>
                <outbound type="class" confirmed="no">java.lang.Character</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.valueOf(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.doublesNotEqual()</name>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(double, double, double)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.equals()</name>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Byte</outbound>
                <outbound type="feature" confirmed="no">java.lang.Byte.valueOf(byte)</outbound>
                <outbound type="class" confirmed="no">java.lang.Character</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.valueOf(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.valueOf(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.Short</outbound>
                <outbound type="feature" confirmed="no">java.lang.Short.valueOf(short)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(double, double, double)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.errorMessageDistinguishesDifferentValuesWithSameToString()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.Integer(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.fails()</name>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.floatsNotEqual()</name>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(double, double, double)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.implicitTypecastEquality()</name>
                <outbound type="class" confirmed="no">java.lang.Byte</outbound>
                <outbound type="feature" confirmed="no">java.lang.Byte.valueOf(byte)</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.valueOf(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Short</outbound>
                <outbound type="feature" confirmed="no">java.lang.Short.valueOf(short)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(double, double, double)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.intsEqualLongs()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.valueOf(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.intsNotEqual()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.longsNotEqual()</name>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.valueOf(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.multiDimensionalArraysAreEqual()</name>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Object[]</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.Object[], java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqual()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Object[]</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.String, java.lang.Object[], java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.multiDimensionalArraysAreNotEqualNoMessage()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Object[]</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.Object[], java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.multiDimensionalArraysDeclaredAsOneDimensionalAreEqual()</name>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.Object[], java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.multiDimensionalIntArraysAreEqual()</name>
                <outbound type="class" confirmed="no">int[]</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(java.lang.Object[], java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.naNsAreEqual()</name>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(double, double, double)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.notSame()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.notSameNullMessage()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.notSameWithMessage()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.nullMessage()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.nullMessageDisappearsWithAssertEquals()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.nullMessageDisappearsWithStringAssertEquals()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
                <outbound type="class" confirmed="yes">org.junit.ComparisonFailure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.ComparisonFailure.getMessage()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.objectsAreSame()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.objectsNotEquals()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.objectsNotSame()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.oneDimensionalPrimitiveArraysAreEqual()</name>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(byte[], byte[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(char[], char[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(int[], int[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(long[], long[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertArrayEquals(short[], short[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.same()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.sameNullMessage()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.sameWithMessage()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.shortsNotEqual()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Short</outbound>
                <outbound type="feature" confirmed="no">java.lang.Short.valueOf(short)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.stringsDifferWithUserMessage()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.AssertionTest.stringsNotEqual()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ClassRequestTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ClassRequestTest.ClassRequestTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ClassRequestTest.noSuiteMethodIfMethodPrivate()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertFalse(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.ClassRequest(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.requests.ClassRequest.hasSuiteMethod()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ClassRequestTest$PrivateSuiteMethod</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ClassRequestTest$PrivateSuiteMethod</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ClassRequestTest.noSuiteMethodIfMethodPrivate()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ClassRequestTest$PrivateSuiteMethod.ClassRequestTest$PrivateSuiteMethod()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ClassRequestTest$PrivateSuiteMethod.suite()</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.CommandLineTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest.CommandLineTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest.access$002(boolean)</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.testWasRun</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest$Example.test()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest.access$108()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.fCount</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest$Count.increment()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest.after()</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.setOut(java.io.PrintStream)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.oldOut</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest.before()</name>
                <outbound type="class" confirmed="no">java.io.ByteArrayOutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream()</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.PrintStream(java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.setOut(java.io.PrintStream)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.oldOut</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.results</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest.fCount</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.access$108()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClassesAsArray()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest.oldOut</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.before()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest.results</name>
                <outbound type="class" confirmed="no">java.io.ByteArrayOutputStream</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.before()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest.runAClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.CommandLineTest$Example</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.testWasRun</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest.runATest()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runMain(java.lang.String[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.testWasRun</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest.runTwoClasses()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.CommandLineTest$Count</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.fCount</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest.runTwoClassesAsArray()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.CommandLineTest$Count</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.fCount</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest.testWasRun</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.access$002(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runAClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runATest()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.CommandLineTest$Count</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runTwoClassesAsArray()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest$Count.CommandLineTest$Count()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest$Count.increment()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.access$108()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.CommandLineTest$Example</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.runAClass()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest$Example.CommandLineTest$Example()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.CommandLineTest$Example.test()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.CommandLineTest.access$002(boolean)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.EnclosedTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.EnclosedTest.EnclosedTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.EnclosedTest.enclosedRunnerIsNamedForEnclosingClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.EnclosedTest$Enclosing</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.EnclosedTest.enclosedRunnerPlansEnclosedClasses()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.testCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.EnclosedTest$Enclosing</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.EnclosedTest.enclosedRunnerRunsEnclosedClasses()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.EnclosedTest$Enclosing</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.EnclosedTest$Enclosing</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerIsNamedForEnclosingClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerPlansEnclosedClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.EnclosedTest.enclosedRunnerRunsEnclosedClasses()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.EnclosedTest$Enclosing.EnclosedTest$Enclosing()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.EnclosedTest$Enclosing$A</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.EnclosedTest$Enclosing$A.EnclosedTest$Enclosing$A()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.EnclosedTest$Enclosing$A.a()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.EnclosedTest$Enclosing$A.b()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.EnclosedTest$Enclosing$B</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.EnclosedTest$Enclosing$B.EnclosedTest$Enclosing$B()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.EnclosedTest$Enclosing$B.a()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.EnclosedTest$Enclosing$B.b()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.EnclosedTest$Enclosing$B.c()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ExpectedTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ExpectedTest.ExpectedTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ExpectedTest.expected()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.wasSuccessful()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ExpectedTest$Expected</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ExpectedTest.expectsSuperclass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.wasSuccessful()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ExpectedTest$ExpectSuperclass</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ExpectedTest.noneThrown()</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertFalse(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.wasSuccessful()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getMessage()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ExpectedTest$NoneThrown</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ExpectedTest.unexpected()</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Error</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getCause()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getMessage()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ExpectedTest$Unexpected</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ExpectedTest$ExpectSuperclass</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.expectsSuperclass()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ExpectedTest$ExpectSuperclass.ExpectedTest$ExpectSuperclass()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ExpectedTest$ExpectSuperclass.throwsSubclass()</name>
                <outbound type="feature" confirmed="no">java.lang.ClassCastException.ClassCastException()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ExpectedTest$Expected</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.expected()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ExpectedTest$Expected.ExpectedTest$Expected()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ExpectedTest$Expected.expected()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ExpectedTest$NoneThrown</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.noneThrown()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ExpectedTest$NoneThrown.ExpectedTest$NoneThrown()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ExpectedTest$NoneThrown.nothing()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ExpectedTest$Unexpected</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ExpectedTest.unexpected()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ExpectedTest$Unexpected.ExpectedTest$Unexpected()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ExpectedTest$Unexpected.expected()</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.FailedConstructionTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.FailedConstructionTest.FailedConstructionTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.FailedConstructionTest.failedConstructionIsTestFailure()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.FailedConstructionTest$CantConstruct</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.FailedConstructionTest$CantConstruct</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.FailedConstructionTest.failedConstructionIsTestFailure()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.FailedConstructionTest$CantConstruct.FailedConstructionTest$CantConstruct()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.FailedConstructionTest$CantConstruct.foo()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityPrintingTest</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$1.ForwardCompatibilityPrintingTest$1(org.junit.tests.ForwardCompatibilityPrintingTest, java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$2.ForwardCompatibilityPrintingTest$2(org.junit.tests.ForwardCompatibilityPrintingTest)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$2.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$3.ForwardCompatibilityPrintingTest$3(org.junit.tests.ForwardCompatibilityPrintingTest, java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$3.this$0</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest.ForwardCompatibilityPrintingTest()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest.assertEquals(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest.expected(java.lang.String[])</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream()</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.PrintStream(java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest.testError()</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.toString()</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.PrintStream(java.io.OutputStream)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.setPrinter(junit.textui.ResultPrinter)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$1.ForwardCompatibilityPrintingTest$1(org.junit.tests.ForwardCompatibilityPrintingTest, java.io.PrintStream)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$2.ForwardCompatibilityPrintingTest$2(org.junit.tests.ForwardCompatibilityPrintingTest)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$TestResultPrinter.ForwardCompatibilityPrintingTest$TestResultPrinter(java.io.PrintStream)</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityPrintingTest.assertEquals(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.expected(java.lang.String[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.toString()</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.PrintStream(java.io.OutputStream)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.setPrinter(junit.textui.ResultPrinter)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$3.ForwardCompatibilityPrintingTest$3(org.junit.tests.ForwardCompatibilityPrintingTest, java.io.PrintStream)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$ATest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$TestResultPrinter.ForwardCompatibilityPrintingTest$TestResultPrinter(java.io.PrintStream)</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityPrintingTest.assertEquals(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.expected(java.lang.String[])</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityPrintingTest$1</name>
            <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$TestResultPrinter</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest$1.ForwardCompatibilityPrintingTest$1(org.junit.tests.ForwardCompatibilityPrintingTest, java.io.PrintStream)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$TestResultPrinter.ForwardCompatibilityPrintingTest$TestResultPrinter(java.io.PrintStream)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest$1.getWriter()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$1.printErrors(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest$1.printErrors(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityPrintingTest$1.getWriter()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$1.ForwardCompatibilityPrintingTest$1(org.junit.tests.ForwardCompatibilityPrintingTest, java.io.PrintStream)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityPrintingTest$2</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest$2.ForwardCompatibilityPrintingTest$2(org.junit.tests.ForwardCompatibilityPrintingTest)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$2.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest$2.runTest()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest$2.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$2.ForwardCompatibilityPrintingTest$2(org.junit.tests.ForwardCompatibilityPrintingTest)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityPrintingTest$3</name>
            <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$TestResultPrinter</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest$3.ForwardCompatibilityPrintingTest$3(org.junit.tests.ForwardCompatibilityPrintingTest, java.io.PrintStream)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$3.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$TestResultPrinter.ForwardCompatibilityPrintingTest$TestResultPrinter(java.io.PrintStream)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest$3.getWriter()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$3.printErrors(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest$3.printErrors(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityPrintingTest$3.getWriter()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest$3.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$3.ForwardCompatibilityPrintingTest$3(org.junit.tests.ForwardCompatibilityPrintingTest, java.io.PrintStream)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityPrintingTest$ATest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest$ATest.ForwardCompatibilityPrintingTest$ATest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest$ATest.error()</name>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityPrintingTest$TestResultPrinter</name>
            <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$1</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$3</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest$TestResultPrinter.ForwardCompatibilityPrintingTest$TestResultPrinter(java.io.PrintStream)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$1.ForwardCompatibilityPrintingTest$1(org.junit.tests.ForwardCompatibilityPrintingTest, java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest$3.ForwardCompatibilityPrintingTest$3(org.junit.tests.ForwardCompatibilityPrintingTest, java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityPrintingTest.testErrorAdapted()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityPrintingTest$TestResultPrinter.elapsedTimeAsString(long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityTest</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.ForwardCompatibilityTest$1(org.junit.tests.ForwardCompatibilityTest, java.lang.StringBuffer)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.this$0</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.ForwardCompatibilityTest()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.access$002(boolean)</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.wasRun</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$MarkerRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.tests.ForwardCompatibilityTest.assertEquals(int, int)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testExceptionInBefore()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.tests.ForwardCompatibilityTest.assertEquals(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testException()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.tests.ForwardCompatibilityTest.assertEquals(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testBeforeAndAfterClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testCompatibility()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToString()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToStringSuite()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.tests.ForwardCompatibilityTest.assertFalse(boolean)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNoException()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.tests.ForwardCompatibilityTest.assertSame(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testUseGlobalCache()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.tests.ForwardCompatibilityTest.assertTrue(boolean)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testExpected()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testRunWithClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.exception</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$ErrorTest.error()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testException()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.fLog</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest.test()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testCompatibility()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.log</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.afterClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.beforeClass()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.one()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.two()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testBeforeAndAfterClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.static {}</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.exception</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.wasRun</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.testBeforeAndAfterClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$BeforeClassTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityTest.assertEquals(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.testCompatibility()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityTest.assertEquals(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.fLog</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.testException()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.thrownException()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$ErrorTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityTest.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.exception</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.testExceptionInBefore()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$ExceptionInBeforeTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityTest.assertEquals(int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.testExpected()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$ExpectedTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityTest.assertTrue(boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.exceptionMessage()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$InvalidMethodTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityTest.assertEquals(int, int)</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityTest.assertTrue(boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.testNoException()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NoExceptionTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityTest.assertFalse(boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.ForwardCompatibilityTest$1(org.junit.tests.ForwardCompatibilityTest, java.lang.StringBuffer)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$ErrorTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityTest.assertEquals(java.lang.String, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.testRunWithClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NoTests</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityTest.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.wasRun</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.testToString()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityTest.assertEquals(java.lang.String, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.testToStringSuite()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NoTests</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityTest.assertEquals(java.lang.String, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.testUseGlobalCache()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$NewTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.ForwardCompatibilityTest.assertSame(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest.wasRun</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.access$002(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testRunWithClass()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityTest$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$1.ForwardCompatibilityTest$1(org.junit.tests.ForwardCompatibilityTest, java.lang.StringBuffer)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.val$log</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$1.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.val$log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.val$log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$1.endTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.val$log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$1.startTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.val$log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.tests.ForwardCompatibilityTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.ForwardCompatibilityTest$1(org.junit.tests.ForwardCompatibilityTest, java.lang.StringBuffer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$1.val$log</name>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.ForwardCompatibilityTest$1(org.junit.tests.ForwardCompatibilityTest, java.lang.StringBuffer)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest$1.startTest(junit.framework.Test)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityTest$BeforeClassTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testBeforeAndAfterClass()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.ForwardCompatibilityTest$BeforeClassTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.after()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.afterClass()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.before()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.beforeClass()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.one()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$BeforeClassTest.two()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.log</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityTest$ErrorTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNotifyResult()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$ErrorTest.ForwardCompatibilityTest$ErrorTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$ErrorTest.error()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.exception</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityTest$ExceptionInBeforeTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testExceptionInBefore()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$ExceptionInBeforeTest.ForwardCompatibilityTest$ExceptionInBeforeTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$ExceptionInBeforeTest.error()</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$ExceptionInBeforeTest.nothing()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityTest$ExpectedTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testExpected()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$ExpectedTest.ForwardCompatibilityTest$ExpectedTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$ExpectedTest.expected()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityTest$InvalidMethodTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testInvalidMethod()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$InvalidMethodTest.ForwardCompatibilityTest$InvalidMethodTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$InvalidMethodTest.shouldBeStatic()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityTest$MarkerRunner</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$MarkerRunner.ForwardCompatibilityTest$MarkerRunner(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$MarkerRunner.getDescription()</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.EMPTY</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$MarkerRunner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.access$002(boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$MarkerRunner.testCount()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityTest$NewTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testCompatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToString()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testUseGlobalCache()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$NewTest.ForwardCompatibilityTest$NewTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$NewTest.after()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.fLog</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$NewTest.before()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.fLog</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$NewTest.test()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.fLog</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityTest$NoExceptionTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testNoException()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$NoExceptionTest.ForwardCompatibilityTest$NoExceptionTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$NoExceptionTest.succeed()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityTest$NoTests</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testRunWithClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ForwardCompatibilityTest.testToStringSuite()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$NoTests.ForwardCompatibilityTest$NoTests()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ForwardCompatibilityTest$UnExpectedExceptionTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$UnExpectedExceptionTest.ForwardCompatibilityTest$UnExpectedExceptionTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ForwardCompatibilityTest$UnExpectedExceptionTest.expected()</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.IgnoreClassTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.IgnoreClassTest.IgnoreClassTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.IgnoreClassTest.ignoreClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getIgnoreCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.IgnoreClassTest$IgnoreMe</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.IgnoreClassTest$IgnoreMe</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.IgnoreClassTest.ignoreClass()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.IgnoreClassTest$IgnoreMe.IgnoreClassTest$IgnoreMe()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.IgnoreClassTest$IgnoreMe.iFail()</name>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.IgnoreClassTest$IgnoreMe.iFailToo()</name>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.InaccessibleBaseClassTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.InaccessibleBaseClassTest.InaccessibleBaseClassTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InaccessibleBaseClassTest.inaccessibleBaseClassIsCaughtAtValidation()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.assertValid()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.anotherpackage.Sub</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.InitializationErrorForwardCompatibilityTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener(org.junit.tests.InitializationErrorForwardCompatibilityTest)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener(org.junit.tests.InitializationErrorForwardCompatibilityTest, org.junit.tests.InitializationErrorForwardCompatibilityTest$1)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.this$0</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest.InitializationErrorForwardCompatibilityTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest.createAdapter()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapter</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitializeTests</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.fAdapter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest.fAdapter</name>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapter</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.createAdapter()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsShowUpAsWarnings()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapter</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertNotNull(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener(org.junit.tests.InitializationErrorForwardCompatibilityTest, org.junit.tests.InitializationErrorForwardCompatibilityTest$1)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.getError()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.fAdapter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsAreThrownAtRuntime()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapter</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.exceptionMessage()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.fAdapter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest.initializationErrorsShowUpAsWarnings()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.JUnit4TestAdapter</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.fAdapter</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener(org.junit.tests.InitializationErrorForwardCompatibilityTest, org.junit.tests.InitializationErrorForwardCompatibilityTest$1)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitialize</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitialize.InitializationErrorForwardCompatibilityTest$CantInitialize(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitialize.UNIQUE_ERROR_MESSAGE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitialize.getDescription()</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.EMPTY</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitialize.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitializeTests</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.createAdapter()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$CantInitializeTests.InitializationErrorForwardCompatibilityTest$CantInitializeTests()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener(org.junit.tests.InitializationErrorForwardCompatibilityTest)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener(org.junit.tests.InitializationErrorForwardCompatibilityTest, org.junit.tests.InitializationErrorForwardCompatibilityTest$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener(org.junit.tests.InitializationErrorForwardCompatibilityTest, org.junit.tests.InitializationErrorForwardCompatibilityTest$1)</name>
                <outbound type="class" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$1</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener(org.junit.tests.InitializationErrorForwardCompatibilityTest)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.fError</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.endTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.fError</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.getError()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.getError()</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.fError</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest.generatedErrorTestsMatchUp()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.startTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener.InitializationErrorForwardCompatibilityTest$ErrorRememberingListener(org.junit.tests.InitializationErrorForwardCompatibilityTest)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$InitializesWithError</name>
            <outbound type="class" confirmed="yes">org.junit.internal.runners.TestClassRunner</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.InitializationErrorForwardCompatibilityTest$InitializesWithError.InitializationErrorForwardCompatibilityTest$InitializesWithError(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.JUnitCoreTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.JUnitCoreTest.JUnitCoreTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.JUnitCoreTest.failureCausesExitCodeOf1()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.JUnitCoreTest.missingClassCausesExitCodeOf1()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</name>
                <outbound type="feature" confirmed="no">java.io.File.pathSeparator</outbound>
                <outbound type="feature" confirmed="no">java.io.File.separator</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getClassLoader()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.getResource(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Process</outbound>
                <outbound type="feature" confirmed="no">java.lang.Process.getInputStream()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Process.waitFor()</outbound>
                <outbound type="class" confirmed="no">java.lang.Runtime</outbound>
                <outbound type="feature" confirmed="no">java.lang.Runtime.exec(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.Runtime.getRuntime()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getFile()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.failureCausesExitCodeOf1()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.missingClassCausesExitCodeOf1()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.successCausesExitCodeOf0()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.JUnitCoreTest.successCausesExitCodeOf0()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.JUnitCoreTest.runClass(java.lang.String, int)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.JUnitCoreTest$Fail</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.JUnitCoreTest$Fail.JUnitCoreTest$Fail()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.JUnitCoreTest$Fail.kaboom()</name>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.JUnitCoreTest$Succeed</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.JUnitCoreTest$Succeed.JUnitCoreTest$Succeed()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.JUnitCoreTest$Succeed.peacefulSilence()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ListenerTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$1.ListenerTest$1(org.junit.tests.ListenerTest)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$2.ListenerTest$2(org.junit.tests.ListenerTest)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$2.this$0</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ListenerTest.ListenerTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ListenerTest.access$084(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.log</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$1.testRunStarted(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$2.testRunStarted(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ListenerTest.log</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.notifyListenersInTheOrderInWhichTheyAreAdded()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ListenerTest.notifyListenersInTheOrderInWhichTheyAreAdded()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$1.ListenerTest$1(org.junit.tests.ListenerTest)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$2.ListenerTest$2(org.junit.tests.ListenerTest)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ListenerTest$OneTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.log</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ListenerTest$1</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ListenerTest$1.ListenerTest$1(org.junit.tests.ListenerTest)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.RunListener()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ListenerTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.notifyListenersInTheOrderInWhichTheyAreAdded()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ListenerTest$1.testRunStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.access$084(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ListenerTest$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.tests.ListenerTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$1.ListenerTest$1(org.junit.tests.ListenerTest)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ListenerTest$2</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ListenerTest$2.ListenerTest$2(org.junit.tests.ListenerTest)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.RunListener()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ListenerTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$2.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.notifyListenersInTheOrderInWhichTheyAreAdded()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ListenerTest$2.testRunStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.access$084(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ListenerTest$2.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.tests.ListenerTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest$2.ListenerTest$2(org.junit.tests.ListenerTest)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ListenerTest$OneTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ListenerTest.notifyListenersInTheOrderInWhichTheyAreAdded()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ListenerTest$OneTest.ListenerTest$OneTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ListenerTest$OneTest.nothing()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.OldTestClassAdaptingListenerTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest$1.OldTestClassAdaptingListenerTest$1(org.junit.tests.OldTestClassAdaptingListenerTest)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest$1.this$0</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.OldTestClassAdaptingListenerTest.OldTestClassAdaptingListenerTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.createAdaptingListener(org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.Result()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.createListener()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.RunNotifier()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.addFirstListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest$1.OldTestClassAdaptingListenerTest$1(org.junit.tests.OldTestClassAdaptingListenerTest)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.OldTestClassAdaptingListenerTest$1</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.OldTestClassAdaptingListenerTest$1.OldTestClassAdaptingListenerTest$1(org.junit.tests.OldTestClassAdaptingListenerTest)</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest.addFailureDelegatesToNotifier()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.OldTestClassAdaptingListenerTest$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassAdaptingListenerTest$1.OldTestClassAdaptingListenerTest$1(org.junit.tests.OldTestClassAdaptingListenerTest)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.OldTestClassRunnerTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.OldTestClassRunnerTest.OldTestClassRunnerTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.OldTestClassRunnerTest$AnnotatedTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.OldTestClassRunnerTest.plansDecoratorCorrectly()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.OldTestClassRunner.OldTestClassRunner(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="no">org.junit.internal.runners.OldTestClassRunner.testCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.OldTestClassRunnerTest$MyTest</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.OldTestClassRunnerTest$AnnotatedTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.canUnadaptAnAdapter()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.OldTestClassRunnerTest$AnnotatedTest.OldTestClassRunnerTest$AnnotatedTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.OldTestClassRunnerTest$AnnotatedTest.foo()</name>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.OldTestClassRunnerTest$MyTest</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.OldTestClassRunnerTest.plansDecoratorCorrectly()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.OldTestClassRunnerTest$MyTest.OldTestClassRunnerTest$MyTest()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.OldTestClassRunnerTest$MyTest.testA()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.OldTests</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.OldTests.OldTests()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.OldTests.suite()</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="no">junit.tests.AllTests.suite()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ParameterizedTestMethodTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest.ParameterizedTestMethodTest(java.lang.Class, int)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.fClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.fErrorCount</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest.fClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.ParameterizedTestMethodTest(java.lang.Class, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.testFailures()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest.fErrorCount</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.ParameterizedTestMethodTest(java.lang.Class, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.testFailures()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest.params()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Object[]</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest$EverythingWrong</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest$SubShadows</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest$SubWrong</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest.suite()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest.testFailures()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.fClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.fErrorCount</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.validateAllMethods(java.lang.Class)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest.validateAllMethods(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.emptyList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.getCauses()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.testFailures()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.params()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.ParameterizedTestMethodTest$EverythingWrong()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.argumentsA(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.argumentsAC(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.argumentsB(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.argumentsBC(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.argumentsT(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.fineA()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.fineAC()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.fineB()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.fineBC()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.fineT()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.nonVoidA()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.nonVoidAC()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.nonVoidB()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.nonVoidBC()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.nonVoidT()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.notPublicA()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.notPublicAC()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.notPublicB()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.notPublicBC()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.notPublicT()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.notStaticAC()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.notStaticBC()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.staticA()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.staticB()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$EverythingWrong.staticT()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ParameterizedTestMethodTest$SubShadows</name>
            <outbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest$SuperWrong</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.params()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$SubShadows.ParameterizedTestMethodTest$SubShadows()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest$SuperWrong.ParameterizedTestMethodTest$SuperWrong()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$SubShadows.notPublic()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ParameterizedTestMethodTest$SubWrong</name>
            <outbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest$SuperWrong</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest.params()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$SubWrong.ParameterizedTestMethodTest$SubWrong()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest$SuperWrong.ParameterizedTestMethodTest$SuperWrong()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$SubWrong.justFine()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ParameterizedTestMethodTest$SuperWrong</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest$SubShadows</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest$SubWrong</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$SuperWrong.ParameterizedTestMethodTest$SuperWrong()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest$SubShadows.ParameterizedTestMethodTest$SubShadows()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestMethodTest$SubWrong.ParameterizedTestMethodTest$SubWrong()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestMethodTest$SuperWrong.notPublic()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ParameterizedTestTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest.ParameterizedTestTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest.access$084(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.fLog</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$BeforeAndAfter.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$BeforeAndAfter.before()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$EmptyTest.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$EmptyTest.before()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest.beforeAndAfterClassAreRun()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestTest$BeforeAndAfter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.fLog</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest.count()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest.countBeforeRun()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.testCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest.fLog</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.beforeAndAfterClassAreRun()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest.failuresAddedForBadTestMethod()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestTest$IncorrectTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest.failuresNamedCorrectly()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getTestHeader()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParameterListsAreNotArrays()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getMessage()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestTest$WrongElementType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParametersNotPublic()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getMessage()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestTest$ProtectedParametersTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest.validateClassCatchesNoParameters()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ParameterizedTestTest$EmptyTest</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ParameterizedTestTest$BeforeAndAfter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.beforeAndAfterClassAreRun()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$BeforeAndAfter.ParameterizedTestTest$BeforeAndAfter()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$BeforeAndAfter.after()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.access$084(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$BeforeAndAfter.before()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.access$084(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$BeforeAndAfter.data()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.emptyList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ParameterizedTestTest$EmptyTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.validateClassCatchesNoParameters()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$EmptyTest.ParameterizedTestTest$EmptyTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$EmptyTest.after()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.access$084(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$EmptyTest.before()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.access$084(java.lang.Object)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ParameterizedTestTest$FibonacciTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.count()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.countBeforeRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresNamedCorrectly()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.plansNamedCorrectly()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$FibonacciTest.ParameterizedTestTest$FibonacciTest(int, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.fExpected</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.fInput</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$FibonacciTest.data()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Object[]</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$FibonacciTest.fExpected</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.ParameterizedTestTest$FibonacciTest(int, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.test()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$FibonacciTest.fInput</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.ParameterizedTestTest$FibonacciTest(int, int)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.test()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$FibonacciTest.fib(int)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.test()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$FibonacciTest.test()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.fExpected</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.fInput</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest$FibonacciTest.fib(int)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ParameterizedTestTest$IncorrectTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.failuresAddedForBadTestMethod()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$IncorrectTest.ParameterizedTestTest$IncorrectTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$IncorrectTest.data()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized.eachOne(java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$IncorrectTest.test()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ParameterizedTestTest$ProtectedParametersTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParametersNotPublic()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$ProtectedParametersTest.ParameterizedTestTest$ProtectedParametersTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$ProtectedParametersTest.data()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.emptyList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ParameterizedTestTest$WrongElementType</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ParameterizedTestTest.meaningfulFailureWhenParameterListsAreNotArrays()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$WrongElementType.ParameterizedTestTest$WrongElementType()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ParameterizedTestTest$WrongElementType.data()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.PreJUnit4TestCaseRunnerTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$1.PreJUnit4TestCaseRunnerTest$1(org.junit.tests.PreJUnit4TestCaseRunnerTest)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$1.this$0</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.PreJUnit4TestCaseRunnerTest.PreJUnit4TestCaseRunnerTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.PreJUnit4TestCaseRunnerTest.count</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$1.testStarted(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.testListener()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.PreJUnit4TestCaseRunnerTest.testListener()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$1.PreJUnit4TestCaseRunnerTest$1(org.junit.tests.PreJUnit4TestCaseRunnerTest)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$OneTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.count</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.PreJUnit4TestCaseRunnerTest$1</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.PreJUnit4TestCaseRunnerTest$1.PreJUnit4TestCaseRunnerTest$1(org.junit.tests.PreJUnit4TestCaseRunnerTest)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.RunListener()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.testListener()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.PreJUnit4TestCaseRunnerTest$1.testStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$OneTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.count</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.PreJUnit4TestCaseRunnerTest$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$1.PreJUnit4TestCaseRunnerTest$1(org.junit.tests.PreJUnit4TestCaseRunnerTest)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.PreJUnit4TestCaseRunnerTest$OneTest</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest$1.testStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.PreJUnit4TestCaseRunnerTest.testListener()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.PreJUnit4TestCaseRunnerTest$OneTest.PreJUnit4TestCaseRunnerTest$OneTest()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.PreJUnit4TestCaseRunnerTest$OneTest.testOne()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.RunWithTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.RunWithTest.RunWithTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunWithTest.access$084(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.log</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.RunWithTest$ExampleRunner(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.getDescription()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.run(org.junit.runner.notification.RunNotifier)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleRunner.testCount()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunWithTest.characterizeErrorMessageFromBadRunner()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getMessage()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.RunWithTest$Empty</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunWithTest.log</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.run()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.runWithExtendsToSubclasses()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunWithTest.run()</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.RunWithTest$ExampleTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunWithTest.runWithExtendsToSubclasses()</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.RunWithTest$SubExampleTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.log</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.RunWithTest$BadRunner</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.RunWithTest$BadRunner.RunWithTest$BadRunner()</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunWithTest$BadRunner.getDescription()</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunWithTest$BadRunner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.RunWithTest$Empty</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.characterizeErrorMessageFromBadRunner()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.RunWithTest$Empty.RunWithTest$Empty()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.RunWithTest$ExampleRunner</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.RunWithTest$ExampleRunner.RunWithTest$ExampleRunner(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.access$084(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunWithTest$ExampleRunner.getDescription()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.access$084(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunWithTest$ExampleRunner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.access$084(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunWithTest$ExampleRunner.testCount()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.access$084(java.lang.Object)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.RunWithTest$ExampleTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.junit.tests.RunWithTest$SubExampleTest</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.run()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.RunWithTest$ExampleTest.RunWithTest$ExampleTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$SubExampleTest.RunWithTest$SubExampleTest()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.RunWithTest$SubExampleTest</name>
            <outbound type="class" confirmed="yes">org.junit.tests.RunWithTest$ExampleTest</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunWithTest.runWithExtendsToSubclasses()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.RunWithTest$SubExampleTest.RunWithTest$SubExampleTest()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunWithTest$ExampleTest.RunWithTest$ExampleTest()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.RunnerTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$1.RunnerTest$1(org.junit.tests.RunnerTest)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$1.testFinished(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$MyListener.RunnerTest$MyListener(org.junit.tests.RunnerTest)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$MyListener.this$0</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest.RunnerTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest.access$002(org.junit.tests.RunnerTest, boolean)</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.wasRun</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$1.testFinished(org.junit.runner.Description)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest.newTestCount()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.RunnerTest$Example</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$MyListener.RunnerTest$MyListener(org.junit.tests.RunnerTest)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$MyListener.testCount</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest.oldTestCount()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.RunnerTest$ExampleTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$MyListener.RunnerTest$MyListener(org.junit.tests.RunnerTest)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$MyListener.testCount</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest.testFinished()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$1.RunnerTest$1(org.junit.tests.RunnerTest)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.RunnerTest$NewExample</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.wasRun</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest.wasRun</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.access$002(org.junit.tests.RunnerTest, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.testFinished()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.RunnerTest$1</name>
            <outbound type="class" confirmed="yes">org.junit.tests.RunnerTest$MyListener</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest$1.RunnerTest$1(org.junit.tests.RunnerTest)</name>
                <outbound type="class" confirmed="yes">org.junit.tests.RunnerTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$MyListener.RunnerTest$MyListener(org.junit.tests.RunnerTest)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.testFinished()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest$1.testFinished(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.RunnerTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.access$002(org.junit.tests.RunnerTest, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.tests.RunnerTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$1.RunnerTest$1(org.junit.tests.RunnerTest)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$1.testFinished(org.junit.runner.Description)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.RunnerTest$Example</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.newTestCount()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest$Example.RunnerTest$Example()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest$Example.empty()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.RunnerTest$ExampleTest</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.oldTestCount()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest$ExampleTest.RunnerTest$ExampleTest()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest$ExampleTest.testEmpty()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.RunnerTest$MyListener</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
            <inbound type="class" confirmed="yes">org.junit.tests.RunnerTest$1</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest$MyListener.RunnerTest$MyListener(org.junit.tests.RunnerTest)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.RunListener()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.RunnerTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$MyListener.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$1.RunnerTest$1(org.junit.tests.RunnerTest)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.newTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.oldTestCount()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest$MyListener.testCount</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$MyListener.testRunStarted(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.newTestCount()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.oldTestCount()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest$MyListener.testRunStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.testCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$MyListener.testCount</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest$MyListener.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.tests.RunnerTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest$MyListener.RunnerTest$MyListener(org.junit.tests.RunnerTest)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.RunnerTest$NewExample</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.RunnerTest.testFinished()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest$NewExample.RunnerTest$NewExample()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.RunnerTest$NewExample.empty()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SingleMethodTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$1.SingleMethodTest$1(org.junit.tests.SingleMethodTest)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$1.this$0</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest.SingleMethodTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest.count</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$OneTimeSetup.once()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$ParameterizedOneTimeSetup.once()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.size()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getChildren()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.filterWith(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SingleMethodTest$OneTwoSuite</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SingleMethodTest$TestOne</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest.filteringAffectsPlan()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.method(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.testCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SingleMethodTest$OneTimeSetup</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest.filteringAwayEverythingThrowsException()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filterable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filterable.filter(org.junit.runner.manipulation.Filter)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.NoTestsRemainException</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$1.SingleMethodTest$1(org.junit.tests.SingleMethodTest)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SingleMethodTest$OneTimeSetup</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest.nonexistentMethodCreatesFailure()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.method(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SingleMethodTest$OneTimeSetup</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest.oneTimeSetup()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.method(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SingleMethodTest$OneTimeSetup</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.count</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.method(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SingleMethodTest$ParameterizedOneTimeSetup</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.count</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SingleMethodTest$1</name>
            <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Filter</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$1.SingleMethodTest$1(org.junit.tests.SingleMethodTest)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Filter.Filter()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SingleMethodTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAwayEverythingThrowsException()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$1.describe()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$1.shouldRun(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.tests.SingleMethodTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest$1.SingleMethodTest$1(org.junit.tests.SingleMethodTest)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SingleMethodTest$OneTimeSetup</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAffectsPlan()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.filteringAwayEverythingThrowsException()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.nonexistentMethodCreatesFailure()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.oneTimeSetup()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$OneTimeSetup.SingleMethodTest$OneTimeSetup()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$OneTimeSetup.once()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.count</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$OneTimeSetup.one()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$OneTimeSetup.two()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SingleMethodTest$OneTwoSuite</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$OneTwoSuite.SingleMethodTest$OneTwoSuite()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SingleMethodTest$ParameterizedOneTimeSetup</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.parameterizedOneTimeSetup()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$ParameterizedOneTimeSetup.SingleMethodTest$ParameterizedOneTimeSetup(int)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$ParameterizedOneTimeSetup.once()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.count</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$ParameterizedOneTimeSetup.one()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$ParameterizedOneTimeSetup.params()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runners.Parameterized.eachOne(java.lang.Object[])</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SingleMethodTest$TestOne</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SingleMethodTest.eliminateUnnecessaryTreeBranches()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$TestOne.SingleMethodTest$TestOne()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$TestOne.a()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$TestOne.b()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SingleMethodTest$TestTwo</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$TestTwo.SingleMethodTest$TestTwo()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$TestTwo.a()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SingleMethodTest$TestTwo.b()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SortableTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest.SortableTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest.access$100()</name>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest.forward()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnTestClassRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.testClassRunnerCanBeWrappedAroundUnsortable()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.unsortablesAreHandledWithoutCrashing()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest.access$200()</name>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest.backward()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnTestClassRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest.backward()</name>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$2.SortableTest$2()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest.access$200()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest.forward()</name>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$1.SortableTest$1()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest.access$100()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SortableTest$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Comparator</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$1.SortableTest$1()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest.forward()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$1.compare(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$1.compare(org.junit.runner.Description, org.junit.runner.Description)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$1.compare(org.junit.runner.Description, org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.compareTo(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$1.compare(java.lang.Object, java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SortableTest$2</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Comparator</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$2.SortableTest$2()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest.backward()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$2.compare(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$2.compare(org.junit.runner.Description, org.junit.runner.Description)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$2.compare(org.junit.runner.Description, org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.compareTo(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$2.compare(java.lang.Object, java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable.SortableTest$TestClassRunnerIsSortable()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.log</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$A.a()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$A.b()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$A.c()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$B.a()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$B.b()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$B.c()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe.a()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe.b()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe.c()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable.log</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.resetLog()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnTestClassRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnTestClassRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable.resetLog()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnSuite()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.sortWith(java.util.Comparator)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.log</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest.access$200()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnTestClassRunner()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.sortWith(java.util.Comparator)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.log</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest.access$200()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnSuite()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.sortWith(java.util.Comparator)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.log</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest.access$100()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnTestClassRunner()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.sortWith(java.util.Comparator)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.log</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest.access$100()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable.static {}</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.log</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnSuite()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnSuite()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing.SortableTest$TestClassRunnerIsSortable$Enclosing()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$A</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$A.SortableTest$TestClassRunnerIsSortable$Enclosing$A()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$A.a()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$A.b()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$A.c()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$B</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$B.SortableTest$TestClassRunnerIsSortable$Enclosing$B()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$B.a()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$B.b()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$Enclosing$B.c()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingBackwardWorksOnTestClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.sortingForwardWorksOnTestClassRunner()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe.SortableTest$TestClassRunnerIsSortable$SortMe()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe.a()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe.b()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$TestClassRunnerIsSortable$SortMe.c()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$TestClassRunnerIsSortable.access$084(java.lang.Object)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.SortableTest$UnsortableRunnersAreHandledWithoutCrashing()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.testClassRunnerCanBeWrappedAroundUnsortable()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.sort(org.junit.runner.manipulation.Sorter)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.manipulation.Sorter</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.manipulation.Sorter.Sorter(java.util.Comparator)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$Unsortable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$UnsortableRunner.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$UnsortableRunner(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest.access$100()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.unsortablesAreHandledWithoutCrashing()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(org.junit.runner.Request)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.sortWith(java.util.Comparator)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$Unsortable</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SortableTest.access$100()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$Unsortable</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.testClassRunnerCanBeWrappedAroundUnsortable()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.unsortablesAreHandledWithoutCrashing()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$Unsortable.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$Unsortable()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$Unsortable.a()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$UnsortableRunner</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$UnsortableRunner.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$UnsortableRunner(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing.testClassRunnerCanBeWrappedAroundUnsortable()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$UnsortableRunner.getDescription()</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.EMPTY</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SortableTest$UnsortableRunnersAreHandledWithoutCrashing$UnsortableRunner.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SuiteDescriptionTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteDescriptionTest.SuiteDescriptionTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.anotherChildless</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.anotherTwoKids</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.childless</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.descriptionWithTwoKids(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.namedB</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.twoKids</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteDescriptionTest.anotherChildless</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.SuiteDescriptionTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.equalsIsCorrect()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.hashCodeIsReasonable()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteDescriptionTest.anotherTwoKids</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.SuiteDescriptionTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.equalsIsCorrect()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteDescriptionTest.childless</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.SuiteDescriptionTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.equalsIsCorrect()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.hashCodeIsReasonable()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteDescriptionTest.descriptionWithTwoKids(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.addChild(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createSuiteDescription(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.SuiteDescriptionTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteDescriptionTest.equalsIsCorrect()</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.Integer(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertFalse(boolean)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.anotherChildless</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.anotherTwoKids</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.childless</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.namedB</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.twoKids</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteDescriptionTest.hashCodeIsReasonable()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertFalse(boolean)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.hashCode()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.anotherChildless</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.childless</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.namedB</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteDescriptionTest.namedB</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.SuiteDescriptionTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.equalsIsCorrect()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.hashCodeIsReasonable()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteDescriptionTest.twoKids</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.SuiteDescriptionTest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteDescriptionTest.equalsIsCorrect()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SuiteMethodTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteMethodTest.SuiteMethodTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteMethodTest.makeSureSuiteIsCalled()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SuiteMethodTest$OldTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.wasRun</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteMethodTest.makeSureSuiteWorksWithJUnit4Classes()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SuiteMethodTest$NewTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.wasRun</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteMethodTest.wasRun</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest$NewTest.sample()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest$OldTest.notObviouslyATest()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.makeSureSuiteIsCalled()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.makeSureSuiteWorksWithJUnit4Classes()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SuiteMethodTest$NewTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.makeSureSuiteWorksWithJUnit4Classes()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteMethodTest$NewTest.SuiteMethodTest$NewTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteMethodTest$NewTest.sample()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.wasRun</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteMethodTest$NewTest.suite()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SuiteMethodTest$OldTest</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.makeSureSuiteIsCalled()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteMethodTest$OldTest.SuiteMethodTest$OldTest(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest$OldTest.suite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteMethodTest$OldTest.notObviouslyATest()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest.wasRun</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteMethodTest$OldTest.suite()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteMethodTest$OldTest.SuiteMethodTest$OldTest(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SuiteTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$WithoutDefaultConstructor.SuiteTest$WithoutDefaultConstructor(org.junit.tests.SuiteTest, int)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$WithoutDefaultConstructor.this$0</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest.SuiteTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest.access$084(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.log</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$AllWithBeforeAndAfterClass.after()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$AllWithBeforeAndAfterClass.before()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest.beforeAndAfterClassRunOnSuite()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SuiteTest$AllWithBeforeAndAfterClass</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest.ensureSuitesWorkWithForwardCompatibility()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.runCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SuiteTest$All</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest.ensureTestIsRun()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SuiteTest$All</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest.forwardCompatibilityWorksWithGetTests()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.getTests()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SuiteTest$All</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest.forwardCompatibilityWorksWithTestCount()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.countTestCases()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SuiteTest$All</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest.log</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.access$084(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.beforeAndAfterClassRunOnSuite()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest.static {}</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.log</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest.suiteShouldBeOKwithNonDefaultConstructor()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.wasSuccessful()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SuiteTest$WithoutDefaultConstructor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest.suiteTestCountIsCorrect()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.testCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SuiteTest$All</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest.whatHappensWhenASuiteContainsItselfIndirectly()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SuiteTest$Hydra</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest.whatHappensWhenASuiteHasACycle()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SuiteTest$InfiniteLoop</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest.whatHappensWhenASuiteHasAForkingCycle()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SuiteTest$BiInfiniteLoop</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getMessage()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SuiteTest$AllWithOutAnnotation</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SuiteTest$All</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureSuitesWorkWithForwardCompatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.ensureTestIsRun()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithGetTests()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.forwardCompatibilityWorksWithTestCount()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteTestCountIsCorrect()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest$All.SuiteTest$All()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SuiteTest$AllWithBeforeAndAfterClass</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.beforeAndAfterClassRunOnSuite()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest$AllWithBeforeAndAfterClass.SuiteTest$AllWithBeforeAndAfterClass()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest$AllWithBeforeAndAfterClass.after()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.access$084(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest$AllWithBeforeAndAfterClass.before()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.access$084(java.lang.Object)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SuiteTest$AllWithOutAnnotation</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.withoutSuiteClassAnnotationProducesFailure()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest$AllWithOutAnnotation.SuiteTest$AllWithOutAnnotation()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SuiteTest$BiInfiniteLoop</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasAForkingCycle()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest$BiInfiniteLoop.SuiteTest$BiInfiniteLoop()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SuiteTest$Hercules</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest$Hercules.SuiteTest$Hercules()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SuiteTest$Hydra</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteContainsItselfIndirectly()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest$Hydra.SuiteTest$Hydra()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SuiteTest$InfiniteLoop</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.whatHappensWhenASuiteHasACycle()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest$InfiniteLoop.SuiteTest$InfiniteLoop()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SuiteTest$TestA</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest$TestA.SuiteTest$TestA()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest$TestA.pass()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SuiteTest$TestB</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest$TestB.SuiteTest$TestB()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest$TestB.fail()</name>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.SuiteTest$WithoutDefaultConstructor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest.suiteShouldBeOKwithNonDefaultConstructor()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest$WithoutDefaultConstructor.SuiteTest$WithoutDefaultConstructor(org.junit.tests.SuiteTest, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.SuiteTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$WithoutDefaultConstructor.this$0</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.SuiteTest$WithoutDefaultConstructor.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.tests.SuiteTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.SuiteTest$WithoutDefaultConstructor.SuiteTest$WithoutDefaultConstructor(org.junit.tests.SuiteTest, int)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TestClassMethodsRunnerTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TestClassMethodsRunnerTest.TestClassMethodsRunnerTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestClassMethodsRunnerTest.constructorException()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest$FaultyConstructor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestClassMethodsRunnerTest.noRunnableMethods()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest$NoTests</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TestClassMethodsRunnerTest$FaultyConstructor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.constructorException()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TestClassMethodsRunnerTest$FaultyConstructor.TestClassMethodsRunnerTest$FaultyConstructor()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestClassMethodsRunnerTest$FaultyConstructor.someTest()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TestClassMethodsRunnerTest$NoTests</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestClassMethodsRunnerTest.noRunnableMethods()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TestClassMethodsRunnerTest$NoTests.TestClassMethodsRunnerTest$NoTests()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TestDescriptionTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TestDescriptionTest.TestDescriptionTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestDescriptionTest.equalsIsFalseForNonTestDescription()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.Integer(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertFalse(boolean)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.equals(java.lang.Object)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TestListenerTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ErrorListener.TestListenerTest$ErrorListener(org.junit.tests.TestListenerTest)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ErrorListener.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ExceptionListener.TestListenerTest$ExceptionListener(org.junit.tests.TestListenerTest)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ExceptionListener.testRunStarted(org.junit.runner.Description)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ExceptionListener.this$0</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TestListenerTest.TestListenerTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestListenerTest.count</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ExceptionListener.testRunStarted(org.junit.runner.Description)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestListenerTest.failingListener()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ErrorListener.TestListenerTest$ErrorListener(org.junit.tests.TestListenerTest)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TestListenerTest$OneTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestListenerTest.freshResultEachTime()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertNotSame(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TestListenerTest$OneTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestListenerTest.removeFailingListeners()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.TEST_MECHANISM</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ExceptionListener.TestListenerTest$ExceptionListener(org.junit.tests.TestListenerTest)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TestListenerTest$OneTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.count</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TestListenerTest$ErrorListener</name>
            <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TestListenerTest$ExceptionListener</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TestListenerTest$ErrorListener.TestListenerTest$ErrorListener(org.junit.tests.TestListenerTest)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunListener.RunListener()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TestListenerTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ErrorListener.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ExceptionListener.TestListenerTest$ExceptionListener(org.junit.tests.TestListenerTest)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.failingListener()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestListenerTest$ErrorListener.testRunStarted(org.junit.runner.Description)</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestListenerTest$ErrorListener.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.tests.TestListenerTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ErrorListener.TestListenerTest$ErrorListener(org.junit.tests.TestListenerTest)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TestListenerTest$ExceptionListener</name>
            <outbound type="class" confirmed="yes">org.junit.tests.TestListenerTest$ErrorListener</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TestListenerTest$ExceptionListener.TestListenerTest$ExceptionListener(org.junit.tests.TestListenerTest)</name>
                <outbound type="class" confirmed="yes">org.junit.tests.TestListenerTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ErrorListener.TestListenerTest$ErrorListener(org.junit.tests.TestListenerTest)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ExceptionListener.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestListenerTest$ExceptionListener.testRunStarted(org.junit.runner.Description)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TestListenerTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ExceptionListener.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.count</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestListenerTest$ExceptionListener.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.tests.TestListenerTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ExceptionListener.TestListenerTest$ExceptionListener(org.junit.tests.TestListenerTest)</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest$ExceptionListener.testRunStarted(org.junit.runner.Description)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TestListenerTest$OneTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.failingListener()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.freshResultEachTime()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestListenerTest.removeFailingListeners()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TestListenerTest$OneTest.TestListenerTest$OneTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestListenerTest$OneTest.nothing()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TestMethodTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest.TestMethodTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest.compatibility()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.runCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TestMethodTest$IgnoredTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest.dontValidateShadowedMethods()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TestMethodTest$SubShadows</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateAllMethods(java.lang.Class)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest.ignoreRunner()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getIgnoreCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TestMethodTest$IgnoredTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest.onlyIgnoredMethodsIsStillFineTestClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getIgnoreCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TestMethodTest$OnlyTestIsIgnored</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest.overloaded()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.MethodValidator(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TestMethodTest$Confused</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest.testFailures()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TestMethodTest$EverythingWrong</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateAllMethods(java.lang.Class)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest.validateAllMethods(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.emptyList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.InitializationError.getCauses()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.dontValidateShadowedMethods()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.testFailures()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateInheritedMethods()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest.validateInheritedMethods()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TestMethodTest$SubWrong</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateAllMethods(java.lang.Class)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TestMethodTest$Confused</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.overloaded()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$Confused.TestMethodTest$Confused()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$Confused.a()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$Confused.a(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TestMethodTest$EverythingWrong</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.testFailures()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.TestMethodTest$EverythingWrong()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.argumentsA(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.argumentsAC(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.argumentsB(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.argumentsBC(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.argumentsT(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.fineA()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.fineAC()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.fineB()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.fineBC()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.fineT()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.nonVoidA()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.nonVoidAC()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.nonVoidB()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.nonVoidBC()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.nonVoidT()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.notPublicA()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.notPublicAC()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.notPublicB()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.notPublicBC()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.notPublicT()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.notStaticAC()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.notStaticBC()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.staticA()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.staticB()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$EverythingWrong.staticT()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TestMethodTest$IgnoredTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.compatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.ignoreRunner()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$IgnoredTest.TestMethodTest$IgnoredTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$IgnoredTest.ignored()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$IgnoredTest.valid()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$IgnoredTest.withReason()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TestMethodTest$OnlyTestIsIgnored</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.onlyIgnoredMethodsIsStillFineTestClass()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$OnlyTestIsIgnored.TestMethodTest$OnlyTestIsIgnored()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$OnlyTestIsIgnored.ignored()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TestMethodTest$SubShadows</name>
            <outbound type="class" confirmed="yes">org.junit.tests.TestMethodTest$SuperWrong</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.dontValidateShadowedMethods()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$SubShadows.TestMethodTest$SubShadows()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest$SuperWrong.TestMethodTest$SuperWrong()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$SubShadows.notPublic()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TestMethodTest$SubWrong</name>
            <outbound type="class" confirmed="yes">org.junit.tests.TestMethodTest$SuperWrong</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest.validateInheritedMethods()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$SubWrong.TestMethodTest$SubWrong()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest$SuperWrong.TestMethodTest$SuperWrong()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$SubWrong.justFine()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TestMethodTest$SuperWrong</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TestMethodTest$SubShadows</inbound>
            <inbound type="class" confirmed="yes">org.junit.tests.TestMethodTest$SubWrong</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$SuperWrong.TestMethodTest$SuperWrong()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest$SubShadows.TestMethodTest$SubShadows()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TestMethodTest$SubWrong.TestMethodTest$SubWrong()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TestMethodTest$SuperWrong.notPublic()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TextListenerTest</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TextListenerTest.TextListenerTest()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.tests.TextListenerTest.assertFalse(boolean)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testTime()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.junit.tests.TextListenerTest.assertTrue(boolean)</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testSuccess()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TextListenerTest.convert(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream()</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.PrintStream(java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testSuccess()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TextListenerTest.listener</name>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TextListener</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.setUp()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TextListenerTest.results</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.setUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testSuccess()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testTime()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TextListenerTest.runner</name>
                <outbound type="class" confirmed="yes">org.junit.runner.JUnitCore</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.setUp()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testError()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testSuccess()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testTime()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TextListenerTest.setUp()</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream()</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.PrintStream(java.io.OutputStream)</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.TextListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TextListener.TextListener(java.io.PrintStream)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.JUnitCore</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunListener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.listener</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.results</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.runner</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TextListenerTest.testError()</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.JUnitCore</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TextListenerTest$ErrorTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.TextListenerTest.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.convert(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.results</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.runner</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TextListenerTest.testSuccess()</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.JUnitCore</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TextListenerTest$OneTest</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.TextListenerTest.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.convert(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.results</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.runner</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TextListenerTest.testTime()</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.JUnitCore</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TextListenerTest$Slow</outbound>
                <outbound type="feature" confirmed="no">org.junit.tests.TextListenerTest.assertFalse(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.results</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.runner</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TextListenerTest$ErrorTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testError()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TextListenerTest$ErrorTest.TextListenerTest$ErrorTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TextListenerTest$ErrorTest.error()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TextListenerTest$OneTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testSuccess()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TextListenerTest$OneTest.TextListenerTest$OneTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TextListenerTest$OneTest.one()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TextListenerTest$Slow</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TextListenerTest.testTime()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TextListenerTest$Slow.TextListenerTest$Slow()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TextListenerTest$Slow.pause()</name>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.sleep(long)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TimeoutTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest.TimeoutTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest.compatibility()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.JUnit4TestAdapter(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.JUnit4TestAdapter.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TimeoutTest$InfiniteLoopTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest.failureWithTimeout()</name>
                <outbound type="class" confirmed="no">java.lang.AssertionError</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TimeoutTest$FailureWithTimeoutTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.NullPointerException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TimeoutTest$FailureWithTimeoutRunTimeExceptionTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest.infiniteLoop()</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TimeoutTest$InfiniteLoopTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest.infiniteLoopRunsForApproximatelyLengthOfTimeout()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.valueOf(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.runClasses(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TimeoutTest$ImpatientLoopTest</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TimeoutTest$InfiniteLoopTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.runAndTime(java.lang.Class)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest.runAndTime(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoopRunsForApproximatelyLengthOfTimeout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.contains(java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.printStackTrace(java.io.PrintWriter)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertTrue(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TimeoutTest$InfiniteLoopTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest.successWithTimeout()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TimeoutTest$SuccessWithTimeoutTest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest.timeoutFailure()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.JUnitCore()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.JUnitCore.run(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Result</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailureCount()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getFailures()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Result.getRunCount()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.Failure</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.Failure.getException()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.TimeoutTest$TimeoutFailureTest</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TimeoutTest$FailureWithTimeoutRunTimeExceptionTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeoutRunTimeException()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest$FailureWithTimeoutRunTimeExceptionTest.TimeoutTest$FailureWithTimeoutRunTimeExceptionTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest$FailureWithTimeoutRunTimeExceptionTest.failure()</name>
                <outbound type="feature" confirmed="no">java.lang.NullPointerException.NullPointerException()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TimeoutTest$FailureWithTimeoutTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.failureWithTimeout()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest$FailureWithTimeoutTest.TimeoutTest$FailureWithTimeoutTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest$FailureWithTimeoutTest.failure()</name>
                <outbound type="feature" confirmed="yes">org.junit.Assert.fail()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TimeoutTest$ImpatientLoopTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoopRunsForApproximatelyLengthOfTimeout()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest$ImpatientLoopTest.TimeoutTest$ImpatientLoopTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest$ImpatientLoopTest.failure()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest$ImpatientLoopTest.infiniteLoop()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest$ImpatientLoopTest.infiniteLoop()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest$ImpatientLoopTest.failure()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TimeoutTest$InfiniteLoopTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.compatibility()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoop()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.infiniteLoopRunsForApproximatelyLengthOfTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.stalledThreadAppearsInStackTrace()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest$InfiniteLoopTest.TimeoutTest$InfiniteLoopTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest$InfiniteLoopTest.failure()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest$InfiniteLoopTest.infiniteLoop()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest$InfiniteLoopTest.infiniteLoop()</name>
                <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest$InfiniteLoopTest.failure()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TimeoutTest$SuccessWithTimeoutTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.successWithTimeout()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest$SuccessWithTimeoutTest.TimeoutTest$SuccessWithTimeoutTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest$SuccessWithTimeoutTest.success()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.TimeoutTest$TimeoutFailureTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.TimeoutTest.timeoutFailure()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest$TimeoutFailureTest.TimeoutTest$TimeoutFailureTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.TimeoutTest$TimeoutFailureTest.success()</name>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.sleep(long)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.UserStopTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.UserStopTest.UserStopTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.UserStopTest.createNotifier()</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.RunNotifier()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.pleaseStop()</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.fNotifier</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.UserStopTest.fNotifier</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.createNotifier()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopClassRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopMethodRunner()</inbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.userStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.UserStopTest.stopClassRunner()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.run(org.junit.runner.notification.RunNotifier)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.UserStopTest$OneTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.fNotifier</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.UserStopTest.stopMethodRunner()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.TestMethodRunner(java.lang.Object, java.lang.reflect.Method, org.junit.runner.notification.RunNotifier, org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestMethodRunner.run()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.UserStopTest$OneTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.fNotifier</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.UserStopTest.userStop()</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.notification.RunNotifier.fireTestStarted(org.junit.runner.Description)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.fNotifier</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.UserStopTest$OneTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopClassRunner()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.UserStopTest.stopMethodRunner()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.UserStopTest$OneTest.UserStopTest$OneTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.UserStopTest$OneTest.foo()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ValidationTest</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest$1.ValidationTest$1(org.junit.tests.ValidationTest)</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest$1.this$0</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ValidationTest.ValidationTest()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ValidationTest.initializationErrorIsOnCorrectClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.getDisplayName()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Request</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.aClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Request.getRunner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.getDescription()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ValidationTest$WrongBeforeClass</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ValidationTest.testClassRunnerHandlesBeforeClassAndAfterClassValidation()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.junit.internal.runners.InitializationError</outbound>
                <outbound type="feature" confirmed="yes">org.junit.internal.runners.TestClassRunner.TestClassRunner(java.lang.Class, org.junit.runner.Runner)</outbound>
                <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ValidationTest$1.ValidationTest$1(org.junit.tests.ValidationTest)</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ValidationTest$WrongBeforeClass</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ValidationTest$1</name>
            <outbound type="class" confirmed="yes">org.junit.runner.Runner</outbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ValidationTest$1.ValidationTest$1(org.junit.tests.ValidationTest)</name>
                <outbound type="feature" confirmed="yes">org.junit.runner.Runner.Runner()</outbound>
                <outbound type="class" confirmed="yes">org.junit.tests.ValidationTest</outbound>
                <outbound type="feature" confirmed="yes">org.junit.tests.ValidationTest$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.testClassRunnerHandlesBeforeClassAndAfterClassValidation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ValidationTest$1.getDescription()</name>
                <outbound type="class" confirmed="yes">org.junit.runner.Description</outbound>
                <outbound type="feature" confirmed="yes">org.junit.runner.Description.EMPTY</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ValidationTest$1.run(org.junit.runner.notification.RunNotifier)</name>
                <outbound type="class" confirmed="yes">org.junit.runner.notification.RunNotifier</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ValidationTest$1.this$0</name>
                <outbound type="class" confirmed="yes">org.junit.tests.ValidationTest</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest$1.ValidationTest$1(org.junit.tests.ValidationTest)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.ValidationTest$WrongBeforeClass</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.initializationErrorIsOnCorrectClass()</inbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.ValidationTest.testClassRunnerHandlesBeforeClassAndAfterClassValidation()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.ValidationTest$WrongBeforeClass.ValidationTest$WrongBeforeClass()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.ValidationTest$WrongBeforeClass.a()</name>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.junit.tests.anotherpackage</name>
        <class confirmed="yes">
            <name>org.junit.tests.anotherpackage.Sub</name>
            <outbound type="class" confirmed="yes">org.junit.tests.anotherpackage.Super</outbound>
            <inbound type="feature" confirmed="yes">org.junit.tests.InaccessibleBaseClassTest.inaccessibleBaseClassIsCaughtAtValidation()</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.anotherpackage.Sub.Sub()</name>
                <outbound type="feature" confirmed="yes">org.junit.tests.anotherpackage.Super.Super()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.junit.tests.anotherpackage.Super</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.junit.tests.anotherpackage.Sub</inbound>
            <feature confirmed="yes">
                <name>org.junit.tests.anotherpackage.Super.Super()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.junit.tests.anotherpackage.Sub.Sub()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.junit.tests.anotherpackage.Super.a()</name>
            </feature>
        </class>
    </package>
</dependencies>
