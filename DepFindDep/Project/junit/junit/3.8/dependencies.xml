<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE dependencies SYSTEM "http://depfind.sourceforge.net/dtd/dependencies.dtd">

<dependencies>
    <package confirmed="no">
        <name>java.awt</name>
        <class confirmed="no">
            <name>java.awt.BorderLayout</name>
            <feature confirmed="no">
                <name>java.awt.BorderLayout.BorderLayout()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.BorderLayout.BorderLayout(int, int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFrame(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Button</name>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.textValueChanged(java.awt.event.TextEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fQuitButton</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fRerunButton</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fRun</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.failureSelected()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
            <feature confirmed="no">
                <name>java.awt.Button.Button(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Button.addActionListener(java.awt.event.ActionListener)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Button.setLabel(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runFailed(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Canvas</name>
            <inbound type="class" confirmed="yes">junit.awtui.Logo</inbound>
            <inbound type="class" confirmed="yes">junit.awtui.ProgressBar</inbound>
            <feature confirmed="no">
                <name>java.awt.Canvas.Canvas()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.ProgressBar()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Checkbox</name>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fUseLoadingRunner</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.shouldReload()</inbound>
            <feature confirmed="no">
                <name>java.awt.Checkbox.Checkbox(java.lang.String, boolean)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Checkbox.getState()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.shouldReload()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Color</name>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.paintBackground(java.awt.Graphics)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.getStatusColor()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintBackground(java.awt.Graphics)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStatus(java.awt.Graphics)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showInfo(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showStatus(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.ProgressBar()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.getStatusColor()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.reset()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.step(int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showInfo(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.awt.Color.black</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showInfo(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showInfo(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Color.darkGray</name>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintBackground(java.awt.Graphics)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Color.green</name>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.getStatusColor()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.getStatusColor()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Color.red</name>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.getStatusColor()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showStatus(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.getStatusColor()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showError(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Color.white</name>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintBackground(java.awt.Graphics)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Component</name>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createCounterPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.FailureDetailView.getComponent()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.addToGrid(java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackEntryRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getComponent()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.addTab(javax.swing.JTabbedPane)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.addTab(javax.swing.JTabbedPane)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.browseTestClasses()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createBrowseButton()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailedPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailureDetailView()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestCollector()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            <feature confirmed="no">
                <name>java.awt.Component.addKeyListener(java.awt.event.KeyListener)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Component.addMouseListener(java.awt.event.MouseListener)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Component.getBounds()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.paintBackground(java.awt.Graphics)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintBackground(java.awt.Graphics)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStatus(java.awt.Graphics)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStep(int, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.scale(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Component.getGraphics()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.reset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Component.getParent()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.setLabelValue(java.awt.Label, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Component.invalidate()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.setLabelValue(java.awt.Label, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Component.repaint(int, int, int, int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStep(int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Component.requestFocus()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Component.setBackground(java.awt.Color)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Component.setBounds(int, int, int, int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.setBounds(int, int, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Component.setEnabled(boolean)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.textValueChanged(java.awt.event.TextEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.failureSelected()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Component.setFont(java.awt.Font)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showInfo(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showStatus(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Component.setForeground(java.awt.Color)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showInfo(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showStatus(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Component.setLocation(int, int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.about()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Component.setSize(int, int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.ProgressBar()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Component.setVisible(boolean)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.about()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Container</name>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.setLabelValue(java.awt.Label, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFrame(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            <feature confirmed="no">
                <name>java.awt.Container.add(java.awt.Component)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailedPanel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Container.add(java.awt.Component, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.addToGrid(java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Container.setLayout(java.awt.LayoutManager)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFrame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Container.validate()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.setLabelValue(java.awt.Label, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Cursor</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            <feature confirmed="no">
                <name>java.awt.Cursor.getDefaultCursor()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Cursor.getPredefinedCursor(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Dialog</name>
            <inbound type="class" confirmed="yes">junit.awtui.AboutDialog</inbound>
            <feature confirmed="no">
                <name>java.awt.Dialog.Dialog(java.awt.Frame)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Dialog.dispose()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog$1.actionPerformed(java.awt.event.ActionEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog$2.windowClosing(java.awt.event.WindowEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog$1.actionPerformed(java.awt.event.ActionEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog$2.windowClosing(java.awt.event.WindowEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$1.actionPerformed(java.awt.event.ActionEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$4.windowClosing(java.awt.event.WindowEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.okSelected()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Dialog.setModal(boolean)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.about()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Dialog.setResizable(boolean)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Dialog.setTitle(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Dialog.show()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.about()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.browseTestClasses()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Dimension</name>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.createOutputField(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.StatusLine(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            <feature confirmed="no">
                <name>java.awt.Dimension.Dimension(int, int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Dimension.width</name>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.StatusLine(int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Font</name>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.PLAIN_FONT</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showInfo(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showStatus(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.static {}</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.createOutputField(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getComponent()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.BOLD_FONT</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.PLAIN_FONT</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.StatusLine(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showInfo(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.static {}</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.BOLD_FONT</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.PLAIN_FONT</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.static {}</inbound>
            <feature confirmed="no">
                <name>java.awt.Font.Font(java.lang.String, int, int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.static {}</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getComponent()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Frame</name>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$3.TestRunner$3(java.awt.Frame)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$3.val$finalFrame</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$3.windowClosing(java.awt.event.WindowEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.about()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fFrame</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.browseTestClasses()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            <feature confirmed="no">
                <name>java.awt.Frame.Frame(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Frame.setIconImage(java.awt.Image)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFrame(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Frame.setMenuBar(java.awt.MenuBar)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Graphics</name>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.paint(java.awt.Graphics)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.paintBackground(java.awt.Graphics)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paint(java.awt.Graphics)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintBackground(java.awt.Graphics)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStatus(java.awt.Graphics)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.reset()</inbound>
            <feature confirmed="no">
                <name>java.awt.Graphics.drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.paint(java.awt.Graphics)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Graphics.drawLine(int, int, int, int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintBackground(java.awt.Graphics)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Graphics.fillRect(int, int, int, int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.paintBackground(java.awt.Graphics)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintBackground(java.awt.Graphics)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStatus(java.awt.Graphics)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Graphics.setColor(java.awt.Color)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.paintBackground(java.awt.Graphics)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintBackground(java.awt.Graphics)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStatus(java.awt.Graphics)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.GridBagConstraints</name>
            <feature confirmed="no">
                <name>java.awt.GridBagConstraints.GridBagConstraints()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.addToGrid(java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.GridBagConstraints.anchor</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.addToGrid(java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.GridBagConstraints.fill</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.addToGrid(java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.GridBagConstraints.gridheight</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.addToGrid(java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.GridBagConstraints.gridwidth</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.addToGrid(java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.GridBagConstraints.gridx</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.addToGrid(java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.GridBagConstraints.gridy</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.addToGrid(java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.GridBagConstraints.insets</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.addToGrid(java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.GridBagConstraints.weightx</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.addToGrid(java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.GridBagConstraints.weighty</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.addToGrid(java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.GridBagLayout</name>
            <feature confirmed="no">
                <name>java.awt.GridBagLayout.GridBagLayout()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createCounterPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.GridLayout</name>
            <feature confirmed="no">
                <name>java.awt.GridLayout.GridLayout(int, int, int, int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailedPanel()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Image</name>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.fImage</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.paint(java.awt.Graphics)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFrame(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadFrameIcon()</inbound>
            <feature confirmed="no">
                <name>java.awt.Image.getHeight(java.awt.image.ImageObserver)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Image.getWidth(java.awt.image.ImageObserver)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Insets</name>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createCounterPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.addToGrid(java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            <feature confirmed="no">
                <name>java.awt.Insets.Insets(int, int, int, int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createCounterPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Label</name>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createCounterPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fNumberOfErrors</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fNumberOfFailures</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fNumberOfRuns</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.setLabelValue(java.awt.Label, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testEnded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <feature confirmed="no">
                <name>java.awt.Label.Label(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createCounterPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Label.Label(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Label.setText(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.setLabelValue(java.awt.Label, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.LayoutManager</name>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createCounterPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailedPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFrame(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
        </class>
        <class confirmed="no">
            <name>java.awt.List</name>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fFailureList</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.isErrorSelected()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerun()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showErrorTrace()</inbound>
            <feature confirmed="no">
                <name>java.awt.List.List(int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.List.add(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.List.addItemListener(java.awt.event.ItemListener)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.List.getItemCount()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.List.getSelectedIndex()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.isErrorSelected()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerun()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showErrorTrace()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.List.removeAll()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.List.select(int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.MediaTracker</name>
            <feature confirmed="no">
                <name>java.awt.MediaTracker.MediaTracker(java.awt.Component)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.MediaTracker.addImage(java.awt.Image, int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.MediaTracker.waitForAll()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Menu</name>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createJUnitMenu()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createMenus(java.awt.MenuBar)</inbound>
            <feature confirmed="no">
                <name>java.awt.Menu.Menu(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createJUnitMenu()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Menu.add(java.awt.MenuItem)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createJUnitMenu()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Menu.addSeparator()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createJUnitMenu()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.MenuBar</name>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createMenus(java.awt.MenuBar)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.awt.MenuBar.MenuBar()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.MenuBar.add(java.awt.Menu)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createMenus(java.awt.MenuBar)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.MenuItem</name>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createJUnitMenu()</inbound>
            <feature confirmed="no">
                <name>java.awt.MenuItem.MenuItem(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createJUnitMenu()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.MenuItem.addActionListener(java.awt.event.ActionListener)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createJUnitMenu()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Panel</name>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createCounterPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.awt.Panel.Panel(java.awt.LayoutManager)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createCounterPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Rectangle</name>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.paintBackground(java.awt.Graphics)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintBackground(java.awt.Graphics)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStatus(java.awt.Graphics)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStep(int, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.scale(int)</inbound>
            <feature confirmed="no">
                <name>java.awt.Rectangle.Rectangle(int, int, int, int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStatus(java.awt.Graphics)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Rectangle.height</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.paintBackground(java.awt.Graphics)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintBackground(java.awt.Graphics)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStatus(java.awt.Graphics)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStep(int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Rectangle.width</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.paintBackground(java.awt.Graphics)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintBackground(java.awt.Graphics)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStatus(java.awt.Graphics)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.scale(int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.SystemColor</name>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.paintBackground(java.awt.Graphics)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintBackground(java.awt.Graphics)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.awt.SystemColor.control</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.paintBackground(java.awt.Graphics)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintBackground(java.awt.Graphics)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.TextArea</name>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fTraceArea</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showErrorTrace()</inbound>
            <feature confirmed="no">
                <name>java.awt.TextArea.TextArea()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.TextArea.setColumns(int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.TextArea.setRows(int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.TextComponent</name>
            <feature confirmed="no">
                <name>java.awt.TextComponent.addTextListener(java.awt.event.TextListener)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.TextComponent.getText()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.textValueChanged(java.awt.event.TextEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.TextComponent.selectAll()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.TextComponent.setEditable(boolean)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.TextComponent.setText(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showErrorTrace()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.TextField</name>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.textValueChanged(java.awt.event.TextEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fStatusLine</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fSuiteField</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.setSuiteName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showInfo(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showStatus(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.awt.TextField.TextField()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.TextField.TextField(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.TextField.addActionListener(java.awt.event.ActionListener)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.TextField.setColumns(int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.TextField.setText(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.textValueChanged(java.awt.event.TextEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.setSuiteName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showInfo(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showStatus(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Toolkit</name>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</inbound>
            <feature confirmed="no">
                <name>java.awt.Toolkit.beep()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Toolkit.createImage(java.awt.image.ImageProducer)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Toolkit.getDefaultToolkit()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.Window</name>
            <feature confirmed="no">
                <name>java.awt.Window.addWindowListener(java.awt.event.WindowListener)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFrame(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Window.dispose()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$3.windowClosing(java.awt.event.WindowEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.terminate()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Window.pack()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Window.setCursor(java.awt.Cursor)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.awt.Window.setLocationRelativeTo(java.awt.Component)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.awt.event</name>
        <class confirmed="no">
            <name>java.awt.event.ActionEvent</name>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog$1.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$1.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$2.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$4.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$6.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$8.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$9.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog$1.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$10.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$4.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$5.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$6.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$8.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$9.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$1.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$2.actionPerformed(java.awt.event.ActionEvent)</inbound>
        </class>
        <class confirmed="no">
            <name>java.awt.event.ActionListener</name>
            <inbound type="class" confirmed="yes">junit.awtui.AboutDialog$1</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$1</inbound>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$2</inbound>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$4</inbound>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$6</inbound>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$8</inbound>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$9</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createJUnitMenu()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.AboutDialog$1</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$10</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$4</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$5</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$6</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$8</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$9</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createBrowseButton()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailedPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createJUnitMenu()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createQuitButton()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createRunButton()</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestSelector$1</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestSelector$2</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
        </class>
        <class confirmed="no">
            <name>java.awt.event.ItemEvent</name>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$7.itemStateChanged(java.awt.event.ItemEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$12.itemStateChanged(java.awt.event.ItemEvent)</inbound>
            <feature confirmed="no">
                <name>java.awt.event.ItemEvent.getStateChange()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$12.itemStateChanged(java.awt.event.ItemEvent)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.event.ItemListener</name>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$7</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$12</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</inbound>
        </class>
        <class confirmed="no">
            <name>java.awt.event.KeyAdapter</name>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$11</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestSelector$KeySelectListener</inbound>
            <feature confirmed="no">
                <name>java.awt.event.KeyAdapter.KeyAdapter()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$11.TestRunner$11(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$KeySelectListener.TestSelector$KeySelectListener(junit.swingui.TestSelector)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.event.KeyEvent</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$11.keyTyped(java.awt.event.KeyEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$KeySelectListener.keyTyped(java.awt.event.KeyEvent)</inbound>
            <feature confirmed="no">
                <name>java.awt.event.KeyEvent.getKeyChar()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$11.keyTyped(java.awt.event.KeyEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$KeySelectListener.keyTyped(java.awt.event.KeyEvent)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.event.KeyListener</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
        </class>
        <class confirmed="no">
            <name>java.awt.event.MouseAdapter</name>
            <inbound type="class" confirmed="yes">junit.swingui.TestSelector$DoubleClickListener</inbound>
            <feature confirmed="no">
                <name>java.awt.event.MouseAdapter.MouseAdapter()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$DoubleClickListener.TestSelector$DoubleClickListener(junit.swingui.TestSelector)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.event.MouseEvent</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$DoubleClickListener.mouseClicked(java.awt.event.MouseEvent)</inbound>
            <feature confirmed="no">
                <name>java.awt.event.MouseEvent.getClickCount()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$DoubleClickListener.mouseClicked(java.awt.event.MouseEvent)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.event.MouseListener</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
        </class>
        <class confirmed="no">
            <name>java.awt.event.TextEvent</name>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.textValueChanged(java.awt.event.TextEvent)</inbound>
        </class>
        <class confirmed="no">
            <name>java.awt.event.TextListener</name>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$5</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>java.awt.event.WindowAdapter</name>
            <inbound type="class" confirmed="yes">junit.awtui.AboutDialog$2</inbound>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$3</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.AboutDialog$2</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$7</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestSelector$4</inbound>
            <feature confirmed="no">
                <name>java.awt.event.WindowAdapter.WindowAdapter()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog$2.AboutDialog$2(junit.awtui.AboutDialog)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$3.TestRunner$3(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog$2.AboutDialog$2(junit.swingui.AboutDialog)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$7.TestRunner$7(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$4.TestSelector$4(junit.swingui.TestSelector)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.awt.event.WindowEvent</name>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog$2.windowClosing(java.awt.event.WindowEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$3.windowClosing(java.awt.event.WindowEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog$2.windowClosing(java.awt.event.WindowEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$7.windowClosing(java.awt.event.WindowEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$4.windowClosing(java.awt.event.WindowEvent)</inbound>
        </class>
        <class confirmed="no">
            <name>java.awt.event.WindowListener</name>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFrame(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.awt.image</name>
        <class confirmed="no">
            <name>java.awt.image.ImageObserver</name>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.paint(java.awt.Graphics)</inbound>
        </class>
        <class confirmed="no">
            <name>java.awt.image.ImageProducer</name>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.io</name>
        <class confirmed="no">
            <name>java.io.BufferedReader</name>
            <feature confirmed="no">
                <name>java.io.BufferedReader.BufferedReader(java.io.Reader)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadHistory(javax.swing.JComboBox)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.BufferedReader.close()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadHistory(javax.swing.JComboBox)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.BufferedReader.readLine()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadHistory(javax.swing.JComboBox)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.BufferedWriter</name>
            <feature confirmed="no">
                <name>java.io.BufferedWriter.BufferedWriter(java.io.Writer)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.BufferedWriter.close()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.BufferedWriter.newLine()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.BufferedWriter.write(java.lang.String, int, int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ByteArrayOutputStream</name>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.ByteArrayOutputStream(int)</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.getClassData(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.close()</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.getClassData(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.toByteArray()</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.getClassData(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.write(byte[], int, int)</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.getClassData(java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.File</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInRoots(java.util.Vector)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.getClassData(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadFileData(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadJarData(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getSettingsFile()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadHistory(javax.swing.JComboBox)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
            <feature confirmed="no">
                <name>java.io.File.File(java.io.File, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.File(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInRoots(java.util.Vector)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadJarData(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.File(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadFileData(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getSettingsFile()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.exists()</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadFileData(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadJarData(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.isFile()</name>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.list()</name>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.separatorChar</name>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.classNameFromFile(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileInputStream</name>
            <feature confirmed="no">
                <name>java.io.FileInputStream.FileInputStream(java.io.File)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.getClassData(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.FileInputStream.close()</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.getClassData(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.FileInputStream.read(byte[])</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.getClassData(java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileOutputStream</name>
            <feature confirmed="no">
                <name>java.io.FileOutputStream.FileOutputStream(java.io.File)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.FileOutputStream.close()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileReader</name>
            <feature confirmed="no">
                <name>java.io.FileReader.FileReader(java.io.File)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadHistory(javax.swing.JComboBox)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileWriter</name>
            <feature confirmed="no">
                <name>java.io.FileWriter.FileWriter(java.io.File)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.IOException</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.getClassData(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadJarData(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadHistory(javax.swing.JComboBox)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.terminate()</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.InputStream</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.getResourceAsStream(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadJarData(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            <feature confirmed="no">
                <name>java.io.InputStream.close()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadJarData(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.InputStream.read()</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.InputStream.read(byte[], int, int)</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadJarData(java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.OutputStream</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.PrintStream</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.terminate()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.fWriter</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <feature confirmed="no">
                <name>java.io.PrintStream.print(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.println()</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.println(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.terminate()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runFailed(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.PrintWriter</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            <feature confirmed="no">
                <name>java.io.PrintWriter.PrintWriter(java.io.Writer)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintWriter.println(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.Reader</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadHistory(javax.swing.JComboBox)</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.StringReader</name>
            <feature confirmed="no">
                <name>java.io.StringReader.StringReader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.StringWriter</name>
            <feature confirmed="no">
                <name>java.io.StringWriter.StringWriter()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.StringWriter.getBuffer()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.StringWriter.toString()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.Writer</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang</name>
        <class confirmed="no">
            <name>java.lang.Boolean</name>
            <feature confirmed="no">
                <name>java.lang.Boolean.Boolean(boolean)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Byte</name>
            <feature confirmed="no">
                <name>java.lang.Byte.Byte(byte)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Character</name>
            <feature confirmed="no">
                <name>java.lang.Character.Character(char)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, char, char)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Character.isJavaIdentifierStart(char)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Character.toUpperCase(char)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.matchesKey(java.lang.String, char)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Class</name>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.class$0</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.class$0</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.run(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.ExceptionTestCase(java.lang.String, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.fExpected</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.class$0</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.class$1</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.inVAJava()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.class$0</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.classFromFile(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.hasPublicConstructor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.hasSuiteMethod(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.load(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.reload(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.StandardTestSuiteLoader.load(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.StandardTestSuiteLoader.reload(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadClass(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestSuiteLoader.load(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestSuiteLoader.reload(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.class$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.createLogo()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.loadIcons()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.addTab(javax.swing.JTabbedPane)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.addTab(javax.swing.JTabbedPane)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.class$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailureDetailView()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestCollector()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadFrameIcon()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.run(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.loadIcons()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.Class.forName(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.inVAJava()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.StandardTestSuiteLoader.load(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.createLogo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailureDetailView()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestCollector()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadFrameIcon()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getConstructor(java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getDeclaredMethods()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.hasSuiteMethod(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getModifiers()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getName()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.run(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.reload(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.run(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getResource(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getResourceAsStream(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getSuperclass()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isAssignableFrom(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.newInstance()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailureDetailView()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestCollector()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassLoader</name>
            <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.createLoader()</inbound>
            <inbound type="class" confirmed="yes">junit.runner.TestCaseClassLoader</inbound>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.ClassLoader()</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.TestCaseClassLoader(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.defineClass(java.lang.String, byte[], int, int)</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadClass(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.findLoadedClass(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadClass(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.findSystemClass(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadClass(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.getSystemResource(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.getResource(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.getSystemResourceAsStream(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.getResourceAsStream(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.resolveClass(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadClass(java.lang.String, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassNotFoundException</name>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.classFromFile(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.load(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.reload(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.StandardTestSuiteLoader.load(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.StandardTestSuiteLoader.reload(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadClass(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestSuiteLoader.load(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestSuiteLoader.reload(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.createLogo()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadFrameIcon()</inbound>
            <feature confirmed="no">
                <name>java.lang.ClassNotFoundException.ClassNotFoundException()</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadClass(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ClassNotFoundException.ClassNotFoundException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Double</name>
            <feature confirmed="no">
                <name>java.lang.Double.Double(double)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Double.isInfinite(double)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Error</name>
            <inbound type="class" confirmed="yes">junit.framework.AssertionFailedError</inbound>
            <feature confirmed="no">
                <name>java.lang.Error.Error()</name>
                <inbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Error.Error(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Exception</name>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.setUp()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.tearDown()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.setUp()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.tearDown()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.inVAJava()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.hasSuiteMethod(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailureDetailView()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestCollector()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.synchUI()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <feature confirmed="no">
                <name>java.lang.Exception.Exception(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Float</name>
            <feature confirmed="no">
                <name>java.lang.Float.Float(float)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Float.isInfinite(float)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalAccessException</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalArgumentException</name>
            <feature confirmed="no">
                <name>java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.InstantiationException</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Integer</name>
            <feature confirmed="no">
                <name>java.lang.Integer.Integer(int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.parseInt(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.toString(int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.setLabelValue(java.awt.Label, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.asString(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setLabelValue(javax.swing.JTextField, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setRunValue(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$18.run()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.InterruptedException</name>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.waitUntilFinished()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Long</name>
            <feature confirmed="no">
                <name>java.lang.Long.Long(long)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, long, long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Math</name>
            <feature confirmed="no">
                <name>java.lang.Math.abs(double)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Math.abs(float)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Math.max(int, int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.scale(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Math.min(int, int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.NoClassDefFoundError</name>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.NoClassDefFoundError.NoClassDefFoundError(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.createLogo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadFrameIcon()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.NoSuchMethodException</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.hasPublicConstructor(java.lang.Class)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.NumberFormatException</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Object</name>
            <inbound type="class" confirmed="yes">junit.awtui.AboutDialog$1</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$1</inbound>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$2</inbound>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$4</inbound>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$5</inbound>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$6</inbound>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$7</inbound>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$8</inbound>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$9</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerun()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showErrorTrace()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
            <inbound type="class" confirmed="yes">junit.extensions.TestSetup$1</inbound>
            <inbound type="class" confirmed="yes">junit.framework.Assert</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, char, char)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, long, long)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, short, short)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            <inbound type="class" confirmed="yes">junit.framework.Protectable</inbound>
            <inbound type="class" confirmed="yes">junit.framework.Test</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestFailure</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestListener</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestResult</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestResult$1</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.removeListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestSuite</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</inbound>
            <inbound type="class" confirmed="yes">junit.runner.BaseTestRunner</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</inbound>
            <inbound type="class" confirmed="yes">junit.runner.ClassPathTestCollector</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInRoots(java.util.Vector)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.splitClassPath(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">junit.runner.FailureDetailView</inbound>
            <inbound type="class" confirmed="yes">junit.runner.ReloadingTestSuiteLoader</inbound>
            <inbound type="class" confirmed="yes">junit.runner.Sorter</inbound>
            <inbound type="class" confirmed="yes">junit.runner.Sorter$Swapper</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.Sorter.sortStrings(java.util.Vector, int, int, junit.runner.Sorter$Swapper)</inbound>
            <inbound type="class" confirmed="yes">junit.runner.StandardTestSuiteLoader</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.isExcluded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.scanPath(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">junit.runner.TestCollector</inbound>
            <inbound type="class" confirmed="yes">junit.runner.TestRunListener</inbound>
            <inbound type="class" confirmed="yes">junit.runner.TestSuiteLoader</inbound>
            <inbound type="class" confirmed="yes">junit.runner.Version</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.AboutDialog$1</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.addToGrid(java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setRunValue(int)</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.DefaultFailureDetailView</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackEntryRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.clear()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.getElementAt(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.scan(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.setTrace(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.FailureRunView</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.FailureRunView$1</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.getSelectedTest()</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestHierarchyRunView</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestHierarchyRunView$1</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunContext</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunView</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$1</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$10</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$12</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$13</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$14</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$15</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$17</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$18</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$19</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$2</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$20</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$3</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.run()</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$4</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$5</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$6</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$8</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$9</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.aboutToStart(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addToHistory(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.browseTestClasses()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailureDetailView()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestCollector()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestRunViews()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getSuiteText()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadHistory(javax.swing.JComboBox)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerun()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.revealFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.setSuite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showFailureDetail(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testViewChanged()</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestSelector$1</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestSelector$2</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestSelector$3</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper.swap(java.util.Vector, int, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.TestSelector$TestCellRenderer()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.displayString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.okSelected()</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestSuitePanel$1</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.stripParenthesis(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.getSelectedTest()</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestTreeModel</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addError(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addRunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addTreeModelListener(javax.swing.event.TreeModelListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.findTest(junit.framework.Test, junit.framework.Test, java.util.Vector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fireNodeChanged(javax.swing.tree.TreePath, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getChild(java.lang.Object, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getChildCount(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getIndexOfChild(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getRoot()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isError(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isLeaf(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isTestSuite(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.removeTreeModelListener(javax.swing.event.TreeModelListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.wasRun(junit.framework.Test)</inbound>
            <inbound type="class" confirmed="yes">junit.textui.ResultPrinter</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <feature confirmed="no">
                <name>java.lang.Object.Object()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog$1.AboutDialog$1(junit.awtui.AboutDialog)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$1.TestRunner$1(junit.awtui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$2.TestRunner$2()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$4.TestRunner$4(junit.awtui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.TestRunner$5(junit.awtui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$6.TestRunner$6(junit.awtui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$7.TestRunner$7(junit.awtui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$8.TestRunner$8(junit.awtui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$9.TestRunner$9()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.Assert()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestCase)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.BaseTestRunner()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.ClassPathTestCollector()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.ReloadingTestSuiteLoader()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.Sorter.Sorter()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.StandardTestSuiteLoader.StandardTestSuiteLoader()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.Version.Version()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog$1.AboutDialog$1(junit.swingui.AboutDialog)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.DefaultFailureDetailView()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$1.FailureRunView$1(junit.swingui.FailureRunView)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView$1.TestHierarchyRunView$1(junit.swingui.TestHierarchyRunView)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.TestHierarchyRunView(junit.swingui.TestRunContext)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.TestRunner$1(junit.swingui.TestRunner, int, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$10.TestRunner$10(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$12.TestRunner$12(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$13.TestRunner$13(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.TestRunner$14(junit.swingui.TestRunner, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.TestRunner$15(junit.swingui.TestRunner, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.TestRunner$17(javax.swing.JButton, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$18.TestRunner$18(javax.swing.JTextField, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.TestRunner$19(junit.swingui.TestRunner, junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.TestRunner$2(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$20.TestRunner$20()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.TestRunner$3(junit.swingui.TestRunner, junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$4.TestRunner$4(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$5.TestRunner$5(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$6.TestRunner$6(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$8.TestRunner$8(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$9.TestRunner$9(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$1.TestSelector$1(junit.swingui.TestSelector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$2.TestSelector$2(junit.swingui.TestSelector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$3.TestSelector$3(junit.swingui.TestSelector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper.TestSelector$ParallelSwapper(junit.swingui.TestSelector, java.util.Vector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.TestSuitePanel$1(junit.swingui.TestSuitePanel, junit.framework.Test, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.TestTreeModel(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.findTest(junit.framework.Test, junit.framework.Test, java.util.Vector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getIndexOfChild(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.getClass()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.loadIcons()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.addTab(javax.swing.JTabbedPane)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.addTab(javax.swing.JTabbedPane)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.loadIcons()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.notifyAll()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runFinished(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.toString()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.stripParenthesis(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.wait()</name>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.waitUntilFinished()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Runnable</name>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$1</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$14</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$15</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$17</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$18</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$19</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$2</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$20</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$3</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.postInfo(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.postStatus(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runFinished(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.setButtonLabel(javax.swing.JButton, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.setLabelValue(javax.swing.JTextField, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.start(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.synchUI()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testEnded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestSuitePanel$1</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fireTestChanged(junit.framework.Test, boolean)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Short</name>
            <feature confirmed="no">
                <name>java.lang.Short.Short(short)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, short, short)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.String</name>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.textValueChanged(java.awt.event.TextEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.SUITE_METHODNAME</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.access$1(junit.awtui.TestRunner, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.access$2(junit.awtui.TestRunner, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.clearStatus()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createCounterPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createJUnitMenu()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.run(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.setLabelValue(java.awt.Label, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.setSuiteName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showErrorTrace()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showInfo(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showStatus(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.static {}</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testEnded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testStarted(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.ExceptionTestCase(java.lang.String, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(byte, byte)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(char, char)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(double, double, double)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(float, float, float)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(int, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, char, char)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, long, long)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, short, short)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(long, long)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(short, short)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertFalse(boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertFalse(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.fail()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fActual</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fExpected</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.fName</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.getName()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.setName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.exceptionMessage()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.TestSuite$1(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.val$message</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.fName</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getName()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.setName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.SUITE_METHODNAME</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.elapsedTimeAsString(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.extractClassName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.filterLine(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.inVAJava()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.runFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.static {}</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testEnded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testStarted(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.classNameFromFile(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInRoots(java.util.Vector)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectTests()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.isTestClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.splitClassPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.classFromFile(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.hasSuiteMethod(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.load(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.reload(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.SimpleTestCollector.isTestClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.Sorter.sortStrings(java.util.Vector, int, int, junit.runner.Sorter$Swapper)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.StandardTestSuiteLoader.load(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.EXCLUDED_FILE</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.TestCaseClassLoader()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.TestCaseClassLoader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.defaultExclusions</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.getResourceAsStream(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.isExcluded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.isJar(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadClass(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadFileData(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadJarData(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.scanPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestRunListener.testEnded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestRunListener.testFailed(int, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestRunListener.testRunStarted(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestRunListener.testStarted(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestSuiteLoader.load(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.Version.id()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.createLogo()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.asString(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.createOutputField(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setLabelValue(javax.swing.JTextField, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setRunValue(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackEntryRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.scan(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.setTrace(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getComponent()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.showFailure(junit.framework.TestFailure)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.loadIcons()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.addTab(javax.swing.JTabbedPane)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.clear()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showError(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showInfo(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.static {}</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.addTab(javax.swing.JTabbedPane)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.TestRunner$14(junit.swingui.TestRunner, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.val$message</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.TestRunner$15(junit.swingui.TestRunner, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.val$status</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.TestRunner$16(junit.swingui.TestRunner, junit.framework.Test, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.TestRunner$17(javax.swing.JButton, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.val$label</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$18.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.FAILUREDETAILVIEW_KEY</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.TESTCOLLECTOR_KEY</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$10(junit.swingui.TestRunner, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$11(junit.swingui.TestRunner, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$13(junit.swingui.TestRunner, javax.swing.JButton, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$2(junit.swingui.TestRunner, java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$7(junit.swingui.TestRunner, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$8(junit.swingui.TestRunner, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addToHistory(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.browseTestClasses()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createBrowseButton()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailedPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailureDetailView()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFrame(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createJUnitMenu()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createQuitButton()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createRunButton()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestCollector()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUseLoaderCheckBox()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getSettingsFile()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getSuiteText()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadFrameIcon()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadHistory(javax.swing.JComboBox)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.postInfo(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.postStatus(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.pruneHistory()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.run(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.setButtonLabel(javax.swing.JButton, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.setSuite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showInfo(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showStatus(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.terminate()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testEnded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testStarted(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.textChanged()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.displayString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.matchesKey(java.lang.String, char)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.typeIndex(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.fSelectedItem</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.getSelectedItem()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.okSelected()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.loadIcons()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.stripParenthesis(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.elapsedTimeAsString(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.testEnded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.testStarted(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.String.charAt(int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.matchesKey(java.lang.String, char)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.compareTo(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.Sorter.sortStrings(java.util.Vector, int, int, junit.runner.Sorter$Swapper)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.endsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.isTestClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.SimpleTestCollector.isTestClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.isJar(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addToHistory(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.indexOf(int)</name>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.isTestClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.SimpleTestCollector.isTestClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.stripParenthesis(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.indexOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.filterLine(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.isTestClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.SimpleTestCollector.isTestClass(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.lastIndexOf(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.displayString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.typeIndex(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.lastIndexOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.extractClassName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.length()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.textValueChanged(java.awt.event.TextEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.classNameFromFile(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.static {}</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.textChanged()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.replace(char, char)</name>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.classNameFromFile(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackEntryRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.startsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.extractClassName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.classNameFromFile(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.isExcluded(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.extractClassName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.classNameFromFile(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.displayString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int, int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.classNameFromFile(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.displayString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.stripParenthesis(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.trim()</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.valueOf(int)</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.valueOf(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setRunValue(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.displayString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.StringBuffer</name>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testStarted(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setRunValue(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testStarted(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.displayString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.StringBuffer()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.StringBuffer(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testStarted(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setRunValue(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testStarted(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.displayString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.append(char)</name>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.append(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setRunValue(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.append(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.append(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testStarted(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setRunValue(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testStarted(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.displayString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.toString()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testStarted(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setRunValue(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testStarted(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.displayString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.System</name>
            <feature confirmed="no">
                <name>java.lang.System.currentTimeMillis()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.err</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runFailed(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.exit(int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$2.actionPerformed(java.awt.event.ActionEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$3.windowClosing(java.awt.event.WindowEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$9.actionPerformed(java.awt.event.ActionEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.terminate()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runFailed(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.gc()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.getProperty(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectTests()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.splitClassPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.TestCaseClassLoader()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.scanPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getSettingsFile()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.in</name>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.out</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.terminate()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Thread</name>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner$10</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fRunner</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.getRunner()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
            <inbound type="class" confirmed="yes">junit.extensions.ActiveTestSuite$1</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.createLoader()</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$16</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$14(junit.swingui.TestRunner, java.lang.Thread)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.fRunner</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runTest(junit.framework.Test)</inbound>
            <feature confirmed="no">
                <name>java.lang.Thread.Thread()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.TestRunner$10(junit.awtui.TestRunner, junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.Thread(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.TestRunner$16(junit.swingui.TestRunner, junit.framework.Test, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.currentThread()</name>
                <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.createLoader()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)</name>
                <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.createLoader()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.start()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ThreadDeath</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Throwable</name>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showErrorTrace()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Protectable.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runBare()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.exceptionMessage()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.fThrownException</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.isFailure()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.thrownException()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.TestRunner$1(junit.swingui.TestRunner, int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.val$t</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$2(junit.swingui.TestRunner, java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <feature confirmed="no">
                <name>java.lang.Throwable.fillInStackTrace()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Throwable.getMessage()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.exceptionMessage()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.createLogo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadFrameIcon()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Throwable.printStackTrace(java.io.PrintWriter)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Throwable.toString()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Void</name>
            <feature confirmed="no">
                <name>java.lang.Void.TYPE</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.reflect</name>
        <class confirmed="no">
            <name>java.lang.reflect.Constructor</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.hasPublicConstructor(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.getParameterTypes()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.newInstance(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.InvocationTargetException</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.InvocationTargetException.getTargetException()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Method</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.hasSuiteMethod(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getModifiers()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getName()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getParameterTypes()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getReturnType()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Modifier</name>
            <feature confirmed="no">
                <name>java.lang.reflect.Modifier.isPublic(int)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Modifier.isStatic(int)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.net</name>
        <class confirmed="no">
            <name>java.net.URL</name>
            <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.net.URL.getContent()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.text</name>
        <class confirmed="no">
            <name>java.text.NumberFormat</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.elapsedTimeAsString(long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.elapsedTimeAsString(long)</inbound>
            <feature confirmed="no">
                <name>java.text.NumberFormat.format(double)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.elapsedTimeAsString(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.elapsedTimeAsString(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.text.NumberFormat.getInstance()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.elapsedTimeAsString(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.elapsedTimeAsString(long)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util</name>
        <class confirmed="no">
            <name>java.util.Enumeration</name>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.tests()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInRoots(java.util.Vector)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectTests()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCollector.collectTests()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.aboutToStart(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.revealFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fireNodeChanged(javax.swing.tree.TreePath, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getIndexOfChild(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
            <feature confirmed="no">
                <name>java.util.Enumeration.hasMoreElements()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInRoots(java.util.Vector)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.aboutToStart(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.revealFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fireNodeChanged(javax.swing.tree.TreePath, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getIndexOfChild(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Enumeration.nextElement()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInRoots(java.util.Vector)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.aboutToStart(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.revealFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fireNodeChanged(javax.swing.tree.TreePath, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getIndexOfChild(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Hashtable</name>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInRoots(java.util.Vector)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectTests()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.TestTreeModel(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addError(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addRunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fErrors</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fFailures</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fRunTests</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isError(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.resetResults()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.wasRun(junit.framework.Test)</inbound>
            <feature confirmed="no">
                <name>java.util.Hashtable.Hashtable()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.TestTreeModel(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.resetResults()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Hashtable.Hashtable(int)</name>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInRoots(java.util.Vector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Hashtable.elements()</name>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectTests()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Hashtable.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isError(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.wasRun(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Hashtable.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addError(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addRunTest(junit.framework.Test)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Properties</name>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fPreferences</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreferences(java.util.Properties)</inbound>
            <feature confirmed="no">
                <name>java.util.Properties.Properties()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.Properties(java.util.Properties)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.getProperty(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.load(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.propertyNames()</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.setProperty(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.store(java.io.OutputStream, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.StringTokenizer</name>
            <feature confirmed="no">
                <name>java.util.StringTokenizer.StringTokenizer(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.splitClassPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.scanPath(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.StringTokenizer.StringTokenizer(java.lang.String, java.lang.String, boolean)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.scan(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.StringTokenizer.hasMoreTokens()</name>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.splitClassPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.scanPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.scan(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.StringTokenizer.nextToken()</name>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.splitClassPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.scanPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.scan(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Vector</name>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fExceptions</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fFailedTests</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerun()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showErrorTrace()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.fErrors</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.fFailures</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.fListeners</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.removeListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testCount()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.tests()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInRoots(java.util.Vector)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.splitClassPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.Sorter$Swapper.swap(java.util.Vector, int, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.Sorter.sortStrings(java.util.Vector, int, int, junit.runner.Sorter$Swapper)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.fExcluded</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.fPathItems</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.isExcluded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.scanPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.DefaultFailureDetailView$StackTraceListModel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.clear()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.fLines</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.getElementAt(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.getSize()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.scan(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.setTrace(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.TestRunner()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.aboutToStart(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$4(junit.swingui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestRunViews()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestRunViews</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerun()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.revealFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testViewChanged()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper.TestSelector$ParallelSwapper(junit.swingui.TestSelector, java.util.Vector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper.fOther</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper.swap(java.util.Vector, int, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.TestTreeModel(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addTreeModelListener(javax.swing.event.TreeModelListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fModelListeners</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.findTest(junit.framework.Test, junit.framework.Test, java.util.Vector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fireNodeChanged(javax.swing.tree.TreePath, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.removeTreeModelListener(javax.swing.event.TreeModelListener)</inbound>
            <feature confirmed="no">
                <name>java.util.Vector.Vector()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.splitClassPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.TestRunner()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.TestTreeModel(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.Vector(int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.scanPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.DefaultFailureDetailView$StackTraceListModel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.scan(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.addElement(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.splitClassPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.scanPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestRunViews()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addTreeModelListener(javax.swing.event.TreeModelListener)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.clone()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.contains(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addTreeModelListener(javax.swing.event.TreeModelListener)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.copyInto(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.elementAt(int)</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerun()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showErrorTrace()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.Sorter.sortStrings(java.util.Vector, int, int, junit.runner.Sorter$Swapper)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.isExcluded(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.getElementAt(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerun()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testViewChanged()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper.swap(java.util.Vector, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.elements()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.tests()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInRoots(java.util.Vector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.aboutToStart(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.revealFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fireNodeChanged(javax.swing.tree.TreePath, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.insertElementAt(java.lang.Object, int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.findTest(junit.framework.Test, junit.framework.Test, java.util.Vector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.removeAllElements()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.clear()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.scan(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.removeElement(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.removeListener(junit.framework.TestListener)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.removeTreeModelListener(javax.swing.event.TreeModelListener)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.setElementAt(java.lang.Object, int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper.swap(java.util.Vector, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Vector.size()</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.isExcluded(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.clear()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.getSize()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.setTrace(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.findTest(junit.framework.Test, junit.framework.Test, java.util.Vector)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.zip</name>
        <class confirmed="no">
            <name>java.util.zip.ZipEntry</name>
            <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadJarData(java.lang.String, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.util.zip.ZipEntry.getSize()</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadJarData(java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.zip.ZipFile</name>
            <feature confirmed="no">
                <name>java.util.zip.ZipFile.ZipFile(java.io.File)</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadJarData(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.zip.ZipFile.close()</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadJarData(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.zip.ZipFile.getEntry(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadJarData(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.zip.ZipFile.getInputStream(java.util.zip.ZipEntry)</name>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadJarData(java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.swing</name>
        <class confirmed="no">
            <name>javax.swing.AbstractButton</name>
            <feature confirmed="no">
                <name>javax.swing.AbstractButton.addActionListener(java.awt.event.ActionListener)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createBrowseButton()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailedPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createJUnitMenu()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createQuitButton()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createRunButton()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.AbstractButton.isSelected()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.shouldReload()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.AbstractButton.setEnabled(boolean)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailedPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createRunButton()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.handleTestSelected(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.textChanged()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.checkEnableOK(javax.swing.event.ListSelectionEvent)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.AbstractButton.setMnemonic(char)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createJUnitMenu()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.AbstractButton.setText(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runFailed(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.AbstractListModel</name>
            <inbound type="class" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel</inbound>
            <feature confirmed="no">
                <name>javax.swing.AbstractListModel.AbstractListModel()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.DefaultFailureDetailView$StackTraceListModel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.AbstractListModel.fireContentsChanged(java.lang.Object, int, int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.clear()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.setTrace(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.BorderFactory</name>
            <feature confirmed="no">
                <name>javax.swing.BorderFactory.createBevelBorder(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.StatusLine(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.BorderFactory.createEmptyBorder()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.createOutputField(int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.ComboBoxEditor</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getSuiteText()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.setSuite(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>javax.swing.ComboBoxEditor.getEditorComponent()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.ComboBoxEditor.getItem()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getSuiteText()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.ComboBoxEditor.setItem(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.setSuite(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.DefaultListCellRenderer</name>
            <inbound type="class" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackEntryRenderer</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer</inbound>
            <feature confirmed="no">
                <name>javax.swing.DefaultListCellRenderer.DefaultListCellRenderer()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackEntryRenderer.DefaultFailureDetailView$StackEntryRenderer()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.FailureRunView$FailureListCellRenderer()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.TestSelector$TestCellRenderer()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.DefaultListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackEntryRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.DefaultListModel</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.fFailures</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getFailures()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</inbound>
            <feature confirmed="no">
                <name>javax.swing.DefaultListModel.DefaultListModel()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.DefaultListModel.addElement(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.DefaultListModel.clear()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.DefaultListModel.size()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.Icon</name>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.createLogo()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fErrorIcon</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fFailureIcon</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.fErrorIcon</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.fFailureIcon</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.loadIcons()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.addTab(javax.swing.JTabbedPane)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.addTab(javax.swing.JTabbedPane)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadFrameIcon()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.TestSelector$TestCellRenderer()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.fLeafIcon</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.fSuiteIcon</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.fErrorIcon</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.fFailureIcon</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.fOkIcon</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.loadIcons()</inbound>
        </class>
        <class confirmed="no">
            <name>javax.swing.ImageIcon</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadFrameIcon()</inbound>
            <feature confirmed="no">
                <name>javax.swing.ImageIcon.ImageIcon(java.net.URL)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.ImageIcon.getImage()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadFrameIcon()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JButton</name>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.TestRunner$17(javax.swing.JButton, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.val$button</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$12(junit.swingui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$13(junit.swingui.TestRunner, javax.swing.JButton, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailedPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createQuitButton()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createRunButton()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.fQuitButton</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.fRerunButton</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.fRun</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.handleTestSelected(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runFailed(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.setButtonLabel(javax.swing.JButton, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.textChanged()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.checkEnableOK(javax.swing.event.ListSelectionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.fCancel</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.fOk</inbound>
            <feature confirmed="no">
                <name>javax.swing.JButton.JButton(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createBrowseButton()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailedPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createQuitButton()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createRunButton()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JCheckBox</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUseLoaderCheckBox()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.fUseLoadingRunner</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.shouldReload()</inbound>
            <feature confirmed="no">
                <name>javax.swing.JCheckBox.JCheckBox(java.lang.String, boolean)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUseLoaderCheckBox()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JComboBox</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addToHistory(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.fSuiteCombo</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getSuiteText()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadHistory(javax.swing.JComboBox)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.pruneHistory()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.setSuite(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>javax.swing.JComboBox.JComboBox()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComboBox.addItem(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadHistory(javax.swing.JComboBox)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComboBox.addItemListener(java.awt.event.ItemListener)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComboBox.getEditor()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getSuiteText()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.setSuite(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComboBox.getItemAt(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addToHistory(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComboBox.getItemCount()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addToHistory(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.pruneHistory()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComboBox.insertItemAt(java.lang.Object, int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addToHistory(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComboBox.removeItemAt(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addToHistory(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.pruneHistory()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComboBox.setEditable(boolean)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComboBox.setLightWeightPopupEnabled(boolean)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComboBox.setSelectedIndex(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addToHistory(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadHistory(javax.swing.JComboBox)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JComponent</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            <feature confirmed="no">
                <name>javax.swing.JComponent.putClientProperty(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComponent.setBorder(javax.swing.border.Border)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.createOutputField(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.StatusLine(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComponent.setFont(java.awt.Font)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getComponent()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComponent.setForeground(java.awt.Color)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.ProgressBar()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.step(int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showError(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showInfo(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComponent.setMaximumSize(java.awt.Dimension)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.createOutputField(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComponent.setMinimumSize(java.awt.Dimension)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.createOutputField(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComponent.setPreferredSize(java.awt.Dimension)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.StatusLine(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComponent.setToolTipText(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackEntryRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.clear()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showError(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createBrowseButton()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUseLoaderCheckBox()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComponent.setVisible(boolean)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUseLoaderCheckBox()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JDialog</name>
            <inbound type="class" confirmed="yes">junit.swingui.AboutDialog</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestSelector</inbound>
            <feature confirmed="no">
                <name>javax.swing.JDialog.JDialog(java.awt.Frame, boolean)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JDialog.getContentPane()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JDialog.getRootPane()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JFrame</name>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.about()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.browseTestClasses()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailureDetailView()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFrame(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestCollector()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.fFrame</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.terminate()</inbound>
            <feature confirmed="no">
                <name>javax.swing.JFrame.JFrame(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFrame(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JFrame.getContentPane()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFrame(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JFrame.getRootPane()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JFrame.setContentPane(java.awt.Container)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JFrame.setJMenuBar(javax.swing.JMenuBar)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JLabel</name>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.createLogo()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.fLogo</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.fDescription</inbound>
            <feature confirmed="no">
                <name>javax.swing.JLabel.JLabel(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JLabel.JLabel(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JLabel.JLabel(java.lang.String, javax.swing.Icon, int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JLabel.JLabel(javax.swing.Icon)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.createLogo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JLabel.getText()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JLabel.setIcon(javax.swing.Icon)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JLabel.setText(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackEntryRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JList</name>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackEntryRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.fList</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getComponent()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getModel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.addTab(javax.swing.JTabbedPane)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.fFailureList</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.getSelectedTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.revealFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.checkEnableOK(javax.swing.event.ListSelectionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.fList</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.isEmpty()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.okSelected()</inbound>
            <feature confirmed="no">
                <name>javax.swing.JList.JList(java.util.Vector)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JList.JList(javax.swing.ListModel)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getComponent()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JList.addListSelectionListener(javax.swing.event.ListSelectionListener)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JList.ensureIndexIsVisible(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JList.getModel()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getModel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.getSelectedTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.isEmpty()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JList.getSelectedIndex()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.getSelectedTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.checkEnableOK(javax.swing.event.ListSelectionEvent)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JList.getSelectedValue()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.okSelected()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JList.setCellRenderer(javax.swing.ListCellRenderer)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getComponent()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JList.setSelectedIndex(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.revealFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JList.setSelectionMode(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getComponent()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JList.setVisibleRowCount(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getComponent()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JMenu</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createJUnitMenu()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createMenus(javax.swing.JMenuBar)</inbound>
            <feature confirmed="no">
                <name>javax.swing.JMenu.JMenu(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createJUnitMenu()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JMenu.add(javax.swing.JMenuItem)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createJUnitMenu()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JMenu.addSeparator()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createJUnitMenu()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JMenuBar</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createMenus(javax.swing.JMenuBar)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>javax.swing.JMenuBar.JMenuBar()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JMenuBar.add(javax.swing.JMenu)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createMenus(javax.swing.JMenuBar)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JMenuItem</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createJUnitMenu()</inbound>
            <feature confirmed="no">
                <name>javax.swing.JMenuItem.JMenuItem(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createJUnitMenu()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JOptionPane</name>
            <feature confirmed="no">
                <name>javax.swing.JOptionPane.showMessageDialog(java.awt.Component, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.browseTestClasses()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailureDetailView()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestCollector()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JPanel</name>
            <inbound type="class" confirmed="yes">junit.swingui.CounterPanel</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailedPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestSuitePanel</inbound>
            <feature confirmed="no">
                <name>javax.swing.JPanel.JPanel(java.awt.LayoutManager)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailedPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JProgressBar</name>
            <inbound type="class" confirmed="yes">junit.swingui.ProgressBar</inbound>
            <feature confirmed="no">
                <name>javax.swing.JProgressBar.JProgressBar()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.ProgressBar()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JProgressBar.setMaximum(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.start(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JProgressBar.setValue(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.step(int, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JRootPane</name>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            <feature confirmed="no">
                <name>javax.swing.JRootPane.setDefaultButton(javax.swing.JButton)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JScrollPane</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.fScrolledList</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fScrollTree</inbound>
            <feature confirmed="no">
                <name>javax.swing.JScrollPane.JScrollPane(java.awt.Component)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JScrollPane.JScrollPane(java.awt.Component, int, int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.addTab(javax.swing.JTabbedPane)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JSeparator</name>
            <feature confirmed="no">
                <name>javax.swing.JSeparator.JSeparator()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JSplitPane</name>
            <feature confirmed="no">
                <name>javax.swing.JSplitPane.JSplitPane(int, java.awt.Component, java.awt.Component)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JTabbedPane</name>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.addTab(javax.swing.JTabbedPane)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.addTab(javax.swing.JTabbedPane)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunView.addTab(javax.swing.JTabbedPane)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestRunViews()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestViewTab</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerun()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testViewChanged()</inbound>
            <feature confirmed="no">
                <name>javax.swing.JTabbedPane.JTabbedPane(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestRunViews()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTabbedPane.addChangeListener(javax.swing.event.ChangeListener)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestRunViews()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTabbedPane.addTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.addTab(javax.swing.JTabbedPane)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.addTab(javax.swing.JTabbedPane)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTabbedPane.getSelectedIndex()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerun()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testViewChanged()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JTextField</name>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.createOutputField(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fNumberOfErrors</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fNumberOfFailures</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fNumberOfRuns</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.reset()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setErrorValue(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setFailureValue(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setLabelValue(javax.swing.JTextField, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setRunValue(int)</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.StatusLine</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$18.TestRunner$18(javax.swing.JTextField, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$18.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$18.val$label</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.setLabelValue(javax.swing.JTextField, int)</inbound>
            <feature confirmed="no">
                <name>javax.swing.JTextField.JTextField()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.StatusLine(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTextField.JTextField(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.createOutputField(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTextField.getPreferredSize()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.createOutputField(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.StatusLine(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTextField.setFont(java.awt.Font)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.createOutputField(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.StatusLine(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showError(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showInfo(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTextField.setHorizontalAlignment(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.createOutputField(int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JTree</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.TestHierarchyRunView(junit.swingui.TestRunContext)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.access$1(junit.swingui.TestSuitePanel)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fTree</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.getSelectedTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.getTree()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.showTestTree(junit.framework.Test)</inbound>
            <feature confirmed="no">
                <name>javax.swing.JTree.JTree()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTree.addTreeSelectionListener(javax.swing.event.TreeSelectionListener)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.TestHierarchyRunView(junit.swingui.TestRunContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTree.getModel()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTree.getSelectionPaths()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.getSelectedTest()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTree.makeVisible(javax.swing.tree.TreePath)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTree.scrollPathToVisible(javax.swing.tree.TreePath)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTree.setCellRenderer(javax.swing.tree.TreeCellRenderer)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.showTestTree(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTree.setModel(javax.swing.tree.TreeModel)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.showTestTree(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTree.setRowHeight(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTree.setSelectionPath(javax.swing.tree.TreePath)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.ListCellRenderer</name>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getComponent()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.swing.ListModel</name>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getComponent()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getModel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.getSelectedTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunContext.getFailures()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getFailures()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showFailureDetail(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.isEmpty()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</inbound>
            <feature confirmed="no">
                <name>javax.swing.ListModel.getElementAt(int)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.getSelectedTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showFailureDetail(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.ListModel.getSize()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showFailureDetail(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.isEmpty()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.SwingUtilities</name>
            <feature confirmed="no">
                <name>javax.swing.SwingUtilities.invokeAndWait(java.lang.Runnable)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.synchUI()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.SwingUtilities.invokeLater(java.lang.Runnable)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.postInfo(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.postStatus(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runFinished(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.setButtonLabel(javax.swing.JButton, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.setLabelValue(javax.swing.JTextField, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.start(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testEnded(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fireTestChanged(junit.framework.Test, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.ToolTipManager</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            <feature confirmed="no">
                <name>javax.swing.ToolTipManager.registerComponent(javax.swing.JComponent)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.ToolTipManager.sharedInstance()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.UIManager</name>
            <feature confirmed="no">
                <name>javax.swing.UIManager.getIcon(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.TestSelector$TestCellRenderer()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.swing.border</name>
        <class confirmed="no">
            <name>javax.swing.border.Border</name>
            <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.createOutputField(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.StatusLine(int)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.swing.event</name>
        <class confirmed="no">
            <name>javax.swing.event.ChangeEvent</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$13.stateChanged(javax.swing.event.ChangeEvent)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.swing.event.ChangeListener</name>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner$13</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestRunViews()</inbound>
        </class>
        <class confirmed="no">
            <name>javax.swing.event.DocumentEvent</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.insertUpdate(javax.swing.event.DocumentEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.removeUpdate(javax.swing.event.DocumentEvent)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.swing.event.ListSelectionEvent</name>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$1.valueChanged(javax.swing.event.ListSelectionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$3.valueChanged(javax.swing.event.ListSelectionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.checkEnableOK(javax.swing.event.ListSelectionEvent)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.swing.event.ListSelectionListener</name>
            <inbound type="class" confirmed="yes">junit.swingui.FailureRunView$1</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestSelector$3</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
        </class>
        <class confirmed="no">
            <name>javax.swing.event.TreeModelEvent</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fireNodeChanged(javax.swing.tree.TreePath, int)</inbound>
            <feature confirmed="no">
                <name>javax.swing.event.TreeModelEvent.TreeModelEvent(java.lang.Object, javax.swing.tree.TreePath, int[], java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fireNodeChanged(javax.swing.tree.TreePath, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.event.TreeModelListener</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addTreeModelListener(javax.swing.event.TreeModelListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fireNodeChanged(javax.swing.tree.TreePath, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.removeTreeModelListener(javax.swing.event.TreeModelListener)</inbound>
            <feature confirmed="no">
                <name>javax.swing.event.TreeModelListener.treeNodesChanged(javax.swing.event.TreeModelEvent)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fireNodeChanged(javax.swing.tree.TreePath, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.event.TreeSelectionEvent</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView$1.valueChanged(javax.swing.event.TreeSelectionEvent)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.swing.event.TreeSelectionListener</name>
            <inbound type="class" confirmed="yes">junit.swingui.TestHierarchyRunView$1</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.TestHierarchyRunView(junit.swingui.TestRunContext)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.swing.text</name>
        <class confirmed="no">
            <name>javax.swing.text.JTextComponent</name>
            <feature confirmed="no">
                <name>javax.swing.text.JTextComponent.setEditable(boolean)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.createOutputField(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.StatusLine(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.text.JTextComponent.setText(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setLabelValue(javax.swing.JTextField, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setRunValue(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.clear()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showError(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showInfo(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$18.run()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.swing.tree</name>
        <class confirmed="no">
            <name>javax.swing.tree.DefaultTreeCellRenderer</name>
            <inbound type="class" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer</inbound>
            <feature confirmed="no">
                <name>javax.swing.tree.DefaultTreeCellRenderer.DefaultTreeCellRenderer()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.TestSuitePanel$TestTreeCellRenderer()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.tree.DefaultTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.tree.TreeCellRenderer</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.showTestTree(junit.framework.Test)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.swing.tree.TreeModel</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.showTestTree(junit.framework.Test)</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestTreeModel</inbound>
        </class>
        <class confirmed="no">
            <name>javax.swing.tree.TreePath</name>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.getSelectedTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fireNodeChanged(javax.swing.tree.TreePath, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>javax.swing.tree.TreePath.TreePath(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.tree.TreePath.getLastPathComponent()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.getSelectedTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fireNodeChanged(javax.swing.tree.TreePath, int)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>junit.awtui</name>
        <class confirmed="yes">
            <name>junit.awtui.AboutDialog</name>
            <outbound type="class" confirmed="no">java.awt.Dialog</outbound>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog$1.AboutDialog$1(junit.awtui.AboutDialog)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog$1.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog$2.AboutDialog$2(junit.awtui.AboutDialog)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog$2.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog$2.windowClosing(java.awt.event.WindowEvent)</inbound>
            <feature confirmed="yes">
                <name>junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</name>
                <outbound type="feature" confirmed="no">java.awt.Button.Button(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Button.addActionListener(java.awt.event.ActionListener)</outbound>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setFont(java.awt.Font)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setSize(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.add(java.awt.Component, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.setLayout(java.awt.LayoutManager)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Dialog.Dialog(java.awt.Frame)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Dialog.setResizable(boolean)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Dialog.setTitle(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <outbound type="feature" confirmed="no">java.awt.Font.Font(java.lang.String, int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.Frame</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.GridBagConstraints()</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.anchor</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridheight</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridwidth</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridx</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridy</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.insets</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagLayout.GridBagLayout()</outbound>
                <outbound type="class" confirmed="no">java.awt.Insets</outbound>
                <outbound type="feature" confirmed="no">java.awt.Insets.Insets(int, int, int, int)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Label.Label(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.awt.LayoutManager</outbound>
                <outbound type="feature" confirmed="no">java.awt.Window.addWindowListener(java.awt.event.WindowListener)</outbound>
                <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
                <outbound type="class" confirmed="no">java.awt.event.WindowListener</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.AboutDialog$1.AboutDialog$1(junit.awtui.AboutDialog)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.AboutDialog$2.AboutDialog$2(junit.awtui.AboutDialog)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.Version.id()</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.about()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.awtui.AboutDialog$1</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.awtui.AboutDialog$1.AboutDialog$1(junit.awtui.AboutDialog)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.AboutDialog</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.AboutDialog$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.AboutDialog$1.actionPerformed(java.awt.event.ActionEvent)</name>
                <outbound type="feature" confirmed="no">java.awt.Dialog.dispose()</outbound>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.AboutDialog</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.AboutDialog$1.this$0</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.AboutDialog$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.awtui.AboutDialog</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog$1.AboutDialog$1(junit.awtui.AboutDialog)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog$1.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.awtui.AboutDialog$2</name>
            <outbound type="class" confirmed="no">java.awt.event.WindowAdapter</outbound>
            <feature confirmed="yes">
                <name>junit.awtui.AboutDialog$2.AboutDialog$2(junit.awtui.AboutDialog)</name>
                <outbound type="feature" confirmed="no">java.awt.event.WindowAdapter.WindowAdapter()</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.AboutDialog</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.AboutDialog$2.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.AboutDialog$2.this$0</name>
                <outbound type="class" confirmed="yes">junit.awtui.AboutDialog</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog$2.AboutDialog$2(junit.awtui.AboutDialog)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog$2.windowClosing(java.awt.event.WindowEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.AboutDialog$2.windowClosing(java.awt.event.WindowEvent)</name>
                <outbound type="feature" confirmed="no">java.awt.Dialog.dispose()</outbound>
                <outbound type="class" confirmed="no">java.awt.event.WindowEvent</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.AboutDialog</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.AboutDialog$2.this$0</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.awtui.Logo</name>
            <outbound type="class" confirmed="no">java.awt.Canvas</outbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fLogo</inbound>
            <feature confirmed="yes">
                <name>junit.awtui.Logo.Logo()</name>
                <outbound type="feature" confirmed="no">java.awt.Canvas.Canvas()</outbound>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setSize(int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.Image</outbound>
                <outbound type="feature" confirmed="no">java.awt.Image.getHeight(java.awt.image.ImageObserver)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Image.getWidth(java.awt.image.ImageObserver)</outbound>
                <outbound type="feature" confirmed="no">java.awt.MediaTracker.MediaTracker(java.awt.Component)</outbound>
                <outbound type="feature" confirmed="no">java.awt.MediaTracker.addImage(java.awt.Image, int)</outbound>
                <outbound type="feature" confirmed="no">java.awt.MediaTracker.waitForAll()</outbound>
                <outbound type="class" confirmed="no">java.awt.image.ImageObserver</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.Logo.fHeight</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.Logo.fImage</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.Logo.fWidth</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.Logo.class$0</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.loadImage(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.Logo.fHeight</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.paint(java.awt.Graphics)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.Logo.fImage</name>
                <outbound type="class" confirmed="no">java.awt.Image</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.paint(java.awt.Graphics)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.Logo.fWidth</name>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.paint(java.awt.Graphics)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.Logo.loadImage(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.awt.Image</outbound>
                <outbound type="class" confirmed="no">java.awt.Toolkit</outbound>
                <outbound type="feature" confirmed="no">java.awt.Toolkit.createImage(java.awt.image.ImageProducer)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Toolkit.getDefaultToolkit()</outbound>
                <outbound type="class" confirmed="no">java.awt.image.ImageProducer</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getResource(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.NoClassDefFoundError.NoClassDefFoundError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getContent()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.Logo.class$0</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.Logo.paint(java.awt.Graphics)</name>
                <outbound type="class" confirmed="no">java.awt.Graphics</outbound>
                <outbound type="feature" confirmed="no">java.awt.Graphics.drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver)</outbound>
                <outbound type="class" confirmed="no">java.awt.Image</outbound>
                <outbound type="class" confirmed="no">java.awt.image.ImageObserver</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.Logo.fHeight</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.Logo.fImage</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.Logo.fWidth</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.Logo.paintBackground(java.awt.Graphics)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.Logo.paintBackground(java.awt.Graphics)</name>
                <outbound type="class" confirmed="no">java.awt.Color</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.getBounds()</outbound>
                <outbound type="class" confirmed="no">java.awt.Graphics</outbound>
                <outbound type="feature" confirmed="no">java.awt.Graphics.fillRect(int, int, int, int)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Graphics.setColor(java.awt.Color)</outbound>
                <outbound type="class" confirmed="no">java.awt.Rectangle</outbound>
                <outbound type="feature" confirmed="no">java.awt.Rectangle.height</outbound>
                <outbound type="feature" confirmed="no">java.awt.Rectangle.width</outbound>
                <outbound type="class" confirmed="no">java.awt.SystemColor</outbound>
                <outbound type="feature" confirmed="no">java.awt.SystemColor.control</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.Logo.paint(java.awt.Graphics)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.awtui.ProgressBar</name>
            <outbound type="class" confirmed="no">java.awt.Canvas</outbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fProgressIndicator</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testEnded(java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>junit.awtui.ProgressBar.ProgressBar()</name>
                <outbound type="feature" confirmed="no">java.awt.Canvas.Canvas()</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setSize(int, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.fError</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.fProgress</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.fProgressX</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.fTotal</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.ProgressBar.fError</name>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.ProgressBar()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.getStatusColor()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.step(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.ProgressBar.fProgress</name>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.ProgressBar()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.setBounds(int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.step(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.ProgressBar.fProgressX</name>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.ProgressBar()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStatus(java.awt.Graphics)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.setBounds(int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.step(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.ProgressBar.fTotal</name>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.ProgressBar()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.scale(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.start(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.ProgressBar.getStatusColor()</name>
                <outbound type="class" confirmed="no">java.awt.Color</outbound>
                <outbound type="feature" confirmed="no">java.awt.Color.green</outbound>
                <outbound type="feature" confirmed="no">java.awt.Color.red</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.fError</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStatus(java.awt.Graphics)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.ProgressBar.paint(java.awt.Graphics)</name>
                <outbound type="class" confirmed="no">java.awt.Graphics</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintBackground(java.awt.Graphics)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStatus(java.awt.Graphics)</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.ProgressBar.paintBackground(java.awt.Graphics)</name>
                <outbound type="class" confirmed="no">java.awt.Color</outbound>
                <outbound type="feature" confirmed="no">java.awt.Color.darkGray</outbound>
                <outbound type="feature" confirmed="no">java.awt.Color.white</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.getBounds()</outbound>
                <outbound type="class" confirmed="no">java.awt.Graphics</outbound>
                <outbound type="feature" confirmed="no">java.awt.Graphics.drawLine(int, int, int, int)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Graphics.fillRect(int, int, int, int)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Graphics.setColor(java.awt.Color)</outbound>
                <outbound type="class" confirmed="no">java.awt.Rectangle</outbound>
                <outbound type="feature" confirmed="no">java.awt.Rectangle.height</outbound>
                <outbound type="feature" confirmed="no">java.awt.Rectangle.width</outbound>
                <outbound type="class" confirmed="no">java.awt.SystemColor</outbound>
                <outbound type="feature" confirmed="no">java.awt.SystemColor.control</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paint(java.awt.Graphics)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.ProgressBar.paintStatus(java.awt.Graphics)</name>
                <outbound type="class" confirmed="no">java.awt.Color</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.getBounds()</outbound>
                <outbound type="class" confirmed="no">java.awt.Graphics</outbound>
                <outbound type="feature" confirmed="no">java.awt.Graphics.fillRect(int, int, int, int)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Graphics.setColor(java.awt.Color)</outbound>
                <outbound type="class" confirmed="no">java.awt.Rectangle</outbound>
                <outbound type="feature" confirmed="no">java.awt.Rectangle.Rectangle(int, int, int, int)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Rectangle.height</outbound>
                <outbound type="feature" confirmed="no">java.awt.Rectangle.width</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.fProgressX</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.getStatusColor()</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paint(java.awt.Graphics)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.ProgressBar.paintStep(int, int)</name>
                <outbound type="feature" confirmed="no">java.awt.Component.getBounds()</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.repaint(int, int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.Rectangle</outbound>
                <outbound type="feature" confirmed="no">java.awt.Rectangle.height</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.step(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.ProgressBar.reset()</name>
                <outbound type="feature" confirmed="no">java.awt.Component.getGraphics()</outbound>
                <outbound type="class" confirmed="no">java.awt.Graphics</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.fError</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.fProgress</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.fProgressX</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paint(java.awt.Graphics)</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.start(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.ProgressBar.scale(int)</name>
                <outbound type="feature" confirmed="no">java.awt.Component.getBounds()</outbound>
                <outbound type="class" confirmed="no">java.awt.Rectangle</outbound>
                <outbound type="feature" confirmed="no">java.awt.Rectangle.width</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.max(int, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.fTotal</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.setBounds(int, int, int, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.ProgressBar.step(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.ProgressBar.setBounds(int, int, int, int)</name>
                <outbound type="feature" confirmed="no">java.awt.Component.setBounds(int, int, int, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.fProgress</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.fProgressX</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.scale(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.ProgressBar.start(int)</name>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.fTotal</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.reset()</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.ProgressBar.step(boolean)</name>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.fError</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.fProgress</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.fProgressX</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.paintStep(int, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.scale(int)</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testEnded(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.awtui.TestRunner</name>
            <outbound type="class" confirmed="yes">junit.runner.BaseTestRunner</outbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$1.TestRunner$1(junit.awtui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$1.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.TestRunner$10(junit.awtui.TestRunner, junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$4.TestRunner$4(junit.awtui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$4.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$4.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.TestRunner$5(junit.awtui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.textValueChanged(java.awt.event.TextEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$6.TestRunner$6(junit.awtui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$6.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$6.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$7.TestRunner$7(junit.awtui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$7.itemStateChanged(java.awt.event.ItemEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$7.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$8.TestRunner$8(junit.awtui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$8.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$8.this$0</inbound>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.GAP</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.PLAIN_FONT</name>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showInfo(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showStatus(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.SUITE_METHODNAME</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.TestRunner()</name>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.BaseTestRunner()</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.about()</name>
                <outbound type="feature" confirmed="no">java.awt.Component.setLocation(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setVisible(boolean)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Dialog.setModal(boolean)</outbound>
                <outbound type="class" confirmed="no">java.awt.Frame</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fFrame</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.access$0(junit.awtui.TestRunner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.access$0(junit.awtui.TestRunner)</name>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.about()</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$1.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.access$1(junit.awtui.TestRunner, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.showInfo(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.access$2(junit.awtui.TestRunner, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.showStatus(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.add(java.awt.Component, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.GridBagConstraints()</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.anchor</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.fill</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridwidth</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridx</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridy</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.insets</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.weightx</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.weighty</outbound>
                <outbound type="class" confirmed="no">java.awt.Insets</outbound>
                <outbound type="feature" confirmed="no">java.awt.Insets.Insets(int, int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.Panel</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.add(java.awt.Component, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.GridBagConstraints()</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.anchor</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.fill</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridheight</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridwidth</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridx</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridy</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.insets</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.weightx</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.weighty</outbound>
                <outbound type="class" confirmed="no">java.awt.Insets</outbound>
                <outbound type="class" confirmed="no">java.awt.Panel</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createCounterPanel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.awt.List</outbound>
                <outbound type="feature" confirmed="no">java.awt.List.add(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.awt.List.getItemCount()</outbound>
                <outbound type="feature" confirmed="no">java.awt.List.select(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.addElement(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fExceptions</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fFailedTests</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fFailureList</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.failureSelected()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.class$0</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.clearStatus()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.showStatus(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.createCounterPanel()</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagLayout.GridBagLayout()</outbound>
                <outbound type="class" confirmed="no">java.awt.Insets</outbound>
                <outbound type="feature" confirmed="no">java.awt.Insets.Insets(int, int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.Label</outbound>
                <outbound type="feature" confirmed="no">java.awt.Label.Label(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.awt.LayoutManager</outbound>
                <outbound type="class" confirmed="no">java.awt.Panel</outbound>
                <outbound type="feature" confirmed="no">java.awt.Panel.Panel(java.awt.LayoutManager)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.addToCounterPanel(java.awt.Panel, java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fNumberOfErrors</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fNumberOfFailures</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fNumberOfRuns</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.createJUnitMenu()</name>
                <outbound type="class" confirmed="no">java.awt.Menu</outbound>
                <outbound type="feature" confirmed="no">java.awt.Menu.Menu(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Menu.add(java.awt.MenuItem)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Menu.addSeparator()</outbound>
                <outbound type="class" confirmed="no">java.awt.MenuItem</outbound>
                <outbound type="feature" confirmed="no">java.awt.MenuItem.MenuItem(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.awt.MenuItem.addActionListener(java.awt.event.ActionListener)</outbound>
                <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$1.TestRunner$1(junit.awtui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$2.TestRunner$2()</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createMenus(java.awt.MenuBar)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.createMenus(java.awt.MenuBar)</name>
                <outbound type="class" confirmed="no">java.awt.Menu</outbound>
                <outbound type="class" confirmed="no">java.awt.MenuBar</outbound>
                <outbound type="feature" confirmed="no">java.awt.MenuBar.add(java.awt.Menu)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.createJUnitMenu()</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.createTestResult()</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.createUI(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.awt.BorderLayout.BorderLayout(int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.Button</outbound>
                <outbound type="feature" confirmed="no">java.awt.Button.Button(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Button.addActionListener(java.awt.event.ActionListener)</outbound>
                <outbound type="class" confirmed="no">java.awt.Checkbox</outbound>
                <outbound type="feature" confirmed="no">java.awt.Checkbox.Checkbox(java.lang.String, boolean)</outbound>
                <outbound type="class" confirmed="no">java.awt.Color</outbound>
                <outbound type="feature" confirmed="no">java.awt.Color.red</outbound>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.requestFocus()</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setBackground(java.awt.Color)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setEnabled(boolean)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setFont(java.awt.Font)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setForeground(java.awt.Color)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setVisible(boolean)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.add(java.awt.Component)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.add(java.awt.Component, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.setLayout(java.awt.LayoutManager)</outbound>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <outbound type="class" confirmed="no">java.awt.Frame</outbound>
                <outbound type="feature" confirmed="no">java.awt.Frame.Frame(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Frame.setIconImage(java.awt.Image)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Frame.setMenuBar(java.awt.MenuBar)</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagLayout.GridBagLayout()</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridLayout.GridLayout(int, int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.Image</outbound>
                <outbound type="class" confirmed="no">java.awt.Label</outbound>
                <outbound type="feature" confirmed="no">java.awt.Label.Label(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Label.Label(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Label.setText(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.awt.LayoutManager</outbound>
                <outbound type="class" confirmed="no">java.awt.List</outbound>
                <outbound type="feature" confirmed="no">java.awt.List.List(int)</outbound>
                <outbound type="feature" confirmed="no">java.awt.List.addItemListener(java.awt.event.ItemListener)</outbound>
                <outbound type="class" confirmed="no">java.awt.MenuBar</outbound>
                <outbound type="feature" confirmed="no">java.awt.MenuBar.MenuBar()</outbound>
                <outbound type="class" confirmed="no">java.awt.Panel</outbound>
                <outbound type="feature" confirmed="no">java.awt.Panel.Panel(java.awt.LayoutManager)</outbound>
                <outbound type="class" confirmed="no">java.awt.SystemColor</outbound>
                <outbound type="feature" confirmed="no">java.awt.SystemColor.control</outbound>
                <outbound type="class" confirmed="no">java.awt.TextArea</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextArea.TextArea()</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextArea.setColumns(int)</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextArea.setRows(int)</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextComponent.addTextListener(java.awt.event.TextListener)</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextComponent.selectAll()</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextComponent.setEditable(boolean)</outbound>
                <outbound type="class" confirmed="no">java.awt.TextField</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextField.TextField()</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextField.TextField(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextField.addActionListener(java.awt.event.ActionListener)</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextField.setColumns(int)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Window.addWindowListener(java.awt.event.WindowListener)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Window.pack()</outbound>
                <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
                <outbound type="class" confirmed="no">java.awt.event.ItemListener</outbound>
                <outbound type="class" confirmed="no">java.awt.event.TextListener</outbound>
                <outbound type="class" confirmed="no">java.awt.event.WindowListener</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.Logo</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.Logo.Logo()</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.ProgressBar</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.ProgressBar()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$3.TestRunner$3(java.awt.Frame)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$4.TestRunner$4(junit.awtui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.TestRunner$5(junit.awtui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$6.TestRunner$6(junit.awtui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$7.TestRunner$7(junit.awtui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$8.TestRunner$8(junit.awtui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$9.TestRunner$9()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.PLAIN_FONT</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.addGrid(java.awt.Panel, java.awt.Component, int, int, int, int, double, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.createCounterPanel()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.createMenus(java.awt.MenuBar)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fFailureList</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fLogo</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fNumberOfErrors</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fNumberOfFailures</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fNumberOfRuns</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fProgressIndicator</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fQuitButton</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fRerunButton</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fRun</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fStatusLine</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fSuiteField</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fTraceArea</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fUseLoadingRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.loadFrameIcon()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.inVAJava()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fExceptions</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showErrorTrace()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fFailedTests</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerun()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fFailureList</name>
                <outbound type="class" confirmed="no">java.awt.List</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.isErrorSelected()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerun()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showErrorTrace()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fFrame</name>
                <outbound type="class" confirmed="no">java.awt.Frame</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.about()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fLogo</name>
                <outbound type="class" confirmed="yes">junit.awtui.Logo</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fNumberOfErrors</name>
                <outbound type="class" confirmed="no">java.awt.Label</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createCounterPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fNumberOfFailures</name>
                <outbound type="class" confirmed="no">java.awt.Label</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createCounterPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fNumberOfRuns</name>
                <outbound type="class" confirmed="no">java.awt.Label</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createCounterPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testEnded(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fProgressIndicator</name>
                <outbound type="class" confirmed="yes">junit.awtui.ProgressBar</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testEnded(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fQuitButton</name>
                <outbound type="class" confirmed="no">java.awt.Button</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fRerunButton</name>
                <outbound type="class" confirmed="no">java.awt.Button</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.failureSelected()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fRun</name>
                <outbound type="class" confirmed="no">java.awt.Button</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.textValueChanged(java.awt.event.TextEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runFailed(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fRunner</name>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.getRunner()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runFailed(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fStatusLine</name>
                <outbound type="class" confirmed="no">java.awt.TextField</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.textValueChanged(java.awt.event.TextEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showInfo(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showStatus(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fSuiteField</name>
                <outbound type="class" confirmed="no">java.awt.TextField</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.textValueChanged(java.awt.event.TextEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.setSuiteName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fTestResult</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testEnded(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fTraceArea</name>
                <outbound type="class" confirmed="no">java.awt.TextArea</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showErrorTrace()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.fUseLoadingRunner</name>
                <outbound type="class" confirmed="no">java.awt.Checkbox</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.shouldReload()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.failureSelected()</name>
                <outbound type="class" confirmed="no">java.awt.Button</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setEnabled(boolean)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fRerunButton</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.isErrorSelected()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.showErrorTrace()</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$7.itemStateChanged(java.awt.event.ItemEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.getRunner()</name>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fRunner</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.isErrorSelected()</name>
                <outbound type="class" confirmed="no">java.awt.List</outbound>
                <outbound type="feature" confirmed="no">java.awt.List.getSelectedIndex()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fFailureList</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.failureSelected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.loadFrameIcon()</name>
                <outbound type="class" confirmed="no">java.awt.Image</outbound>
                <outbound type="class" confirmed="no">java.awt.Toolkit</outbound>
                <outbound type="feature" confirmed="no">java.awt.Toolkit.createImage(java.awt.image.ImageProducer)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Toolkit.getDefaultToolkit()</outbound>
                <outbound type="class" confirmed="no">java.awt.image.ImageProducer</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getResource(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.NoClassDefFoundError.NoClassDefFoundError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getContent()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.class$0</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.main(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.TestRunner()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.start(java.lang.String[])</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.run(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.rerun()</name>
                <outbound type="class" confirmed="no">java.awt.List</outbound>
                <outbound type="feature" confirmed="no">java.awt.List.getSelectedIndex()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elementAt(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fFailedTests</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fFailureList</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$8.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.rerunTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.showInfo(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.showStatus(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.getName()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getLoader()</outbound>
                <outbound type="class" confirmed="yes">junit.runner.TestSuiteLoader</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestSuiteLoader.reload(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerun()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.reset()</name>
                <outbound type="class" confirmed="no">java.awt.Button</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setEnabled(boolean)</outbound>
                <outbound type="class" confirmed="no">java.awt.Label</outbound>
                <outbound type="class" confirmed="no">java.awt.List</outbound>
                <outbound type="feature" confirmed="no">java.awt.List.removeAll()</outbound>
                <outbound type="class" confirmed="no">java.awt.TextArea</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextComponent.setText(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector(int)</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.ProgressBar</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.reset()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fExceptions</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fFailedTests</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fFailureList</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fNumberOfErrors</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fNumberOfFailures</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fNumberOfRuns</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fProgressIndicator</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fRerunButton</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fTraceArea</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.setLabelValue(java.awt.Label, int)</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.run(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.main(java.lang.String[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.runFailed(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.awt.Button</outbound>
                <outbound type="feature" confirmed="no">java.awt.Button.setLabel(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fRun</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.showStatus(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.runSuite()</name>
                <outbound type="class" confirmed="no">java.awt.Button</outbound>
                <outbound type="feature" confirmed="no">java.awt.Button.setLabel(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextComponent.getText()</outbound>
                <outbound type="class" confirmed="no">java.awt.TextField</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.start()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.TestRunner$10(junit.awtui.TestRunner, junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fRun</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fSuiteField</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fTestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.shouldReload()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.showInfo(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.stop()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setLoading(boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$4.actionPerformed(java.awt.event.ActionEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$6.actionPerformed(java.awt.event.ActionEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.setLabelValue(java.awt.Label, int)</name>
                <outbound type="feature" confirmed="no">java.awt.Component.getParent()</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.invalidate()</outbound>
                <outbound type="class" confirmed="no">java.awt.Container</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.validate()</outbound>
                <outbound type="class" confirmed="no">java.awt.Label</outbound>
                <outbound type="feature" confirmed="no">java.awt.Label.setText(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testEnded(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.setSuiteName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.awt.TextField</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextField.setText(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fSuiteField</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.shouldReload()</name>
                <outbound type="class" confirmed="no">java.awt.Checkbox</outbound>
                <outbound type="feature" confirmed="no">java.awt.Checkbox.getState()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fUseLoadingRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.inVAJava()</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.showErrorTrace()</name>
                <outbound type="class" confirmed="no">java.awt.List</outbound>
                <outbound type="feature" confirmed="no">java.awt.List.getSelectedIndex()</outbound>
                <outbound type="class" confirmed="no">java.awt.TextArea</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextComponent.setText(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elementAt(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fExceptions</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fFailureList</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fTraceArea</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.failureSelected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.showInfo(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.awt.Color</outbound>
                <outbound type="feature" confirmed="no">java.awt.Color.black</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setFont(java.awt.Font)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setForeground(java.awt.Color)</outbound>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <outbound type="class" confirmed="no">java.awt.TextField</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextField.setText(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.PLAIN_FONT</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fStatusLine</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.access$1(junit.awtui.TestRunner, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testStarted(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.showStatus(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.awt.Color</outbound>
                <outbound type="feature" confirmed="no">java.awt.Color.red</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setFont(java.awt.Font)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setForeground(java.awt.Color)</outbound>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <outbound type="class" confirmed="no">java.awt.TextField</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextField.setText(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.PLAIN_FONT</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fStatusLine</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.access$2(junit.awtui.TestRunner, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.clearStatus()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runFailed(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.start(java.lang.String[])</name>
                <outbound type="feature" confirmed="no">java.awt.Component.setLocation(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setVisible(boolean)</outbound>
                <outbound type="class" confirmed="no">java.awt.Frame</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fFrame</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.setSuiteName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.static {}</name>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <outbound type="feature" confirmed="no">java.awt.Font.Font(java.lang.String, int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.PLAIN_FONT</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.testEnded(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.awt.Label</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.ProgressBar</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.step(boolean)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fNumberOfRuns</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fProgressIndicator</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fTestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.setLabelValue(java.awt.Label, int)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.runCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.awt.Label</outbound>
                <outbound type="feature" confirmed="no">java.awt.Label.setText(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fNumberOfErrors</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fNumberOfFailures</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fTestResult</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner.testStarted(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.showInfo(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.awtui.TestRunner$1</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$1.TestRunner$1(junit.awtui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createJUnitMenu()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$1.actionPerformed(java.awt.event.ActionEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.access$0(junit.awtui.TestRunner)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$1.TestRunner$1(junit.awtui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$1.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.awtui.TestRunner$10</name>
            <outbound type="class" confirmed="no">java.lang.Thread</outbound>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$10.TestRunner$10(junit.awtui.TestRunner, junit.framework.Test)</name>
                <outbound type="feature" confirmed="no">java.lang.Thread.Thread()</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.val$testSuite</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$10.run()</name>
                <outbound type="class" confirmed="no">java.awt.Button</outbound>
                <outbound type="feature" confirmed="no">java.awt.Button.setLabel(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.gc()</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.ProgressBar</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.ProgressBar.start(int)</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.val$testSuite</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.access$1(junit.awtui.TestRunner, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.access$2(junit.awtui.TestRunner, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.createTestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fProgressIndicator</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fRun</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fTestResult</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.countTestCases()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.shouldStop()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.elapsedTimeAsString(long)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$10.this$0</name>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.TestRunner$10(junit.awtui.TestRunner, junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$10.val$testSuite</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.TestRunner$10(junit.awtui.TestRunner, junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.awtui.TestRunner$2</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$2.TestRunner$2()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createJUnitMenu()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$2.actionPerformed(java.awt.event.ActionEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.exit(int)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.awtui.TestRunner$3</name>
            <outbound type="class" confirmed="no">java.awt.event.WindowAdapter</outbound>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$3.TestRunner$3(java.awt.Frame)</name>
                <outbound type="class" confirmed="no">java.awt.Frame</outbound>
                <outbound type="feature" confirmed="no">java.awt.event.WindowAdapter.WindowAdapter()</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$3.val$finalFrame</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$3.val$finalFrame</name>
                <outbound type="class" confirmed="no">java.awt.Frame</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$3.TestRunner$3(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$3.windowClosing(java.awt.event.WindowEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$3.windowClosing(java.awt.event.WindowEvent)</name>
                <outbound type="class" confirmed="no">java.awt.Frame</outbound>
                <outbound type="feature" confirmed="no">java.awt.Window.dispose()</outbound>
                <outbound type="class" confirmed="no">java.awt.event.WindowEvent</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.exit(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$3.val$finalFrame</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.awtui.TestRunner$4</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$4.TestRunner$4(junit.awtui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$4.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$4.actionPerformed(java.awt.event.ActionEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$4.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$4.this$0</name>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$4.TestRunner$4(junit.awtui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$4.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.awtui.TestRunner$5</name>
            <outbound type="class" confirmed="no">java.awt.event.TextListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$5.TestRunner$5(junit.awtui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$5.textValueChanged(java.awt.event.TextEvent)</name>
                <outbound type="class" confirmed="no">java.awt.Button</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setEnabled(boolean)</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextComponent.getText()</outbound>
                <outbound type="class" confirmed="no">java.awt.TextField</outbound>
                <outbound type="feature" confirmed="no">java.awt.TextField.setText(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.awt.event.TextEvent</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fRun</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fStatusLine</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.fSuiteField</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$5.this$0</name>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.TestRunner$5(junit.awtui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$5.textValueChanged(java.awt.event.TextEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.awtui.TestRunner$6</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$6.TestRunner$6(junit.awtui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$6.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$6.actionPerformed(java.awt.event.ActionEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$6.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$6.this$0</name>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$6.TestRunner$6(junit.awtui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$6.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.awtui.TestRunner$7</name>
            <outbound type="class" confirmed="no">java.awt.event.ItemListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$7.TestRunner$7(junit.awtui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$7.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$7.itemStateChanged(java.awt.event.ItemEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.ItemEvent</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$7.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.failureSelected()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$7.this$0</name>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$7.TestRunner$7(junit.awtui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$7.itemStateChanged(java.awt.event.ItemEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.awtui.TestRunner$8</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$8.TestRunner$8(junit.awtui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$8.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$8.actionPerformed(java.awt.event.ActionEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner$8.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerun()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$8.this$0</name>
                <outbound type="class" confirmed="yes">junit.awtui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$8.TestRunner$8(junit.awtui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$8.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.awtui.TestRunner$9</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$9.TestRunner$9()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.awtui.TestRunner$9.actionPerformed(java.awt.event.ActionEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.exit(int)</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>junit.extensions</name>
        <class confirmed="yes">
            <name>junit.extensions.ActiveTestSuite</name>
            <outbound type="class" confirmed="yes">junit.framework.TestSuite</outbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.this$0</inbound>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.ActiveTestSuite()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.fActiveTestDeathCount</name>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runFinished(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.waitUntilFinished()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.run(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.fActiveTestDeathCount</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.waitUntilFinished()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.runFinished(junit.framework.Test)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.notifyAll()</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.fActiveTestDeathCount</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="no">java.lang.Thread.start()</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite.waitUntilFinished()</name>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.wait()</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.fActiveTestDeathCount</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.testCount()</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.run(junit.framework.TestResult)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.extensions.ActiveTestSuite$1</name>
            <outbound type="class" confirmed="no">java.lang.Thread</outbound>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="no">java.lang.Thread.Thread()</outbound>
                <outbound type="class" confirmed="yes">junit.extensions.ActiveTestSuite</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$result</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite$1.run()</name>
                <outbound type="class" confirmed="yes">junit.extensions.ActiveTestSuite</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$result</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$test</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runFinished(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.extensions.ActiveTestSuite</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite$1.val$result</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ActiveTestSuite$1.val$test</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.extensions.ExceptionTestCase</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <feature confirmed="yes">
                <name>junit.extensions.ExceptionTestCase.ExceptionTestCase(java.lang.String, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.fExpected</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ExceptionTestCase.fExpected</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.ExceptionTestCase(java.lang.String, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.runTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.ExceptionTestCase.runTest()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.fExpected</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.extensions.RepeatedTest</name>
            <outbound type="class" confirmed="yes">junit.extensions.TestDecorator</outbound>
            <feature confirmed="yes">
                <name>junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.fTimesRepeat</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.RepeatedTest.countTestCases()</name>
                <outbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.fTimesRepeat</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.countTestCases()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.RepeatedTest.fTimesRepeat</name>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.RepeatedTest.run(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.fTimesRepeat</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.shouldStop()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.RepeatedTest.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.toString()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.extensions.TestDecorator</name>
            <outbound type="class" confirmed="yes">junit.framework.Assert</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            <inbound type="class" confirmed="yes">junit.extensions.RepeatedTest</inbound>
            <inbound type="class" confirmed="yes">junit.extensions.TestSetup</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isTestSuite(java.lang.Object)</inbound>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.Assert()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.TestSetup(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.countTestCases()</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.countTestCases()</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.countTestCases()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.fTest</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.getTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.getTest()</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isTestSuite(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.run(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestDecorator.toString()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.toString()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.extensions.TestSetup</name>
            <outbound type="class" confirmed="yes">junit.extensions.TestDecorator</outbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.this$0</inbound>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup.TestSetup(junit.framework.Test)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup.run(junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Protectable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup.setUp()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup.tearDown()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.extensions.TestSetup$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Protectable</outbound>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.extensions.TestSetup</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.val$result</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup$1.protect()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.extensions.TestSetup</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.val$result</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup.setUp()</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestSetup.tearDown()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.extensions.TestSetup</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.extensions.TestSetup$1.val$result</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>junit.framework</name>
        <class confirmed="yes">
            <name>junit.framework.Assert</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">junit.extensions.TestDecorator</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestCase</inbound>
            <feature confirmed="yes">
                <name>junit.framework.Assert.Assert()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(boolean, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(byte, byte)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(char, char)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, char, char)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(double, double, double)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(float, float, float)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(int, int)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, int, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</name>
                <outbound type="feature" confirmed="no">java.lang.Boolean.Boolean(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</name>
                <outbound type="feature" confirmed="no">java.lang.Byte.Byte(byte)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(byte, byte)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, char, char)</name>
                <outbound type="feature" confirmed="no">java.lang.Character.Character(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(char, char)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</name>
                <outbound type="feature" confirmed="no">java.lang.Double.Double(double)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.isInfinite(double)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.abs(double)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(double, double, double)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</name>
                <outbound type="feature" confirmed="no">java.lang.Float.Float(float)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Float.isInfinite(float)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Math.abs(float)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(float, float, float)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, int, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.Integer(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, byte, byte)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, char, char)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, long, long)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, short, short)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, long, long)</name>
                <outbound type="feature" confirmed="no">java.lang.Long.Long(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(long, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(java.lang.String, short, short)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Short.Short(short)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(short, short)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(long, long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, long, long)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertEquals(short, short)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, short, short)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertFalse(boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertFalse(java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertFalse(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertFalse(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNotNull(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNull(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertTrue(boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.assertTrue(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertFalse(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.fail()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.fail(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertTrue(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.fail()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.failSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.runTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, double, double, double)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, float, float, float)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Assert.failSame(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.AssertionFailedError</name>
            <outbound type="class" confirmed="no">java.lang.Error</outbound>
            <inbound type="class" confirmed="yes">junit.framework.ComparisonFailure</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.isFailure()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.AssertionFailedError.AssertionFailedError()</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Error.Error(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.ComparisonFailure</name>
            <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.AssertionFailedError.AssertionFailedError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fActual</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fExpected</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.fActual</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.fExpected</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.ComparisonFailure(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.ComparisonFailure.getMessage()</name>
                <outbound type="feature" confirmed="no">java.lang.Math.min(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fActual</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.ComparisonFailure.fExpected</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.Protectable</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">junit.extensions.TestSetup$1</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.run(junit.framework.TestResult)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestResult$1</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.Protectable.protect()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.Test</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.TestRunner$10(junit.awtui.TestRunner, junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.val$testSuite</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerun()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$test</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runFinished(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.RepeatedTest(junit.framework.Test, int)</inbound>
            <inbound type="class" confirmed="yes">junit.extensions.TestDecorator</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.TestDecorator(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.countTestCases()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.fTest</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.getTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.TestSetup(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.run(junit.framework.TestResult)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestCase</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.fFailedTest</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.failedTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestListener.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestSuite</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestSuite(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.aboutToStart(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.getSelectedTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.revealFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.runFinished(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.testSelected()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.aboutToStart(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.getSelectedTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.runFinished(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.testSelected()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunContext.handleTestSelected(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunView.aboutToStart(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunView.getSelectedTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunView.revealFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunView.runFinished(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.TestRunner$1(junit.swingui.TestRunner, int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.val$test</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.TestRunner$16(junit.swingui.TestRunner, junit.framework.Test, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.val$testSuite</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.TestRunner$19(junit.swingui.TestRunner, junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.val$test</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.TestRunner$3(junit.swingui.TestRunner, junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.val$testSuite</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.aboutToStart(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$2(junit.swingui.TestRunner, java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$9(junit.swingui.TestRunner, junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.handleTestSelected(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerun()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.revealFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runFinished(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showFailureDetail(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.start(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.TestSuitePanel$1(junit.swingui.TestSuitePanel, junit.framework.Test, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.val$test</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fireTestChanged(junit.framework.Test, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.getSelectedTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.showTestTree(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.TestTreeModel(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addError(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addRunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fRoot</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.findTest(junit.framework.Test, junit.framework.Test, java.util.Vector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getChild(java.lang.Object, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getIndexOfChild(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getRoot()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isError(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isTestSuite(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.wasRun(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runAndWait(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.Test.countTestCases()</name>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.Test.run(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestCase</name>
            <outbound type="class" confirmed="yes">junit.framework.Assert</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="class" confirmed="yes">junit.extensions.ExceptionTestCase</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestCase)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.val$test</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            <inbound type="class" confirmed="yes">junit.framework.TestSuite$1</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.handleTestSelected(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.TestCase()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.Assert()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.fName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.TestCase(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.Assert()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.fName</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.ExceptionTestCase(java.lang.String, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.TestSuite$1(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.countTestCases()</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.createResult()</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.fName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.getName()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.setName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.getName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.fName</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.toString()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.run()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.createResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.run(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.runBare()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.runTest()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.setUp()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.tearDown()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.protect()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.runTest()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.fillInStackTrace()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isPublic(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.assertNotNull(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.fName</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ExceptionTestCase.runTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runBare()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.setName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.fName</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.setUp()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runBare()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.tearDown()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.runBare()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestCase.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.getName()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestFailure</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.runner.FailureDetailView.showFailure(junit.framework.TestFailure)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.showFailure(junit.framework.TestFailure)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.getSelectedTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showFailureDetail(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefect(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fFailedTest</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fThrownException</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.exceptionMessage()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.thrownException()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.fFailedTest</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.failedTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.fThrownException</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.thrownException()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.failedTest()</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fFailedTest</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.getSelectedTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showFailureDetail(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.isFailure()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.thrownException()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.thrownException()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fThrownException</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.exceptionMessage()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.isFailure()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fFailedTest</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.fThrownException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestFailure.trace()</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.getBuffer()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.printStackTrace(java.io.PrintWriter)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.thrownException()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.showFailure(junit.framework.TestFailure)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestListener</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.removeListener(junit.framework.TestListener)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            <inbound type="class" confirmed="yes">junit.runner.BaseTestRunner</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.aboutToStart(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.runFinished(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestSuitePanel</inbound>
            <inbound type="class" confirmed="yes">junit.textui.ResultPrinter</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.TestListener.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestListener.endTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestListener.startTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestResult</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createTestResult()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.fTestResult</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testEnded(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.ActiveTestSuite$1(junit.extensions.ActiveTestSuite, junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite$1.val$result</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.basicRun(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestDecorator.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.TestSetup$1(junit.extensions.TestSetup, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.protect()</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup$1.val$result</inbound>
            <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.createResult()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestCase.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.aboutToStart(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.runFinished(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.aboutToStart(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.runFinished(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunView.aboutToStart(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunView.runFinished(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.aboutToStart(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$1(junit.swingui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestResult()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestResult</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.createTestResult()</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runAndWait(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.TestResult()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fErrors</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fFailures</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fListeners</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fRunTests</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fStop</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createTestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.createResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.createTestResult()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.addElement(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elements()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestListener.addError(junit.framework.Test, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fErrors</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.addElement(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elements()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestListener.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fFailures</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.addListener(junit.framework.TestListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.addElement(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fListeners</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.aboutToStart(junit.framework.Test, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.cloneListeners()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.clone()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fListeners</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.endTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elements()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestListener.endTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.errorCount()</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fErrors</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.errors()</name>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elements()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fErrors</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.fErrors</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.fFailures</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.fListeners</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.removeListener(junit.framework.TestListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.fRunTests</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.runCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.fStop</name>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.shouldStop()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.stop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.failureCount()</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fFailures</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.failures()</name>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elements()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fFailures</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.removeListener(junit.framework.TestListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.removeElement(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fListeners</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.runFinished(junit.framework.Test, junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.run(junit.framework.TestCase)</name>
                <outbound type="class" confirmed="yes">junit.framework.Protectable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestCase)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.endTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.startTest(junit.framework.Test)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestCase.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.runCount()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fRunTests</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testEnded(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable)</name>
                <outbound type="class" confirmed="no">java.lang.ThreadDeath</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Protectable</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Protectable.protect()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addError(junit.framework.Test, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.TestSetup.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.shouldStop()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fStop</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.extensions.RepeatedTest.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.startTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elements()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.countTestCases()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestListener.startTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.cloneListeners()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fRunTests</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.stop()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.fStop</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult.wasSuccessful()</name>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.testEnded(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestResult$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Protectable</outbound>
            <feature confirmed="yes">
                <name>junit.framework.TestResult$1.TestResult$1(junit.framework.TestCase)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult$1.val$test</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult.run(junit.framework.TestCase)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult$1.protect()</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.runBare()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult$1.val$test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestResult$1.val$test</name>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.TestResult$1(junit.framework.TestCase)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestResult$1.protect()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestSuite</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            <inbound type="class" confirmed="yes">junit.extensions.ActiveTestSuite</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.findTest(junit.framework.Test, junit.framework.Test, java.util.Vector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getChild(java.lang.Object, int)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getChildCount(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getIndexOfChild(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isLeaf(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isTestSuite(java.lang.Object)</inbound>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.TestSuite()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.TestSuite(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getDeclaredMethods()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSuperclass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="feature" confirmed="no">java.lang.NoClassDefFoundError.NoClassDefFoundError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isPublic(int)</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector()</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.class$0</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fName</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.setName(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.TestSuite(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.setName(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.ActiveTestSuite(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.addTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.addElement(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestSuite(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.addElement(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.addTestSuite(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.class$0</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.class$1</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.countTestCases()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.countTestCases()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.tests()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.InstantiationException</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.getParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.setName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.exceptionToString(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.toString()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.printStackTrace(java.io.PrintWriter)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.fName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.getName()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.setName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.fTests</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.testCount()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.tests()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.getName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fName</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.getTestConstructor(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getConstructor(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="feature" confirmed="no">java.lang.NoClassDefFoundError.NoClassDefFoundError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.class$1</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.hasPublicConstructor(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isPublic(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.run(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.shouldStop()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.tests()</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.setName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fName</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.testAt(int)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elementAt(int)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.findTest(junit.framework.Test, junit.framework.Test, java.util.Vector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getChild(java.lang.Object, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.testCount()</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <inbound type="feature" confirmed="yes">junit.extensions.ActiveTestSuite.waitUntilFinished()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getChildCount(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.tests()</name>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elements()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.fTests</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.countTestCases()</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.run(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getIndexOfChild(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.toString()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.getName()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite.warning(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite$1.TestSuite$1(java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.framework.TestSuite$1</name>
            <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite$1.TestSuite$1(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.TestCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite$1.val$message</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite.warning(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite$1.runTest()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Assert.fail(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite$1.val$message</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.framework.TestSuite$1.val$message</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.TestSuite$1(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.framework.TestSuite$1.runTest()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>junit.runner</name>
        <class confirmed="yes">
            <name>junit.runner.BaseTestRunner</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
            <inbound type="class" confirmed="yes">junit.awtui.TestRunner</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner</inbound>
            <inbound type="class" confirmed="yes">junit.textui.TestRunner</inbound>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.BaseTestRunner()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fLoading</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.TestRunner()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.TestRunner()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.SUITE_METHODNAME</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.clearStatus()</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.elapsedTimeAsString(long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.text.NumberFormat</outbound>
                <outbound type="feature" confirmed="no">java.text.NumberFormat.format(double)</outbound>
                <outbound type="feature" confirmed="no">java.text.NumberFormat.getInstance()</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner$10.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.endTest(junit.framework.Test)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testEnded(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.extractClassName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.fLoading</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.BaseTestRunner()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setLoading(boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.fPreferences</name>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreferences(java.util.Properties)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.fgFilterStack</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.fgMaxMessageLength</name>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.static {}</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.filterLine(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.io.BufferedReader.BufferedReader(java.io.Reader)</outbound>
                <outbound type="feature" confirmed="no">java.io.BufferedReader.readLine()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="feature" confirmed="no">java.io.StringReader.StringReader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.toString()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.filterLine(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.showFailure(junit.framework.TestFailure)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getFilteredTrace(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.getBuffer()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.printStackTrace(java.io.PrintWriter)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.showErrorTrace()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getLoader()</name>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.ReloadingTestSuiteLoader()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.StandardTestSuiteLoader.StandardTestSuiteLoader()</outbound>
                <outbound type="class" confirmed="yes">junit.runner.TestSuiteLoader</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getPreference(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.getProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.showStackRaw()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailureDetailView()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestCollector()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.parseInt(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.static {}</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.pruneHistory()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getPreferences()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Hashtable.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.Properties()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fPreferences</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getPreferencesFile()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.savePreferences()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.getTest(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isStatic(int)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.clearStatus()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.runFailed(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.inVAJava()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.shouldReload()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUseLoaderCheckBox()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.shouldReload()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getLoader()</outbound>
                <outbound type="class" confirmed="yes">junit.runner.TestSuiteLoader</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestSuiteLoader.load(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.processArguments(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.extractClassName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fgFilterStack</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setLoading(boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.readPreferences()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileInputStream.FileInputStream(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.Properties(java.util.Properties)</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.load(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setPreferences(java.util.Properties)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.runFailed(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.savePreferences()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileOutputStream.FileOutputStream(java.io.File)</outbound>
                <outbound type="feature" confirmed="no">java.io.FileOutputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.store(java.io.OutputStream, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferencesFile()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.setLoading(boolean)</name>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fLoading</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.runSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.setPreference(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.setProperty(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreferences()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.setPreferences(java.util.Properties)</name>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fPreferences</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.readPreferences()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.showStackRaw()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fgFilterStack</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.startTest(junit.framework.Test)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.testStarted(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.static {}</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fgFilterStack</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fgMaxMessageLength</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.testEnded(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.endTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.testStarted(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.truncate(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fgMaxMessageLength</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.fLoading</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.inVAJava()</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getLoader()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUseLoaderCheckBox()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.ClassPathTestCollector</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.runner.TestCollector</outbound>
            <inbound type="class" confirmed="yes">junit.runner.LoadingTestCollector</inbound>
            <inbound type="class" confirmed="yes">junit.runner.SimpleTestCollector</inbound>
            <feature confirmed="yes">
                <name>junit.runner.ClassPathTestCollector.ClassPathTestCollector()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.LoadingTestCollector()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.SimpleTestCollector.SimpleTestCollector()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.ClassPathTestCollector.SUFFIX_LENGTH</name>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.classNameFromFile(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.ClassPathTestCollector.classNameFromFile(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.io.File.separatorChar</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(char, char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.SUFFIX_LENGTH</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.classFromFile(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.ClassPathTestCollector.collectFilesInPath(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Hashtable</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInRoots(java.util.Vector)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.splitClassPath(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectTests()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.ClassPathTestCollector.collectFilesInRoots(java.util.Vector)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="no">java.util.Hashtable</outbound>
                <outbound type="feature" confirmed="no">java.util.Hashtable.Hashtable(int)</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elements()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInPath(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.ClassPathTestCollector.collectTests()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.Hashtable</outbound>
                <outbound type="feature" confirmed="no">java.util.Hashtable.elements()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInPath(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isFile()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.list()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.separatorChar</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Hashtable</outbound>
                <outbound type="feature" confirmed="no">java.util.Hashtable.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.classNameFromFile(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.isTestClass(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInRoots(java.util.Vector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.ClassPathTestCollector.isTestClass(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.gatherFiles(java.io.File, java.lang.String, java.util.Hashtable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.ClassPathTestCollector.splitClassPath(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.StringTokenizer.StringTokenizer(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.StringTokenizer.hasMoreTokens()</outbound>
                <outbound type="feature" confirmed="no">java.util.StringTokenizer.nextToken()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector()</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.addElement(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.collectFilesInPath(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.ClassPathTestCollector.static {}</name>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.SUFFIX_LENGTH</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.FailureDetailView</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">junit.swingui.DefaultFailureDetailView</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailureDetailView()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.fFailureView</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showFailureDetail(junit.framework.Test)</inbound>
            <feature confirmed="yes">
                <name>junit.runner.FailureDetailView.clear()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showFailureDetail(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.FailureDetailView.getComponent()</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.FailureDetailView.showFailure(junit.framework.TestFailure)</name>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showFailureDetail(junit.framework.Test)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.LoadingTestCollector</name>
            <outbound type="class" confirmed="yes">junit.runner.ClassPathTestCollector</outbound>
            <feature confirmed="yes">
                <name>junit.runner.LoadingTestCollector.LoadingTestCollector()</name>
                <outbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.ClassPathTestCollector()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.fLoader</outbound>
                <outbound type="class" confirmed="yes">junit.runner.TestCaseClassLoader</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.TestCaseClassLoader()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.LoadingTestCollector.class$0</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.LoadingTestCollector.classFromFile(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.classNameFromFile(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.fLoader</outbound>
                <outbound type="class" confirmed="yes">junit.runner.TestCaseClassLoader</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.isExcluded(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadClass(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.LoadingTestCollector.fLoader</name>
                <outbound type="class" confirmed="yes">junit.runner.TestCaseClassLoader</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.LoadingTestCollector()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.classFromFile(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.LoadingTestCollector.hasPublicConstructor(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.getTestConstructor(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.LoadingTestCollector.hasSuiteMethod(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.LoadingTestCollector.isTestClass(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="feature" confirmed="no">java.lang.NoClassDefFoundError.NoClassDefFoundError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Modifier.isPublic(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.class$0</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.hasPublicConstructor(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.hasSuiteMethod(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.LoadingTestCollector.isTestClass(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.NoClassDefFoundError</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.classFromFile(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.isTestClass(java.lang.Class)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.ReloadingTestSuiteLoader</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.runner.TestSuiteLoader</outbound>
            <feature confirmed="yes">
                <name>junit.runner.ReloadingTestSuiteLoader.ReloadingTestSuiteLoader()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.ReloadingTestSuiteLoader.createLoader()</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)</outbound>
                <outbound type="class" confirmed="yes">junit.runner.TestCaseClassLoader</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.TestCaseClassLoader()</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.load(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.reload(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.ReloadingTestSuiteLoader.load(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.createLoader()</outbound>
                <outbound type="class" confirmed="yes">junit.runner.TestCaseClassLoader</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadClass(java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.ReloadingTestSuiteLoader.reload(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.createLoader()</outbound>
                <outbound type="class" confirmed="yes">junit.runner.TestCaseClassLoader</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadClass(java.lang.String, boolean)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.SimpleTestCollector</name>
            <outbound type="class" confirmed="yes">junit.runner.ClassPathTestCollector</outbound>
            <feature confirmed="yes">
                <name>junit.runner.SimpleTestCollector.SimpleTestCollector()</name>
                <outbound type="feature" confirmed="yes">junit.runner.ClassPathTestCollector.ClassPathTestCollector()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestCollector()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.SimpleTestCollector.isTestClass(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.Sorter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.runner.Sorter.Sorter()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.Sorter.sortStrings(java.util.Vector, int, int, junit.runner.Sorter$Swapper)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.compareTo(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elementAt(int)</outbound>
                <outbound type="class" confirmed="yes">junit.runner.Sorter$Swapper</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.Sorter$Swapper.swap(java.util.Vector, int, int)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.Sorter$Swapper</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.runner.Sorter.sortStrings(java.util.Vector, int, int, junit.runner.Sorter$Swapper)</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</inbound>
            <feature confirmed="yes">
                <name>junit.runner.Sorter$Swapper.swap(java.util.Vector, int, int)</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.Sorter.sortStrings(java.util.Vector, int, int, junit.runner.Sorter$Swapper)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.StandardTestSuiteLoader</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.runner.TestSuiteLoader</outbound>
            <feature confirmed="yes">
                <name>junit.runner.StandardTestSuiteLoader.StandardTestSuiteLoader()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getLoader()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.getLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.StandardTestSuiteLoader.load(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.StandardTestSuiteLoader.reload(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.TestCaseClassLoader</name>
            <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.LoadingTestCollector()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.classFromFile(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.fLoader</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.createLoader()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.load(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.reload(java.lang.Class)</inbound>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.EXCLUDED_FILE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.TestCaseClassLoader()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.TestCaseClassLoader(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.LoadingTestCollector()</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.createLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.TestCaseClassLoader(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.ClassLoader()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.defaultExclusions</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.scanPath(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.TestCaseClassLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.defaultExclusions</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.TestCaseClassLoader(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.fExcluded</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.isExcluded(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.readExcludedPackages()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.fPathItems</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.scanPath(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.getClassData(java.io.File)</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream(int)</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.toByteArray()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.write(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileInputStream.FileInputStream(java.io.File)</outbound>
                <outbound type="feature" confirmed="no">java.io.FileInputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.FileInputStream.read(byte[])</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadFileData(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.getResource(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.getSystemResource(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.getResourceAsStream(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.getSystemResourceAsStream(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.isExcluded(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elementAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.fExcluded</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.classFromFile(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadClass(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.isJar(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.loadClass(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.defineClass(java.lang.String, byte[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.findLoadedClass(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.findSystemClass(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.resolveClass(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassNotFoundException.ClassNotFoundException()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.isExcluded(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.LoadingTestCollector.classFromFile(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.load(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.runner.ReloadingTestSuiteLoader.reload(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.loadFileData(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.getClassData(java.io.File)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.loadJarData(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read(byte[], int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.zip.ZipEntry</outbound>
                <outbound type="feature" confirmed="no">java.util.zip.ZipEntry.getSize()</outbound>
                <outbound type="feature" confirmed="no">java.util.zip.ZipFile.ZipFile(java.io.File)</outbound>
                <outbound type="feature" confirmed="no">java.util.zip.ZipFile.close()</outbound>
                <outbound type="feature" confirmed="no">java.util.zip.ZipFile.getEntry(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.zip.ZipFile.getInputStream(java.util.zip.ZipEntry)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.lookupClassData(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassNotFoundException.ClassNotFoundException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(char, char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elementAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.fPathItems</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.isJar(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadFileData(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadJarData(java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.loadClass(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.readExcludedPackages()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getResourceAsStream(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.Properties()</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.getProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.load(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.propertyNames()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.addElement(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.defaultExclusions</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.fExcluded</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.TestCaseClassLoader(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestCaseClassLoader.scanPath(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.StringTokenizer.StringTokenizer(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.StringTokenizer.hasMoreTokens()</outbound>
                <outbound type="feature" confirmed="no">java.util.StringTokenizer.nextToken()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.addElement(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.fPathItems</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.TestCaseClassLoader.TestCaseClassLoader(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.TestCollector</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">junit.runner.ClassPathTestCollector</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.browseTestClasses()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestCollector()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</inbound>
            <feature confirmed="yes">
                <name>junit.runner.TestCollector.collectTests()</name>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.TestRunListener</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.STATUS_ERROR</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.STATUS_FAILURE</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testEnded(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testFailed(int, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testRunEnded(long)</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testRunStarted(java.lang.String, int)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testRunStopped(long)</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestRunListener.testStarted(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.TestSuiteLoader</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getLoader()</inbound>
            <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">junit.runner.ReloadingTestSuiteLoader</inbound>
            <inbound type="class" confirmed="yes">junit.runner.StandardTestSuiteLoader</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.getLoader()</inbound>
            <feature confirmed="yes">
                <name>junit.runner.TestSuiteLoader.load(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.loadSuiteClass(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.TestSuiteLoader.reload(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.runner.Version</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.runner.Version.Version()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.runner.Version.id()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.awtui.AboutDialog.AboutDialog(java.awt.Frame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>junit.swingui</name>
        <class confirmed="yes">
            <name>junit.swingui.AboutDialog</name>
            <outbound type="class" confirmed="no">javax.swing.JDialog</outbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog$1.AboutDialog$1(junit.swingui.AboutDialog)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog$1.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog$2.AboutDialog$2(junit.swingui.AboutDialog)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog$2.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog$2.windowClosing(java.awt.event.WindowEvent)</inbound>
            <feature confirmed="yes">
                <name>junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setSize(int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.Container</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.add(java.awt.Component, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.setLayout(java.awt.LayoutManager)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Dialog.setResizable(boolean)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Dialog.setTitle(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <outbound type="feature" confirmed="no">java.awt.Font.Font(java.lang.String, int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.Frame</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.GridBagConstraints()</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.anchor</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridheight</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridwidth</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridx</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridy</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.insets</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagLayout.GridBagLayout()</outbound>
                <outbound type="class" confirmed="no">java.awt.Insets</outbound>
                <outbound type="feature" confirmed="no">java.awt.Insets.Insets(int, int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.LayoutManager</outbound>
                <outbound type="feature" confirmed="no">java.awt.Window.addWindowListener(java.awt.event.WindowListener)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Window.setLocationRelativeTo(java.awt.Component)</outbound>
                <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
                <outbound type="class" confirmed="no">java.awt.event.WindowListener</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.addActionListener(java.awt.event.ActionListener)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JButton.JButton(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setFont(java.awt.Font)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JDialog.JDialog(java.awt.Frame, boolean)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JDialog.getContentPane()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JDialog.getRootPane()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JFrame</outbound>
                <outbound type="class" confirmed="no">javax.swing.JLabel</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JLabel.JLabel(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JRootPane</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JRootPane.setDefaultButton(javax.swing.JButton)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.Version.id()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.AboutDialog$1.AboutDialog$1(junit.swingui.AboutDialog)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.AboutDialog$2.AboutDialog$2(junit.swingui.AboutDialog)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.AboutDialog.createLogo()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.about()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.AboutDialog.class$0</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.createLogo()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.AboutDialog.createLogo()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="feature" confirmed="no">java.lang.NoClassDefFoundError.NoClassDefFoundError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <outbound type="class" confirmed="no">javax.swing.JLabel</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JLabel.JLabel(javax.swing.Icon)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.AboutDialog.class$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.AboutDialog$1</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.AboutDialog$1.AboutDialog$1(junit.swingui.AboutDialog)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.AboutDialog</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.AboutDialog$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.AboutDialog$1.actionPerformed(java.awt.event.ActionEvent)</name>
                <outbound type="feature" confirmed="no">java.awt.Dialog.dispose()</outbound>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.AboutDialog</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.AboutDialog$1.this$0</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.AboutDialog$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.AboutDialog</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog$1.AboutDialog$1(junit.swingui.AboutDialog)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog$1.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.AboutDialog$2</name>
            <outbound type="class" confirmed="no">java.awt.event.WindowAdapter</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.AboutDialog$2.AboutDialog$2(junit.swingui.AboutDialog)</name>
                <outbound type="feature" confirmed="no">java.awt.event.WindowAdapter.WindowAdapter()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.AboutDialog</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.AboutDialog$2.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.AboutDialog$2.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.AboutDialog</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog$2.AboutDialog$2(junit.swingui.AboutDialog)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog$2.windowClosing(java.awt.event.WindowEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.AboutDialog$2.windowClosing(java.awt.event.WindowEvent)</name>
                <outbound type="feature" confirmed="no">java.awt.Dialog.dispose()</outbound>
                <outbound type="class" confirmed="no">java.awt.event.WindowEvent</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.AboutDialog</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.AboutDialog$2.this$0</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.CounterPanel</name>
            <outbound type="class" confirmed="no">javax.swing.JPanel</outbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$0(junit.swingui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createCounterPanel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.fCounterPanel</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</inbound>
            <feature confirmed="yes">
                <name>junit.swingui.CounterPanel.CounterPanel()</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagLayout.GridBagLayout()</outbound>
                <outbound type="class" confirmed="no">java.awt.Insets</outbound>
                <outbound type="feature" confirmed="no">java.awt.Insets.Insets(int, int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.LayoutManager</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JLabel.JLabel(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JLabel.JLabel(java.lang.String, javax.swing.Icon, int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JPanel.JPanel(java.awt.LayoutManager)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTextField</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.addToGrid(java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.createOutputField(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fErrorIcon</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fFailureIcon</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fNumberOfErrors</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fNumberOfFailures</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fNumberOfRuns</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createCounterPanel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.CounterPanel.addToGrid(java.awt.Component, int, int, int, int, double, double, int, int, java.awt.Insets)</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.add(java.awt.Component, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.GridBagConstraints()</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.anchor</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.fill</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridheight</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridwidth</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridx</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridy</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.insets</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.weightx</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.weighty</outbound>
                <outbound type="class" confirmed="no">java.awt.Insets</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.CounterPanel.asString(int)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.toString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.CounterPanel.createOutputField(int)</name>
                <outbound type="class" confirmed="no">java.awt.Dimension</outbound>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.BorderFactory.createEmptyBorder()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setBorder(javax.swing.border.Border)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setMaximumSize(java.awt.Dimension)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setMinimumSize(java.awt.Dimension)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTextField</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTextField.JTextField(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTextField.getPreferredSize()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTextField.setFont(java.awt.Font)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTextField.setHorizontalAlignment(int)</outbound>
                <outbound type="class" confirmed="no">javax.swing.border.Border</outbound>
                <outbound type="feature" confirmed="no">javax.swing.text.JTextComponent.setEditable(boolean)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.StatusLine.BOLD_FONT</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.CounterPanel.fErrorIcon</name>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.CounterPanel.fFailureIcon</name>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.CounterPanel.fNumberOfErrors</name>
                <outbound type="class" confirmed="no">javax.swing.JTextField</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setErrorValue(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.CounterPanel.fNumberOfFailures</name>
                <outbound type="class" confirmed="no">javax.swing.JTextField</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setFailureValue(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.CounterPanel.fNumberOfRuns</name>
                <outbound type="class" confirmed="no">javax.swing.JTextField</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setRunValue(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.CounterPanel.fTotal</name>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setRunValue(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setTotal(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.CounterPanel.reset()</name>
                <outbound type="class" confirmed="no">javax.swing.JTextField</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fNumberOfErrors</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fNumberOfFailures</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fNumberOfRuns</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fTotal</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setLabelValue(javax.swing.JTextField, int)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.CounterPanel.setErrorValue(int)</name>
                <outbound type="class" confirmed="no">javax.swing.JTextField</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fNumberOfErrors</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setLabelValue(javax.swing.JTextField, int)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.CounterPanel.setFailureValue(int)</name>
                <outbound type="class" confirmed="no">javax.swing.JTextField</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fNumberOfFailures</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setLabelValue(javax.swing.JTextField, int)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.CounterPanel.setLabelValue(javax.swing.JTextField, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.toString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTextField</outbound>
                <outbound type="feature" confirmed="no">javax.swing.text.JTextComponent.setText(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setErrorValue(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setFailureValue(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.CounterPanel.setRunValue(int)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.toString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTextField</outbound>
                <outbound type="feature" confirmed="no">javax.swing.text.JTextComponent.setText(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fNumberOfRuns</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fTotal</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.CounterPanel.setTotal(int)</name>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.fTotal</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.DefaultFailureDetailView</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.runner.FailureDetailView</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.DefaultFailureDetailView.DefaultFailureDetailView()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailureDetailView()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.DefaultFailureDetailView.clear()</name>
                <outbound type="class" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.clear()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getModel()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.DefaultFailureDetailView.fList</name>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getComponent()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getModel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.DefaultFailureDetailView.getComponent()</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <outbound type="feature" confirmed="no">java.awt.Font.Font(java.lang.String, int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setFont(java.awt.Font)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.JList(javax.swing.ListModel)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.setCellRenderer(javax.swing.ListCellRenderer)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.setSelectionMode(int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.setVisibleRowCount(int)</outbound>
                <outbound type="class" confirmed="no">javax.swing.ListCellRenderer</outbound>
                <outbound type="class" confirmed="no">javax.swing.ListModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackEntryRenderer.DefaultFailureDetailView$StackEntryRenderer()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.DefaultFailureDetailView$StackTraceListModel()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.fList</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.DefaultFailureDetailView.getModel()</name>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.getModel()</outbound>
                <outbound type="class" confirmed="no">javax.swing.ListModel</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.fList</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.clear()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.showFailure(junit.framework.TestFailure)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.DefaultFailureDetailView.showFailure(junit.framework.TestFailure)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.setTrace(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getModel()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.DefaultFailureDetailView$StackEntryRenderer</name>
            <outbound type="class" confirmed="no">javax.swing.DefaultListCellRenderer</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.DefaultFailureDetailView$StackEntryRenderer.DefaultFailureDetailView$StackEntryRenderer()</name>
                <outbound type="feature" confirmed="no">javax.swing.DefaultListCellRenderer.DefaultListCellRenderer()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getComponent()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.DefaultFailureDetailView$StackEntryRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(char, char)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.DefaultListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setToolTipText(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JLabel.setText(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.DefaultFailureDetailView$StackTraceListModel</name>
            <outbound type="class" confirmed="no">javax.swing.AbstractListModel</outbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.clear()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getModel()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.showFailure(junit.framework.TestFailure)</inbound>
            <feature confirmed="yes">
                <name>junit.swingui.DefaultFailureDetailView$StackTraceListModel.DefaultFailureDetailView$StackTraceListModel()</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector(int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractListModel.AbstractListModel()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.fLines</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.getComponent()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.DefaultFailureDetailView$StackTraceListModel.clear()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.removeAllElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractListModel.fireContentsChanged(java.lang.Object, int, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.fLines</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.clear()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.DefaultFailureDetailView$StackTraceListModel.fLines</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.DefaultFailureDetailView$StackTraceListModel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.clear()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.getElementAt(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.getSize()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.scan(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.setTrace(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.DefaultFailureDetailView$StackTraceListModel.getElementAt(int)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elementAt(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.fLines</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.DefaultFailureDetailView$StackTraceListModel.getSize()</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.fLines</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.DefaultFailureDetailView$StackTraceListModel.scan(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.StringTokenizer.StringTokenizer(java.lang.String, java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="no">java.util.StringTokenizer.hasMoreTokens()</outbound>
                <outbound type="feature" confirmed="no">java.util.StringTokenizer.nextToken()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.removeAllElements()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.fLines</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.setTrace(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.DefaultFailureDetailView$StackTraceListModel.setTrace(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractListModel.fireContentsChanged(java.lang.Object, int, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.fLines</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView$StackTraceListModel.scan(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.showFailure(junit.framework.TestFailure)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.FailureRunView</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.swingui.TestRunView</outbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$1.FailureRunView$1(junit.swingui.FailureRunView)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$1.valueChanged(javax.swing.event.ListSelectionEvent)</inbound>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</name>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <outbound type="feature" confirmed="no">java.awt.Font.Font(java.lang.String, int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setFont(java.awt.Font)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.JList(javax.swing.ListModel)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.addListSelectionListener(javax.swing.event.ListSelectionListener)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.setCellRenderer(javax.swing.ListCellRenderer)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.setSelectionMode(int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.setVisibleRowCount(int)</outbound>
                <outbound type="class" confirmed="no">javax.swing.ListCellRenderer</outbound>
                <outbound type="class" confirmed="no">javax.swing.ListModel</outbound>
                <outbound type="class" confirmed="no">javax.swing.event.ListSelectionListener</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView$1.FailureRunView$1(junit.swingui.FailureRunView)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.FailureRunView$FailureListCellRenderer()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView.fFailureList</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView.fRunContext</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunContext</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunContext.getFailures()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestRunViews()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView.aboutToStart(junit.framework.Test, junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView.activate()</name>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView.testSelected()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView.addTab(javax.swing.JTabbedPane)</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JScrollPane.JScrollPane(java.awt.Component, int, int)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTabbedPane</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTabbedPane.addTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView.fFailureList</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestRunViews()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView.fFailureList</name>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.addTab(javax.swing.JTabbedPane)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.getSelectedTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.revealFailure(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView.fRunContext</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunContext</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.testSelected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView.getSelectedTest()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.getModel()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.getSelectedIndex()</outbound>
                <outbound type="class" confirmed="no">javax.swing.ListModel</outbound>
                <outbound type="feature" confirmed="no">javax.swing.ListModel.getElementAt(int)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.failedTest()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView.fFailureList</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.testSelected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView.revealFailure(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.setSelectedIndex(int)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView.fFailureList</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView.runFinished(junit.framework.Test, junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView.testSelected()</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView.fRunContext</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView.getSelectedTest()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunContext</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunContext.handleTestSelected(junit.framework.Test)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$1.valueChanged(javax.swing.event.ListSelectionEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.activate()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.FailureRunView$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.swing.event.ListSelectionListener</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView$1.FailureRunView$1(junit.swingui.FailureRunView)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.FailureRunView</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.FailureRunView</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$1.FailureRunView$1(junit.swingui.FailureRunView)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$1.valueChanged(javax.swing.event.ListSelectionEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView$1.valueChanged(javax.swing.event.ListSelectionEvent)</name>
                <outbound type="class" confirmed="no">javax.swing.event.ListSelectionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.FailureRunView</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView.testSelected()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.FailureRunView$FailureListCellRenderer</name>
            <outbound type="class" confirmed="no">javax.swing.DefaultListCellRenderer</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView$FailureListCellRenderer.FailureRunView$FailureListCellRenderer()</name>
                <outbound type="feature" confirmed="no">javax.swing.DefaultListCellRenderer.DefaultListCellRenderer()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.loadIcons()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView$FailureListCellRenderer.fErrorIcon</name>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.loadIcons()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView$FailureListCellRenderer.fFailureIcon</name>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.loadIcons()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView$FailureListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.DefaultListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</outbound>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setToolTipText(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JLabel.setIcon(javax.swing.Icon)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JLabel.setText(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.exceptionMessage()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.failedTest()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.isFailure()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.truncate(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.fErrorIcon</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.fFailureIcon</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.FailureRunView$FailureListCellRenderer.loadIcons()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.fErrorIcon</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.fFailureIcon</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.FailureRunView$FailureListCellRenderer()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.ProgressBar</name>
            <outbound type="class" confirmed="no">javax.swing.JProgressBar</outbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$3(junit.swingui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.fProgressIndicator</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</inbound>
            <feature confirmed="yes">
                <name>junit.swingui.ProgressBar.ProgressBar()</name>
                <outbound type="class" confirmed="no">java.awt.Color</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setForeground(java.awt.Color)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JProgressBar.JProgressBar()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.ProgressBar.fError</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.ProgressBar.getStatusColor()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.ProgressBar.fError</name>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.ProgressBar()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.getStatusColor()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.step(int, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.ProgressBar.getStatusColor()</name>
                <outbound type="class" confirmed="no">java.awt.Color</outbound>
                <outbound type="feature" confirmed="no">java.awt.Color.green</outbound>
                <outbound type="feature" confirmed="no">java.awt.Color.red</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.ProgressBar.fError</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.ProgressBar()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.step(int, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.ProgressBar.reset()</name>
                <outbound type="class" confirmed="no">java.awt.Color</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setForeground(java.awt.Color)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JProgressBar.setValue(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.ProgressBar.fError</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.ProgressBar.getStatusColor()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.ProgressBar.start(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.ProgressBar.start(int)</name>
                <outbound type="feature" confirmed="no">javax.swing.JProgressBar.setMaximum(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.ProgressBar.reset()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.ProgressBar.step(int, boolean)</name>
                <outbound type="class" confirmed="no">java.awt.Color</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setForeground(java.awt.Color)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JProgressBar.setValue(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.ProgressBar.fError</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.ProgressBar.getStatusColor()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.StatusLine</name>
            <outbound type="class" confirmed="no">javax.swing.JTextField</outbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.clearStatus()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createStatusLine()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.fStatusLine</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showInfo(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showStatus(java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>junit.swingui.StatusLine.BOLD_FONT</name>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.createOutputField(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.StatusLine(int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showError(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.static {}</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.StatusLine.PLAIN_FONT</name>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.showInfo(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.StatusLine.static {}</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.StatusLine.StatusLine(int)</name>
                <outbound type="class" confirmed="no">java.awt.Dimension</outbound>
                <outbound type="feature" confirmed="no">java.awt.Dimension.width</outbound>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <outbound type="feature" confirmed="no">javax.swing.BorderFactory.createBevelBorder(int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setBorder(javax.swing.border.Border)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setPreferredSize(java.awt.Dimension)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTextField.JTextField()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTextField.getPreferredSize()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTextField.setFont(java.awt.Font)</outbound>
                <outbound type="class" confirmed="no">javax.swing.border.Border</outbound>
                <outbound type="feature" confirmed="no">javax.swing.text.JTextComponent.setEditable(boolean)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.StatusLine.BOLD_FONT</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createStatusLine()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.StatusLine.clear()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setToolTipText(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.text.JTextComponent.setText(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.clearStatus()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.StatusLine.showError(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.awt.Color</outbound>
                <outbound type="feature" confirmed="no">java.awt.Color.red</outbound>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setForeground(java.awt.Color)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setToolTipText(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTextField.setFont(java.awt.Font)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.text.JTextComponent.setText(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.StatusLine.BOLD_FONT</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showStatus(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.StatusLine.showInfo(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.awt.Color</outbound>
                <outbound type="feature" confirmed="no">java.awt.Color.black</outbound>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setForeground(java.awt.Color)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTextField.setFont(java.awt.Font)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.text.JTextComponent.setText(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.StatusLine.PLAIN_FONT</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showInfo(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.StatusLine.static {}</name>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <outbound type="feature" confirmed="no">java.awt.Font.Font(java.lang.String, int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.StatusLine.BOLD_FONT</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.StatusLine.PLAIN_FONT</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestHierarchyRunView</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.swingui.TestRunView</outbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView$1.TestHierarchyRunView$1(junit.swingui.TestHierarchyRunView)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView$1.valueChanged(javax.swing.event.TreeSelectionEvent)</inbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestHierarchyRunView.TestHierarchyRunView(junit.swingui.TestRunContext)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTree</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTree.addTreeSelectionListener(javax.swing.event.TreeSelectionListener)</outbound>
                <outbound type="class" confirmed="no">javax.swing.event.TreeSelectionListener</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView$1.TestHierarchyRunView$1(junit.swingui.TestHierarchyRunView)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.fTestContext</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.fTreeBrowser</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunContext</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSuitePanel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.getTree()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestRunViews()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestHierarchyRunView.aboutToStart(junit.framework.Test, junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.fTreeBrowser</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSuitePanel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.showTestTree(junit.framework.Test)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestHierarchyRunView.activate()</name>
                <outbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.testSelected()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestHierarchyRunView.addTab(javax.swing.JTabbedPane)</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTabbedPane</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTabbedPane.addTab(java.lang.String, javax.swing.Icon, java.awt.Component, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.fTreeBrowser</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSuitePanel</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestRunViews()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestHierarchyRunView.fTestContext</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunContext</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.TestHierarchyRunView(junit.swingui.TestRunContext)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.testSelected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestHierarchyRunView.fTreeBrowser</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestSuitePanel</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.TestHierarchyRunView(junit.swingui.TestRunContext)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.aboutToStart(junit.framework.Test, junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.addTab(javax.swing.JTabbedPane)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.getSelectedTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.runFinished(junit.framework.Test, junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestHierarchyRunView.getSelectedTest()</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.fTreeBrowser</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSuitePanel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.getSelectedTest()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.testSelected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector()</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.copyInto(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTree</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTree.getModel()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTree.makeVisible(javax.swing.tree.TreePath)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTree.setSelectionPath(javax.swing.tree.TreePath)</outbound>
                <outbound type="class" confirmed="no">javax.swing.tree.TreeModel</outbound>
                <outbound type="class" confirmed="no">javax.swing.tree.TreePath</outbound>
                <outbound type="feature" confirmed="no">javax.swing.tree.TreePath.TreePath(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.fTreeBrowser</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSuitePanel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.getTree()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestTreeModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.findTest(junit.framework.Test, junit.framework.Test, java.util.Vector)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getChild(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getRoot()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestHierarchyRunView.runFinished(junit.framework.Test, junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.removeListener(junit.framework.TestListener)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.fTreeBrowser</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSuitePanel</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestHierarchyRunView.testSelected()</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.fTestContext</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.getSelectedTest()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunContext</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunContext.handleTestSelected(junit.framework.Test)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView$1.valueChanged(javax.swing.event.TreeSelectionEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.activate()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestHierarchyRunView$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.swing.event.TreeSelectionListener</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestHierarchyRunView$1.TestHierarchyRunView$1(junit.swingui.TestHierarchyRunView)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestHierarchyRunView</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.TestHierarchyRunView(junit.swingui.TestRunContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestHierarchyRunView$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestHierarchyRunView</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView$1.TestHierarchyRunView$1(junit.swingui.TestHierarchyRunView)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView$1.valueChanged(javax.swing.event.TreeSelectionEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestHierarchyRunView$1.valueChanged(javax.swing.event.TreeSelectionEvent)</name>
                <outbound type="class" confirmed="no">javax.swing.event.TreeSelectionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestHierarchyRunView</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.testSelected()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunContext</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.fRunContext</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.testSelected()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.TestHierarchyRunView(junit.swingui.TestRunContext)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.fTestContext</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.testSelected()</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestRunner</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestRunViews()</inbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunContext.getFailures()</name>
                <outbound type="class" confirmed="no">javax.swing.ListModel</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunContext.handleTestSelected(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.testSelected()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.testSelected()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunView</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">junit.swingui.FailureRunView</inbound>
            <inbound type="class" confirmed="yes">junit.swingui.TestHierarchyRunView</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.aboutToStart(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerun()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.revealFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testViewChanged()</inbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunView.aboutToStart(junit.framework.Test, junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.aboutToStart(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunView.activate()</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testViewChanged()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunView.addTab(javax.swing.JTabbedPane)</name>
                <outbound type="class" confirmed="no">javax.swing.JTabbedPane</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunView.getSelectedTest()</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerun()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunView.revealFailure(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.revealFailure(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunView.runFinished(junit.framework.Test, junit.framework.TestResult)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner</name>
            <outbound type="class" confirmed="yes">junit.runner.BaseTestRunner</outbound>
            <outbound type="class" confirmed="yes">junit.swingui.TestRunContext</outbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.TestRunner$1(junit.swingui.TestRunner, int, junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$10.TestRunner$10(junit.swingui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$10.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$10.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$11.TestRunner$11(junit.swingui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$11.keyTyped(java.awt.event.KeyEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$11.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$12.TestRunner$12(junit.swingui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$12.itemStateChanged(java.awt.event.ItemEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$12.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$13.TestRunner$13(junit.swingui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$13.stateChanged(javax.swing.event.ChangeEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$13.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.TestRunner$14(junit.swingui.TestRunner, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.TestRunner$15(junit.swingui.TestRunner, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.TestRunner$16(junit.swingui.TestRunner, junit.framework.Test, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.TestRunner$19(junit.swingui.TestRunner, junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.TestRunner$2(junit.swingui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.TestRunner$3(junit.swingui.TestRunner, junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$4.TestRunner$4(junit.swingui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$4.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$4.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$5.TestRunner$5(junit.swingui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$5.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$5.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$6.TestRunner$6(junit.swingui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$6.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$6.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$7.TestRunner$7(junit.swingui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$7.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$7.windowClosing(java.awt.event.WindowEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$8.TestRunner$8(junit.swingui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$8.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$8.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$9.TestRunner$9(junit.swingui.TestRunner)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$9.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$9.this$0</inbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.BOLD_FONT</name>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.FAILUREDETAILVIEW_KEY</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.GAP</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.HISTORY_LENGTH</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.PLAIN_FONT</name>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.TESTCOLLECTOR_KEY</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.TestRunner()</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.BaseTestRunner()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestRunViews</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.about()</name>
                <outbound type="feature" confirmed="no">java.awt.Dialog.show()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JFrame</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.AboutDialog.AboutDialog(javax.swing.JFrame)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fFrame</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$6(junit.swingui.TestRunner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.aboutToStart(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elements()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunView</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunView.aboutToStart(junit.framework.Test, junit.framework.TestResult)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestRunViews</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.access$0(junit.swingui.TestRunner)</name>
                <outbound type="class" confirmed="yes">junit.swingui.CounterPanel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fCounterPanel</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.access$1(junit.swingui.TestRunner)</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.access$10(junit.swingui.TestRunner, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.postInfo(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.access$11(junit.swingui.TestRunner, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.postStatus(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.access$12(junit.swingui.TestRunner)</name>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fRun</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.access$13(junit.swingui.TestRunner, javax.swing.JButton, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.setButtonLabel(javax.swing.JButton, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.access$14(junit.swingui.TestRunner, java.lang.Thread)</name>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.access$2(junit.swingui.TestRunner, java.lang.String, junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.access$3(junit.swingui.TestRunner)</name>
                <outbound type="class" confirmed="yes">junit.swingui.ProgressBar</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fProgressIndicator</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.access$4(junit.swingui.TestRunner)</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestRunViews</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.access$5(junit.swingui.TestRunner)</name>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerun()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$4.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.access$6(junit.swingui.TestRunner)</name>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.about()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$5.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.access$7(junit.swingui.TestRunner, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.showInfo(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.access$8(junit.swingui.TestRunner, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.showStatus(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.access$9(junit.swingui.TestRunner, junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.start(junit.framework.Test)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.add(java.awt.Component, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.GridBagConstraints()</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.anchor</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.fill</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridwidth</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridx</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridy</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.insets</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.weightx</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.weighty</outbound>
                <outbound type="class" confirmed="no">java.awt.Insets</outbound>
                <outbound type="feature" confirmed="no">java.awt.Insets.Insets(int, int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.swing.JPanel</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.addToHistory(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JComboBox</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.getItemAt(int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.getItemCount()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.insertItemAt(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.removeItemAt(int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.setSelectedIndex(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fSuiteCombo</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.pruneHistory()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.swing.DefaultListModel</outbound>
                <outbound type="feature" confirmed="no">javax.swing.DefaultListModel.addElement(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.DefaultListModel.size()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.TestFailure(junit.framework.Test, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fFailures</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.revealFailure(junit.framework.Test)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$2(junit.swingui.TestRunner, java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.browseTestClasses()</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="feature" confirmed="no">java.awt.Dialog.show()</outbound>
                <outbound type="class" confirmed="no">java.awt.Frame</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JFrame</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JOptionPane.showMessageDialog(java.awt.Component, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.runner.TestCollector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestCollector()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fFrame</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.setSuite(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.getSelectedItem()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.isEmpty()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$10.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.class$0</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadFrameIcon()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.clearStatus()</name>
                <outbound type="class" confirmed="yes">junit.swingui.StatusLine</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.StatusLine.clear()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fStatusLine</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.textChanged()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createBrowseButton()</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.addActionListener(java.awt.event.ActionListener)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JButton.JButton(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setToolTipText(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$10.TestRunner$10(junit.swingui.TestRunner)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createCounterPanel()</name>
                <outbound type="class" confirmed="yes">junit.swingui.CounterPanel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createFailedPanel()</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.add(java.awt.Component)</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridLayout.GridLayout(int, int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.LayoutManager</outbound>
                <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.addActionListener(java.awt.event.ActionListener)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.setEnabled(boolean)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JButton.JButton(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JPanel</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JPanel.JPanel(java.awt.LayoutManager)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$4.TestRunner$4(junit.swingui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fRerunButton</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createFailureDetailView()</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.newInstance()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JFrame</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JOptionPane.showMessageDialog(java.awt.Component, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">junit.runner.FailureDetailView</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.DefaultFailureDetailView.DefaultFailureDetailView()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fFrame</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createFrame(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.awt.BorderLayout.BorderLayout(int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.Container</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.setLayout(java.awt.LayoutManager)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Frame.setIconImage(java.awt.Image)</outbound>
                <outbound type="class" confirmed="no">java.awt.Image</outbound>
                <outbound type="class" confirmed="no">java.awt.LayoutManager</outbound>
                <outbound type="feature" confirmed="no">java.awt.Window.addWindowListener(java.awt.event.WindowListener)</outbound>
                <outbound type="class" confirmed="no">java.awt.event.WindowListener</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JFrame</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JFrame.JFrame(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JFrame.getContentPane()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$7.TestRunner$7(junit.swingui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadFrameIcon()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createJUnitMenu()</name>
                <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.addActionListener(java.awt.event.ActionListener)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.setMnemonic(char)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JMenu</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JMenu.JMenu(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JMenu.add(javax.swing.JMenuItem)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JMenu.addSeparator()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JMenuItem</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JMenuItem.JMenuItem(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$5.TestRunner$5(junit.swingui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$6.TestRunner$6(junit.swingui.TestRunner)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createMenus(javax.swing.JMenuBar)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createLogo()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="feature" confirmed="no">java.lang.NoClassDefFoundError.NoClassDefFoundError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setToolTipText(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JLabel</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JLabel.JLabel(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JLabel.JLabel(javax.swing.Icon)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.Version.id()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.class$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createMenus(javax.swing.JMenuBar)</name>
                <outbound type="class" confirmed="no">javax.swing.JMenu</outbound>
                <outbound type="class" confirmed="no">javax.swing.JMenuBar</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JMenuBar.add(javax.swing.JMenu)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createJUnitMenu()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createQuitButton()</name>
                <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.addActionListener(java.awt.event.ActionListener)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JButton.JButton(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$8.TestRunner$8(junit.swingui.TestRunner)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createRunButton()</name>
                <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.addActionListener(java.awt.event.ActionListener)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.setEnabled(boolean)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JButton.JButton(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$9.TestRunner$9(junit.swingui.TestRunner)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createStatusLine()</name>
                <outbound type="class" confirmed="yes">junit.swingui.StatusLine</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.StatusLine.StatusLine(int)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createSuiteCombo()</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.addKeyListener(java.awt.event.KeyListener)</outbound>
                <outbound type="class" confirmed="no">java.awt.event.ItemListener</outbound>
                <outbound type="class" confirmed="no">java.awt.event.KeyListener</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">javax.swing.ComboBoxEditor</outbound>
                <outbound type="feature" confirmed="no">javax.swing.ComboBoxEditor.getEditorComponent()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JComboBox</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.JComboBox()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.addItemListener(java.awt.event.ItemListener)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.getEditor()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.setEditable(boolean)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.setLightWeightPopupEnabled(boolean)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$11.TestRunner$11(junit.swingui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$12.TestRunner$12(junit.swingui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadHistory(javax.swing.JComboBox)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createTestCollector()</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.newInstance()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JFrame</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JOptionPane.showMessageDialog(java.awt.Component, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.SimpleTestCollector.SimpleTestCollector()</outbound>
                <outbound type="class" confirmed="yes">junit.runner.TestCollector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fFrame</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.browseTestClasses()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createTestResult()</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createTestRunViews()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.addElement(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTabbedPane</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTabbedPane.JTabbedPane(int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTabbedPane.addChangeListener(javax.swing.event.ChangeListener)</outbound>
                <outbound type="class" confirmed="no">javax.swing.event.ChangeListener</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView.FailureRunView(junit.swingui.TestRunContext)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.FailureRunView.addTab(javax.swing.JTabbedPane)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.TestHierarchyRunView(junit.swingui.TestRunContext)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.addTab(javax.swing.JTabbedPane)</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunContext</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$13.TestRunner$13(junit.swingui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestRunViews</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createUI(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setLocation(int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.Container</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagLayout.GridBagLayout()</outbound>
                <outbound type="class" confirmed="no">java.awt.LayoutManager</outbound>
                <outbound type="feature" confirmed="no">java.awt.Window.pack()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.DefaultListModel</outbound>
                <outbound type="feature" confirmed="no">javax.swing.DefaultListModel.DefaultListModel()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="class" confirmed="no">javax.swing.JCheckBox</outbound>
                <outbound type="class" confirmed="no">javax.swing.JComboBox</outbound>
                <outbound type="class" confirmed="no">javax.swing.JFrame</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JFrame.getRootPane()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JFrame.setContentPane(java.awt.Container)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JFrame.setJMenuBar(javax.swing.JMenuBar)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JLabel</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JLabel.JLabel(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JMenuBar</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JMenuBar.JMenuBar()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JPanel</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JPanel.JPanel(java.awt.LayoutManager)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JRootPane</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JRootPane.setDefaultButton(javax.swing.JButton)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JScrollPane.JScrollPane(java.awt.Component, int, int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JSeparator.JSeparator()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JSplitPane.JSplitPane(int, java.awt.Component, java.awt.Component)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTabbedPane</outbound>
                <outbound type="class" confirmed="yes">junit.runner.FailureDetailView</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.FailureDetailView.getComponent()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.CounterPanel</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.ProgressBar</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.ProgressBar.ProgressBar()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.StatusLine</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.addGrid(javax.swing.JPanel, java.awt.Component, int, int, int, int, double, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createBrowseButton()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createCounterPanel()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailedPanel()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailureDetailView()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFrame(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createMenus(javax.swing.JMenuBar)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createQuitButton()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createRunButton()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createStatusLine()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestRunViews()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUseLoaderCheckBox()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fCounterPanel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fFailureView</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fFailures</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fLogo</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fProgressIndicator</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fQuitButton</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fRun</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fStatusLine</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fSuiteCombo</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestViewTab</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fUseLoadingRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.createUseLoaderCheckBox()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JCheckBox</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JCheckBox.JCheckBox(java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setToolTipText(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setVisible(boolean)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.inVAJava()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.useReloadingTestSuiteLoader()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.doRunTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.start()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.TestRunner$16(junit.swingui.TestRunner, junit.framework.Test, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.aboutToStart(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fRun</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.setButtonLabel(javax.swing.JButton, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.fCounterPanel</name>
                <outbound type="class" confirmed="yes">junit.swingui.CounterPanel</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$0(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.fFailureView</name>
                <outbound type="class" confirmed="yes">junit.runner.FailureDetailView</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showFailureDetail(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.fFailures</name>
                <outbound type="class" confirmed="no">javax.swing.DefaultListModel</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getFailures()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.fFrame</name>
                <outbound type="class" confirmed="no">javax.swing.JFrame</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.about()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.browseTestClasses()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailureDetailView()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestCollector()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.start(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.terminate()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.fLogo</name>
                <outbound type="class" confirmed="no">javax.swing.JLabel</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.fProgressIndicator</name>
                <outbound type="class" confirmed="yes">junit.swingui.ProgressBar</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$3(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.fQuitButton</name>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.fRerunButton</name>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailedPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.handleTestSelected(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.fRun</name>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$12(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runFailed(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.textChanged()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.fRunner</name>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$14(junit.swingui.TestRunner, java.lang.Thread)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runFailed(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.fStatusLine</name>
                <outbound type="class" confirmed="yes">junit.swingui.StatusLine</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.clearStatus()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showInfo(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showStatus(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.fSuiteCombo</name>
                <outbound type="class" confirmed="no">javax.swing.JComboBox</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addToHistory(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.getSuiteText()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.pruneHistory()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.setSuite(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.fTestResult</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.aboutToStart(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$1(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.fTestRunViews</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.TestRunner()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.aboutToStart(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$4(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestRunViews()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerun()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.revealFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testViewChanged()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.fTestViewTab</name>
                <outbound type="class" confirmed="no">javax.swing.JTabbedPane</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerun()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testViewChanged()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.fUseLoadingRunner</name>
                <outbound type="class" confirmed="no">javax.swing.JCheckBox</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.shouldReload()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.getFailures()</name>
                <outbound type="class" confirmed="no">javax.swing.DefaultListModel</outbound>
                <outbound type="class" confirmed="no">javax.swing.ListModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fFailures</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.showFailureDetail(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getResource(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.err</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <outbound type="feature" confirmed="no">javax.swing.ImageIcon.ImageIcon(java.net.URL)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.AboutDialog.createLogo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.CounterPanel.CounterPanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView$FailureListCellRenderer.loadIcons()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.FailureRunView.addTab(javax.swing.JTabbedPane)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.addTab(javax.swing.JTabbedPane)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createLogo()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadFrameIcon()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.loadIcons()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.getSettingsFile()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.loadHistory(javax.swing.JComboBox)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.getSuiteText()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.ComboBoxEditor</outbound>
                <outbound type="feature" confirmed="no">javax.swing.ComboBoxEditor.getItem()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JComboBox</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.getEditor()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fSuiteCombo</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.textChanged()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.handleTestSelected(junit.framework.Test)</name>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.setEnabled(boolean)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fRerunButton</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.showFailureDetail(junit.framework.Test)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.insertUpdate(javax.swing.event.DocumentEvent)</name>
                <outbound type="class" confirmed="no">javax.swing.event.DocumentEvent</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.textChanged()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.loadFrameIcon()</name>
                <outbound type="class" confirmed="no">java.awt.Image</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="feature" confirmed="no">java.lang.NoClassDefFoundError.NoClassDefFoundError(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <outbound type="class" confirmed="no">javax.swing.ImageIcon</outbound>
                <outbound type="feature" confirmed="no">javax.swing.ImageIcon.getImage()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.class$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFrame(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.loadHistory(javax.swing.JComboBox)</name>
                <outbound type="feature" confirmed="no">java.io.BufferedReader.BufferedReader(java.io.Reader)</outbound>
                <outbound type="feature" confirmed="no">java.io.BufferedReader.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.BufferedReader.readLine()</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileReader.FileReader(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JComboBox</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.addItem(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.setSelectedIndex(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.getSettingsFile()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.main(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.TestRunner()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.start(java.lang.String[])</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.run(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.postInfo(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.SwingUtilities.invokeLater(java.lang.Runnable)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.TestRunner$14(junit.swingui.TestRunner, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$10(junit.swingui.TestRunner, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testStarted(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.postStatus(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.SwingUtilities.invokeLater(java.lang.Runnable)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.TestRunner$15(junit.swingui.TestRunner, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$11(junit.swingui.TestRunner, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.pruneHistory()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JComboBox</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.getItemCount()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.removeItemAt(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getPreference(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fSuiteCombo</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.addToHistory(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.removeUpdate(javax.swing.event.DocumentEvent)</name>
                <outbound type="class" confirmed="no">javax.swing.event.DocumentEvent</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.textChanged()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.rerun()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elementAt(int)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTabbedPane</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTabbedPane.getSelectedIndex()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunView</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunView.getSelectedTest()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestRunViews</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestViewTab</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$5(junit.swingui.TestRunner)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.rerunTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestCase</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestCase.getName()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getLoader()</outbound>
                <outbound type="class" confirmed="yes">junit.runner.TestSuiteLoader</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestSuiteLoader.reload(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.showInfo(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.showStatus(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerun()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.reset()</name>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.setEnabled(boolean)</outbound>
                <outbound type="class" confirmed="no">javax.swing.DefaultListModel</outbound>
                <outbound type="feature" confirmed="no">javax.swing.DefaultListModel.clear()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="class" confirmed="yes">junit.runner.FailureDetailView</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.FailureDetailView.clear()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.CounterPanel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.reset()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.ProgressBar</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.ProgressBar.reset()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fCounterPanel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fFailureView</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fFailures</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fProgressIndicator</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fRerunButton</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.revealFailure(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elements()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunView</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunView.revealFailure(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestRunViews</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.appendFailure(java.lang.String, junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.run(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.main(java.lang.String[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.runFailed(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.setText(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fRun</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.showStatus(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.runFinished(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="feature" confirmed="no">javax.swing.SwingUtilities.invokeLater(java.lang.Runnable)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.TestRunner$3(junit.swingui.TestRunner, junit.framework.Test)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.runSuite()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.stop()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.setLoading(boolean)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.addToHistory(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.getSuiteText()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.shouldReload()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.showInfo(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$11.keyTyped(java.awt.event.KeyEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$9.actionPerformed(java.awt.event.ActionEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.runTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.stop()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.reset()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.saveHistory()</name>
                <outbound type="feature" confirmed="no">java.io.BufferedWriter.BufferedWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.BufferedWriter.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.BufferedWriter.newLine()</outbound>
                <outbound type="feature" confirmed="no">java.io.BufferedWriter.write(java.lang.String, int, int)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileWriter.FileWriter(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JComboBox</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.getItemAt(int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.getItemCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fSuiteCombo</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.getSettingsFile()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.terminate()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.setButtonLabel(javax.swing.JButton, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="feature" confirmed="no">javax.swing.SwingUtilities.invokeLater(java.lang.Runnable)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.TestRunner$17(javax.swing.JButton, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$13(junit.swingui.TestRunner, javax.swing.JButton, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.setLabelValue(javax.swing.JTextField, int)</name>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTextField</outbound>
                <outbound type="feature" confirmed="no">javax.swing.SwingUtilities.invokeLater(java.lang.Runnable)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$18.TestRunner$18(javax.swing.JTextField, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.setSuite(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.ComboBoxEditor</outbound>
                <outbound type="feature" confirmed="no">javax.swing.ComboBoxEditor.setItem(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JComboBox</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.getEditor()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fSuiteCombo</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.browseTestClasses()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.shouldReload()</name>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.isSelected()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JCheckBox</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.inVAJava()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fUseLoadingRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.showFailureDetail(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.swing.ListModel</outbound>
                <outbound type="feature" confirmed="no">javax.swing.ListModel.getElementAt(int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.ListModel.getSize()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.failedTest()</outbound>
                <outbound type="class" confirmed="yes">junit.runner.FailureDetailView</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.FailureDetailView.clear()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.FailureDetailView.showFailure(junit.framework.TestFailure)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fFailureView</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.getFailures()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.handleTestSelected(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.showInfo(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.StatusLine</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.StatusLine.showInfo(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fStatusLine</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$7(junit.swingui.TestRunner, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.showStatus(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.StatusLine</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.StatusLine.showError(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fStatusLine</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$8(junit.swingui.TestRunner, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.rerunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runFailed(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.start(java.lang.String[])</name>
                <outbound type="feature" confirmed="no">java.awt.Component.setVisible(boolean)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Window.pack()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JFrame</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.processArguments(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.createUI(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fFrame</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.setSuite(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.start(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="feature" confirmed="no">javax.swing.SwingUtilities.invokeLater(java.lang.Runnable)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.TestRunner$19(junit.swingui.TestRunner, junit.framework.Test)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$9(junit.swingui.TestRunner, junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.static {}</name>
                <outbound type="class" confirmed="no">java.awt.Font</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.StatusLine.BOLD_FONT</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.StatusLine.PLAIN_FONT</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.BOLD_FONT</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.PLAIN_FONT</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.synchUI()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="feature" confirmed="no">javax.swing.SwingUtilities.invokeAndWait(java.lang.Runnable)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$20.TestRunner$20()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testEnded(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.terminate()</name>
                <outbound type="feature" confirmed="no">java.awt.Window.dispose()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.exit(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
                <outbound type="class" confirmed="no">javax.swing.JFrame</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fFrame</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.saveHistory()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$6.actionPerformed(java.awt.event.ActionEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$7.windowClosing(java.awt.event.WindowEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$8.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.testEnded(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.SwingUtilities.invokeLater(java.lang.Runnable)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.TestRunner$2(junit.swingui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.synchUI()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">javax.swing.SwingUtilities.invokeLater(java.lang.Runnable)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.TestRunner$1(junit.swingui.TestRunner, int, junit.framework.Test, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.testStarted(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.postInfo(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.testViewChanged()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elementAt(int)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTabbedPane</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTabbedPane.getSelectedIndex()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunView</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunView.activate()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestRunViews</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fTestViewTab</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$13.stateChanged(javax.swing.event.ChangeEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner.textChanged()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.setEnabled(boolean)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.clearStatus()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.fRun</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.getSuiteText()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$11.keyTyped(java.awt.event.KeyEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$12.itemStateChanged(java.awt.event.ItemEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.insertUpdate(javax.swing.event.DocumentEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.removeUpdate(javax.swing.event.DocumentEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$1.TestRunner$1(junit.swingui.TestRunner, int, junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.val$status</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.val$t</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.val$test</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$1.run()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.CounterPanel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setErrorValue(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setFailureValue(int)</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.val$status</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.val$t</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.val$test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$0(junit.swingui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$1(junit.swingui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$2(junit.swingui.TestRunner, java.lang.String, junit.framework.Test, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.TestRunner$1(junit.swingui.TestRunner, int, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$1.val$status</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.TestRunner$1(junit.swingui.TestRunner, int, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$1.val$t</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.TestRunner$1(junit.swingui.TestRunner, int, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$1.val$test</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.TestRunner$1(junit.swingui.TestRunner, int, junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$1.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$10</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$10.TestRunner$10(junit.swingui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$10.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createBrowseButton()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$10.actionPerformed(java.awt.event.ActionEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$10.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.browseTestClasses()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$10.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$10.TestRunner$10(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$10.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$11</name>
            <outbound type="class" confirmed="no">java.awt.event.KeyAdapter</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$11.TestRunner$11(junit.swingui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.awt.event.KeyAdapter.KeyAdapter()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$11.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$11.keyTyped(java.awt.event.KeyEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.KeyEvent</outbound>
                <outbound type="feature" confirmed="no">java.awt.event.KeyEvent.getKeyChar()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$11.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.textChanged()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$11.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$11.TestRunner$11(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$11.keyTyped(java.awt.event.KeyEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$12</name>
            <outbound type="class" confirmed="no">java.awt.event.ItemListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$12.TestRunner$12(junit.swingui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$12.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createSuiteCombo()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$12.itemStateChanged(java.awt.event.ItemEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.ItemEvent</outbound>
                <outbound type="feature" confirmed="no">java.awt.event.ItemEvent.getStateChange()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$12.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.textChanged()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$12.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$12.TestRunner$12(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$12.itemStateChanged(java.awt.event.ItemEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$13</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.swing.event.ChangeListener</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$13.TestRunner$13(junit.swingui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$13.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createTestRunViews()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$13.stateChanged(javax.swing.event.ChangeEvent)</name>
                <outbound type="class" confirmed="no">javax.swing.event.ChangeEvent</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$13.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.testViewChanged()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$13.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$13.TestRunner$13(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$13.stateChanged(javax.swing.event.ChangeEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$14</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$14.TestRunner$14(junit.swingui.TestRunner, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.val$message</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.postInfo(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$14.run()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.val$message</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$7(junit.swingui.TestRunner, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$14.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.TestRunner$14(junit.swingui.TestRunner, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$14.val$message</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.TestRunner$14(junit.swingui.TestRunner, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$14.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$15</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$15.TestRunner$15(junit.swingui.TestRunner, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.val$status</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.postStatus(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$15.run()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.val$status</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$8(junit.swingui.TestRunner, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$15.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.TestRunner$15(junit.swingui.TestRunner, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$15.val$status</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.TestRunner$15(junit.swingui.TestRunner, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$15.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$16</name>
            <outbound type="class" confirmed="no">java.lang.Thread</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$16.TestRunner$16(junit.swingui.TestRunner, junit.framework.Test, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.Thread(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.val$testSuite</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.doRunTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$16.run()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.gc()</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.shouldStop()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.elapsedTimeAsString(long)</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.val$testSuite</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$1(junit.swingui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$10(junit.swingui.TestRunner, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$11(junit.swingui.TestRunner, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$12(junit.swingui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$13(junit.swingui.TestRunner, javax.swing.JButton, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$14(junit.swingui.TestRunner, java.lang.Thread)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$9(junit.swingui.TestRunner, junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.runFinished(junit.framework.Test)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$16.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.TestRunner$16(junit.swingui.TestRunner, junit.framework.Test, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$16.val$testSuite</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.TestRunner$16(junit.swingui.TestRunner, junit.framework.Test, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$16.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$17</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$17.TestRunner$17(javax.swing.JButton, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.val$button</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.val$label</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.setButtonLabel(javax.swing.JButton, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$17.run()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.setText(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.val$button</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.val$label</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$17.val$button</name>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.TestRunner$17(javax.swing.JButton, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$17.val$label</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.TestRunner$17(javax.swing.JButton, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$17.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$18</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$18.TestRunner$18(javax.swing.JTextField, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTextField</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$18.val$label</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$18.val$value</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.setLabelValue(javax.swing.JTextField, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$18.run()</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.toString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTextField</outbound>
                <outbound type="feature" confirmed="no">javax.swing.text.JTextComponent.setText(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$18.val$label</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$18.val$value</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$18.val$label</name>
                <outbound type="class" confirmed="no">javax.swing.JTextField</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$18.TestRunner$18(javax.swing.JTextField, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$18.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$18.val$value</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$18.TestRunner$18(javax.swing.JTextField, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$18.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$19</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$19.TestRunner$19(junit.swingui.TestRunner, junit.framework.Test)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.val$test</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.start(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$19.run()</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.countTestCases()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.CounterPanel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setTotal(int)</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.ProgressBar</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.ProgressBar.start(int)</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.val$test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$0(junit.swingui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$3(junit.swingui.TestRunner)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$19.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.TestRunner$19(junit.swingui.TestRunner, junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$19.val$test</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.TestRunner$19(junit.swingui.TestRunner, junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$19.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$2</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$2.TestRunner$2(junit.swingui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.testEnded(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$2.run()</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.runCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.CounterPanel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.CounterPanel.setRunValue(int)</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.ProgressBar</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.ProgressBar.step(int, boolean)</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$0(junit.swingui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$1(junit.swingui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$3(junit.swingui.TestRunner)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$2.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.TestRunner$2(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$2.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$20</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$20.TestRunner$20()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.synchUI()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$20.run()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$3</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$3.TestRunner$3(junit.swingui.TestRunner, junit.framework.Test)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.val$testSuite</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.runFinished(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$3.run()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elements()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunView</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunView.runFinished(junit.framework.Test, junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.val$testSuite</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$1(junit.swingui.TestRunner)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$4(junit.swingui.TestRunner)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$3.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.TestRunner$3(junit.swingui.TestRunner, junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$3.val$testSuite</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.TestRunner$3(junit.swingui.TestRunner, junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$3.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$4</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$4.TestRunner$4(junit.swingui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$4.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFailedPanel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$4.actionPerformed(java.awt.event.ActionEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$4.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$5(junit.swingui.TestRunner)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$4.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$4.TestRunner$4(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$4.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$5</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$5.TestRunner$5(junit.swingui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$5.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createJUnitMenu()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$5.actionPerformed(java.awt.event.ActionEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$5.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.access$6(junit.swingui.TestRunner)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$5.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$5.TestRunner$5(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$5.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$6</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$6.TestRunner$6(junit.swingui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$6.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createJUnitMenu()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$6.actionPerformed(java.awt.event.ActionEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$6.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.terminate()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$6.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$6.TestRunner$6(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$6.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$7</name>
            <outbound type="class" confirmed="no">java.awt.event.WindowAdapter</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$7.TestRunner$7(junit.swingui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.awt.event.WindowAdapter.WindowAdapter()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$7.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createFrame(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$7.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$7.TestRunner$7(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$7.windowClosing(java.awt.event.WindowEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$7.windowClosing(java.awt.event.WindowEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.WindowEvent</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$7.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.terminate()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$8</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$8.TestRunner$8(junit.swingui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$8.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createQuitButton()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$8.actionPerformed(java.awt.event.ActionEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$8.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.terminate()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$8.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$8.TestRunner$8(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$8.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestRunner$9</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$9.TestRunner$9(junit.swingui.TestRunner)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$9.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.createRunButton()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$9.actionPerformed(java.awt.event.ActionEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner$9.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.runSuite()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestRunner$9.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestRunner</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$9.TestRunner$9(junit.swingui.TestRunner)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner$9.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestSelector</name>
            <outbound type="class" confirmed="no">javax.swing.JDialog</outbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$1.TestSelector$1(junit.swingui.TestSelector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$1.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$2.TestSelector$2(junit.swingui.TestSelector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$2.actionPerformed(java.awt.event.ActionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$2.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$3.TestSelector$3(junit.swingui.TestSelector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$3.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$3.valueChanged(javax.swing.event.ListSelectionEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$4.TestSelector$4(junit.swingui.TestSelector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$4.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$4.windowClosing(java.awt.event.WindowEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$DoubleClickListener.TestSelector$DoubleClickListener(junit.swingui.TestSelector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$DoubleClickListener.mouseClicked(java.awt.event.MouseEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$DoubleClickListener.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$KeySelectListener.TestSelector$KeySelectListener(junit.swingui.TestSelector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$KeySelectListener.keyTyped(java.awt.event.KeyEvent)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$KeySelectListener.this$0</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper.TestSelector$ParallelSwapper(junit.swingui.TestSelector, java.util.Vector)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper.this$0</inbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.setSize(int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.Cursor</outbound>
                <outbound type="feature" confirmed="no">java.awt.Cursor.getDefaultCursor()</outbound>
                <outbound type="feature" confirmed="no">java.awt.Cursor.getPredefinedCursor(int)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Dialog.setResizable(boolean)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Dialog.setTitle(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.awt.Frame</outbound>
                <outbound type="feature" confirmed="no">java.awt.Window.setCursor(java.awt.Cursor)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Window.setLocationRelativeTo(java.awt.Component)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.setEnabled(boolean)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JButton.JButton(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JDialog.JDialog(java.awt.Frame, boolean)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JDialog.getRootPane()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JLabel</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JLabel.JLabel(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.JList(java.util.Vector)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.setCellRenderer(javax.swing.ListCellRenderer)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.setSelectionMode(int)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JRootPane</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JRootPane.setDefaultButton(javax.swing.JButton)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JScrollPane</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JScrollPane.JScrollPane(java.awt.Component)</outbound>
                <outbound type="class" confirmed="no">javax.swing.ListCellRenderer</outbound>
                <outbound type="class" confirmed="yes">junit.runner.TestCollector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.TestSelector$TestCellRenderer()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fCancel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fDescription</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fList</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fOk</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fScrolledList</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.browseTestClasses()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector.addListeners()</name>
                <outbound type="feature" confirmed="no">java.awt.Component.addKeyListener(java.awt.event.KeyListener)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Component.addMouseListener(java.awt.event.MouseListener)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Window.addWindowListener(java.awt.event.WindowListener)</outbound>
                <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
                <outbound type="class" confirmed="no">java.awt.event.KeyListener</outbound>
                <outbound type="class" confirmed="no">java.awt.event.MouseListener</outbound>
                <outbound type="class" confirmed="no">java.awt.event.WindowListener</outbound>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.addActionListener(java.awt.event.ActionListener)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.addListSelectionListener(javax.swing.event.ListSelectionListener)</outbound>
                <outbound type="class" confirmed="no">javax.swing.event.ListSelectionListener</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$1.TestSelector$1(junit.swingui.TestSelector)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$2.TestSelector$2(junit.swingui.TestSelector)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$3.TestSelector$3(junit.swingui.TestSelector)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$4.TestSelector$4(junit.swingui.TestSelector)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$DoubleClickListener.TestSelector$DoubleClickListener(junit.swingui.TestSelector)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$KeySelectListener.TestSelector$KeySelectListener(junit.swingui.TestSelector)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fCancel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fList</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fOk</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector.checkEnableOK(javax.swing.event.ListSelectionEvent)</name>
                <outbound type="feature" confirmed="no">javax.swing.AbstractButton.setEnabled(boolean)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.getSelectedIndex()</outbound>
                <outbound type="class" confirmed="no">javax.swing.event.ListSelectionEvent</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fList</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fOk</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$3.valueChanged(javax.swing.event.ListSelectionEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.addElement(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="class" confirmed="yes">junit.runner.Sorter$Swapper</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.Sorter.sortStrings(java.util.Vector, int, int, junit.runner.Sorter$Swapper)</outbound>
                <outbound type="class" confirmed="yes">junit.runner.TestCollector</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.TestCollector.collectTests()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper.TestSelector$ParallelSwapper(junit.swingui.TestSelector, java.util.Vector)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.displayString(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector.defineLayout()</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="class" confirmed="no">java.awt.Container</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.add(java.awt.Component, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.setLayout(java.awt.LayoutManager)</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.GridBagConstraints()</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.anchor</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.fill</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridheight</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridwidth</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridx</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.gridy</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.insets</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.weightx</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagConstraints.weighty</outbound>
                <outbound type="feature" confirmed="no">java.awt.GridBagLayout.GridBagLayout()</outbound>
                <outbound type="class" confirmed="no">java.awt.Insets</outbound>
                <outbound type="feature" confirmed="no">java.awt.Insets.Insets(int, int, int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.LayoutManager</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JDialog.getContentPane()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JLabel</outbound>
                <outbound type="class" confirmed="no">javax.swing.JScrollPane</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fCancel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fDescription</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fOk</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fScrolledList</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector.fCancel</name>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector.fDescription</name>
                <outbound type="class" confirmed="no">javax.swing.JLabel</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector.fList</name>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.checkEnableOK(javax.swing.event.ListSelectionEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.isEmpty()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.okSelected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector.fOk</name>
                <outbound type="class" confirmed="no">javax.swing.JButton</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.checkEnableOK(javax.swing.event.ListSelectionEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector.fScrolledList</name>
                <outbound type="class" confirmed="no">javax.swing.JScrollPane</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.defineLayout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector.fSelectedItem</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.getSelectedItem()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.okSelected()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector.getSelectedItem()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fSelectedItem</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.browseTestClasses()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector.isEmpty()</name>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.getModel()</outbound>
                <outbound type="class" confirmed="no">javax.swing.ListModel</outbound>
                <outbound type="feature" confirmed="no">javax.swing.ListModel.getSize()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fList</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestRunner.browseTestClasses()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector.keySelectTestClass(char)</name>
                <outbound type="class" confirmed="no">java.awt.Toolkit</outbound>
                <outbound type="feature" confirmed="no">java.awt.Toolkit.beep()</outbound>
                <outbound type="feature" confirmed="no">java.awt.Toolkit.getDefaultToolkit()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isJavaIdentifierStart(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.toUpperCase(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.ensureIndexIsVisible(int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.getModel()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.setSelectedIndex(int)</outbound>
                <outbound type="class" confirmed="no">javax.swing.ListModel</outbound>
                <outbound type="feature" confirmed="no">javax.swing.ListModel.getElementAt(int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.ListModel.getSize()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.matchesKey(java.lang.String, char)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fList</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$KeySelectListener.keyTyped(java.awt.event.KeyEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector.okSelected()</name>
                <outbound type="feature" confirmed="no">java.awt.Dialog.dispose()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JList.getSelectedValue()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fList</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.fSelectedItem</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$2.actionPerformed(java.awt.event.ActionEvent)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$DoubleClickListener.mouseClicked(java.awt.event.MouseEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestSelector$1</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$1.TestSelector$1(junit.swingui.TestSelector)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$1.actionPerformed(java.awt.event.ActionEvent)</name>
                <outbound type="feature" confirmed="no">java.awt.Dialog.dispose()</outbound>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$1.this$0</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$1.TestSelector$1(junit.swingui.TestSelector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$1.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestSelector$2</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$2.TestSelector$2(junit.swingui.TestSelector)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$2.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$2.actionPerformed(java.awt.event.ActionEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$2.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.okSelected()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$2.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$2.TestSelector$2(junit.swingui.TestSelector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$2.actionPerformed(java.awt.event.ActionEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestSelector$3</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.swing.event.ListSelectionListener</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$3.TestSelector$3(junit.swingui.TestSelector)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$3.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$3.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$3.TestSelector$3(junit.swingui.TestSelector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$3.valueChanged(javax.swing.event.ListSelectionEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$3.valueChanged(javax.swing.event.ListSelectionEvent)</name>
                <outbound type="class" confirmed="no">javax.swing.event.ListSelectionEvent</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$3.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.checkEnableOK(javax.swing.event.ListSelectionEvent)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestSelector$4</name>
            <outbound type="class" confirmed="no">java.awt.event.WindowAdapter</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$4.TestSelector$4(junit.swingui.TestSelector)</name>
                <outbound type="feature" confirmed="no">java.awt.event.WindowAdapter.WindowAdapter()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$4.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$4.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$4.TestSelector$4(junit.swingui.TestSelector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$4.windowClosing(java.awt.event.WindowEvent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$4.windowClosing(java.awt.event.WindowEvent)</name>
                <outbound type="feature" confirmed="no">java.awt.Dialog.dispose()</outbound>
                <outbound type="class" confirmed="no">java.awt.event.WindowEvent</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$4.this$0</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestSelector$DoubleClickListener</name>
            <outbound type="class" confirmed="no">java.awt.event.MouseAdapter</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$DoubleClickListener.TestSelector$DoubleClickListener(junit.swingui.TestSelector)</name>
                <outbound type="feature" confirmed="no">java.awt.event.MouseAdapter.MouseAdapter()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$DoubleClickListener.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$DoubleClickListener.mouseClicked(java.awt.event.MouseEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.MouseEvent</outbound>
                <outbound type="feature" confirmed="no">java.awt.event.MouseEvent.getClickCount()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$DoubleClickListener.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.okSelected()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$DoubleClickListener.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$DoubleClickListener.TestSelector$DoubleClickListener(junit.swingui.TestSelector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$DoubleClickListener.mouseClicked(java.awt.event.MouseEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestSelector$KeySelectListener</name>
            <outbound type="class" confirmed="no">java.awt.event.KeyAdapter</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$KeySelectListener.TestSelector$KeySelectListener(junit.swingui.TestSelector)</name>
                <outbound type="feature" confirmed="no">java.awt.event.KeyAdapter.KeyAdapter()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$KeySelectListener.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.addListeners()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$KeySelectListener.keyTyped(java.awt.event.KeyEvent)</name>
                <outbound type="class" confirmed="no">java.awt.event.KeyEvent</outbound>
                <outbound type="feature" confirmed="no">java.awt.event.KeyEvent.getKeyChar()</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$KeySelectListener.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$KeySelectListener.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$KeySelectListener.TestSelector$KeySelectListener(junit.swingui.TestSelector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$KeySelectListener.keyTyped(java.awt.event.KeyEvent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestSelector$ParallelSwapper</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.runner.Sorter$Swapper</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$ParallelSwapper.TestSelector$ParallelSwapper(junit.swingui.TestSelector, java.util.Vector)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper.fOther</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper.this$0</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$ParallelSwapper.fOther</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper.TestSelector$ParallelSwapper(junit.swingui.TestSelector, java.util.Vector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper.swap(java.util.Vector, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$ParallelSwapper.swap(java.util.Vector, int, int)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elementAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.setElementAt(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper.fOther</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$ParallelSwapper.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestSelector</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$ParallelSwapper.TestSelector$ParallelSwapper(junit.swingui.TestSelector, java.util.Vector)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestSelector$TestCellRenderer</name>
            <outbound type="class" confirmed="no">javax.swing.DefaultListCellRenderer</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$TestCellRenderer.TestSelector$TestCellRenderer()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">javax.swing.DefaultListCellRenderer.DefaultListCellRenderer()</outbound>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <outbound type="feature" confirmed="no">javax.swing.UIManager.getIcon(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.fLeafIcon</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.fSuiteIcon</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.TestSelector(java.awt.Frame, junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$TestCellRenderer.displayString(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.createTestList(junit.runner.TestCollector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$TestCellRenderer.fLeafIcon</name>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.TestSelector$TestCellRenderer()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$TestCellRenderer.fSuiteIcon</name>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.TestSelector$TestCellRenderer()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$TestCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.DefaultListCellRenderer.getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)</outbound>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JLabel.setIcon(javax.swing.Icon)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JLabel.setText(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JList</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.displayString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.fLeafIcon</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.fSuiteIcon</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$TestCellRenderer.matchesKey(java.lang.String, char)</name>
                <outbound type="feature" confirmed="no">java.lang.Character.toUpperCase(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.typeIndex(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector.keySelectTestClass(char)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSelector$TestCellRenderer.typeIndex(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(int)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSelector$TestCellRenderer.matchesKey(java.lang.String, char)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestSuitePanel</name>
            <outbound type="class" confirmed="no">javax.swing.JPanel</outbound>
            <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.TestHierarchyRunView(junit.swingui.TestRunContext)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.aboutToStart(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.addTab(javax.swing.JTabbedPane)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.fTreeBrowser</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.getSelectedTest()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.runFinished(junit.framework.Test, junit.framework.TestResult)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.TestSuitePanel$1(junit.swingui.TestSuitePanel, junit.framework.Test, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.this$0</inbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel.TestSuitePanel()</name>
                <outbound type="feature" confirmed="no">java.awt.BorderLayout.BorderLayout()</outbound>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="feature" confirmed="no">java.awt.Container.add(java.awt.Component, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.awt.Dimension</outbound>
                <outbound type="feature" confirmed="no">java.awt.Dimension.Dimension(int, int)</outbound>
                <outbound type="class" confirmed="no">java.awt.LayoutManager</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.swing.JComponent</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.putClientProperty(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setPreferredSize(java.awt.Dimension)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JPanel.JPanel(java.awt.LayoutManager)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JScrollPane</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JScrollPane.JScrollPane(java.awt.Component)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTree</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTree.JTree()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTree.setModel(javax.swing.tree.TreeModel)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTree.setRowHeight(int)</outbound>
                <outbound type="class" confirmed="no">javax.swing.ToolTipManager</outbound>
                <outbound type="feature" confirmed="no">javax.swing.ToolTipManager.registerComponent(javax.swing.JComponent)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.ToolTipManager.sharedInstance()</outbound>
                <outbound type="class" confirmed="no">javax.swing.tree.TreeModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fScrollTree</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fTree</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.TestHierarchyRunView(junit.swingui.TestRunContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel.access$0(junit.swingui.TestSuitePanel)</name>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fModel</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestTreeModel</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel.access$1(junit.swingui.TestSuitePanel)</name>
                <outbound type="class" confirmed="no">javax.swing.JTree</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fTree</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fireTestChanged(junit.framework.Test, boolean)</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestTreeModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addError(junit.framework.Test)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fireTestChanged(junit.framework.Test, boolean)</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestTreeModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addFailure(junit.framework.Test)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel.endTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fireTestChanged(junit.framework.Test, boolean)</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestTreeModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addRunTest(junit.framework.Test)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel.fModel</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestTreeModel</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.access$0(junit.swingui.TestSuitePanel)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.endTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.showTestTree(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel.fScrollTree</name>
                <outbound type="class" confirmed="no">javax.swing.JScrollPane</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel.fTree</name>
                <outbound type="class" confirmed="no">javax.swing.JTree</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.TestSuitePanel()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.access$1(junit.swingui.TestSuitePanel)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.getSelectedTest()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.getTree()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.showTestTree(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel.fireTestChanged(junit.framework.Test, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="feature" confirmed="no">javax.swing.SwingUtilities.invokeLater(java.lang.Runnable)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.TestSuitePanel$1(junit.swingui.TestSuitePanel, junit.framework.Test, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.endTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel.getSelectedTest()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTree</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTree.getSelectionPaths()</outbound>
                <outbound type="class" confirmed="no">javax.swing.tree.TreePath</outbound>
                <outbound type="feature" confirmed="no">javax.swing.tree.TreePath.getLastPathComponent()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fTree</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.getSelectedTest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel.getTree()</name>
                <outbound type="class" confirmed="no">javax.swing.JTree</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fTree</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.TestHierarchyRunView(junit.swingui.TestRunContext)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel.showTestTree(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">javax.swing.JTree</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTree.setCellRenderer(javax.swing.tree.TreeCellRenderer)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTree.setModel(javax.swing.tree.TreeModel)</outbound>
                <outbound type="class" confirmed="no">javax.swing.tree.TreeCellRenderer</outbound>
                <outbound type="class" confirmed="no">javax.swing.tree.TreeModel</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.TestSuitePanel$TestTreeCellRenderer()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fTree</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestTreeModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.TestTreeModel(junit.framework.Test)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.aboutToStart(junit.framework.Test, junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel.startTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestSuitePanel$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel$1.TestSuitePanel$1(junit.swingui.TestSuitePanel, junit.framework.Test, boolean)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSuitePanel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.val$expand</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.val$test</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fireTestChanged(junit.framework.Test, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel$1.run()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector()</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.copyInto(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTree</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTree.scrollPathToVisible(javax.swing.tree.TreePath)</outbound>
                <outbound type="class" confirmed="no">javax.swing.tree.TreePath</outbound>
                <outbound type="feature" confirmed="no">javax.swing.tree.TreePath.TreePath(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">javax.swing.tree.TreePath.getLastPathComponent()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestSuitePanel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.val$expand</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.val$test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.access$0(junit.swingui.TestSuitePanel)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.access$1(junit.swingui.TestSuitePanel)</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestTreeModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.findTest(junit.framework.Test, junit.framework.Test, java.util.Vector)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fireNodeChanged(javax.swing.tree.TreePath, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getChild(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getRoot()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel$1.this$0</name>
                <outbound type="class" confirmed="yes">junit.swingui.TestSuitePanel</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.TestSuitePanel$1(junit.swingui.TestSuitePanel, junit.framework.Test, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel$1.val$expand</name>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.TestSuitePanel$1(junit.swingui.TestSuitePanel, junit.framework.Test, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel$1.val$test</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.TestSuitePanel$1(junit.swingui.TestSuitePanel, junit.framework.Test, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestSuitePanel$TestTreeCellRenderer</name>
            <outbound type="class" confirmed="no">javax.swing.tree.DefaultTreeCellRenderer</outbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel$TestTreeCellRenderer.TestSuitePanel$TestTreeCellRenderer()</name>
                <outbound type="feature" confirmed="no">javax.swing.tree.DefaultTreeCellRenderer.DefaultTreeCellRenderer()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.loadIcons()</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.showTestTree(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel$TestTreeCellRenderer.fErrorIcon</name>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.loadIcons()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel$TestTreeCellRenderer.fFailureIcon</name>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.loadIcons()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel$TestTreeCellRenderer.fOkIcon</name>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.loadIcons()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</name>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <outbound type="class" confirmed="no">javax.swing.JComponent</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComponent.setToolTipText(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JLabel.getText()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JLabel.setIcon(javax.swing.Icon)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JLabel.setText(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTree</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTree.getModel()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.tree.DefaultTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</outbound>
                <outbound type="class" confirmed="no">javax.swing.tree.TreeModel</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.fErrorIcon</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.fFailureIcon</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.fOkIcon</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.stripParenthesis(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.swingui.TestTreeModel</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isError(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isFailure(junit.framework.Test)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.wasRun(junit.framework.Test)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel$TestTreeCellRenderer.loadIcons()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.Icon</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestRunner.getIconResource(java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.fErrorIcon</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.fFailureIcon</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.fOkIcon</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.TestSuitePanel$TestTreeCellRenderer()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestSuitePanel$TestTreeCellRenderer.stripParenthesis(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.swingui.TestTreeModel</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.swing.tree.TreeModel</outbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.access$0(junit.swingui.TestSuitePanel)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.endTest(junit.framework.Test)</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.fModel</inbound>
            <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.showTestTree(junit.framework.Test)</inbound>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.TestTreeModel(junit.framework.Test)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Hashtable</outbound>
                <outbound type="feature" confirmed="no">java.util.Hashtable.Hashtable()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.Vector()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fErrors</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fFailures</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fModelListeners</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fRoot</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fRunTests</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.showTestTree(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.addError(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Hashtable</outbound>
                <outbound type="feature" confirmed="no">java.util.Hashtable.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fErrors</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.addError(junit.framework.Test, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.addFailure(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Hashtable</outbound>
                <outbound type="feature" confirmed="no">java.util.Hashtable.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fFailures</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.addRunTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Hashtable</outbound>
                <outbound type="feature" confirmed="no">java.util.Hashtable.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fRunTests</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel.endTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.addTreeModelListener(javax.swing.event.TreeModelListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.addElement(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.swing.event.TreeModelListener</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fModelListeners</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.fErrors</name>
                <outbound type="class" confirmed="no">java.util.Hashtable</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.TestTreeModel(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addError(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isError(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.resetResults()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.fFailures</name>
                <outbound type="class" confirmed="no">java.util.Hashtable</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.TestTreeModel(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.resetResults()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.fModelListeners</name>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.TestTreeModel(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addTreeModelListener(javax.swing.event.TreeModelListener)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fireNodeChanged(javax.swing.tree.TreePath, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.removeTreeModelListener(javax.swing.event.TreeModelListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.fRoot</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.TestTreeModel(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getRoot()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.fRunTests</name>
                <outbound type="class" confirmed="no">java.util.Hashtable</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.TestTreeModel(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.addRunTest(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.resetResults()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.wasRun(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.findTest(junit.framework.Test, junit.framework.Test, java.util.Vector)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.insertElementAt(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.size()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestSuite</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getChildCount(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isTestSuite(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.fireNodeChanged(javax.swing.tree.TreePath, int)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.elements()</outbound>
                <outbound type="class" confirmed="no">javax.swing.event.TreeModelEvent</outbound>
                <outbound type="feature" confirmed="no">javax.swing.event.TreeModelEvent.TreeModelEvent(java.lang.Object, javax.swing.tree.TreePath, int[], java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">javax.swing.event.TreeModelListener</outbound>
                <outbound type="feature" confirmed="no">javax.swing.event.TreeModelListener.treeNodesChanged(javax.swing.event.TreeModelEvent)</outbound>
                <outbound type="class" confirmed="no">javax.swing.tree.TreePath</outbound>
                <outbound type="feature" confirmed="no">javax.swing.tree.TreePath.getLastPathComponent()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fModelListeners</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getChild(java.lang.Object, int)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.getChild(java.lang.Object, int)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestSuite</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.testAt(int)</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isTestSuite(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fireNodeChanged(javax.swing.tree.TreePath, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.getChildCount(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestSuite</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.testCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isTestSuite(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.findTest(junit.framework.Test, junit.framework.Test, java.util.Vector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.getIndexOfChild(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestSuite</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.tests()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isTestSuite(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.getRoot()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fRoot</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestHierarchyRunView.revealFailure(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.isError(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Hashtable</outbound>
                <outbound type="feature" confirmed="no">java.util.Hashtable.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fErrors</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.isFailure(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Hashtable</outbound>
                <outbound type="feature" confirmed="no">java.util.Hashtable.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fFailures</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.isLeaf(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestSuite</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isTestSuite(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.isTestSuite(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">junit.extensions.TestDecorator</outbound>
                <outbound type="feature" confirmed="yes">junit.extensions.TestDecorator.getTest()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestSuite</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.findTest(junit.framework.Test, junit.framework.Test, java.util.Vector)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getChild(java.lang.Object, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getChildCount(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.getIndexOfChild(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.isLeaf(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.removeTreeModelListener(javax.swing.event.TreeModelListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Vector</outbound>
                <outbound type="feature" confirmed="no">java.util.Vector.removeElement(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.swing.event.TreeModelListener</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fModelListeners</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.resetResults()</name>
                <outbound type="class" confirmed="no">java.util.Hashtable</outbound>
                <outbound type="feature" confirmed="no">java.util.Hashtable.Hashtable()</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fErrors</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fFailures</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fRunTests</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
                <outbound type="class" confirmed="no">javax.swing.tree.TreePath</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.swingui.TestTreeModel.wasRun(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Hashtable</outbound>
                <outbound type="feature" confirmed="no">java.util.Hashtable.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.swingui.TestTreeModel.fRunTests</outbound>
                <inbound type="feature" confirmed="yes">junit.swingui.TestSuitePanel$TestTreeCellRenderer.getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>junit.textui</name>
        <class confirmed="yes">
            <name>junit.textui.ResultPrinter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(java.io.PrintStream)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.fPrinter</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            <inbound type="feature" confirmed="yes">junit.textui.TestRunner.setPrinter(junit.textui.ResultPrinter)</inbound>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.fColumn</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.fWriter</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(java.io.PrintStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.AssertionFailedError</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.elapsedTimeAsString(long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.text.NumberFormat</outbound>
                <outbound type="feature" confirmed="no">java.text.NumberFormat.format(double)</outbound>
                <outbound type="feature" confirmed="no">java.text.NumberFormat.getInstance()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.endTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.fColumn</name>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.fWriter</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.getWriter()</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.fWriter</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addError(junit.framework.Test, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.addFailure(junit.framework.Test, junit.framework.AssertionFailedError)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.startTest(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printHeader(long)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printDefect(junit.framework.TestFailure, int)</name>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printDefectHeader(junit.framework.TestFailure, int)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.failedTest()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefect(junit.framework.TestFailure, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printDefectTrace(junit.framework.TestFailure)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestFailure.trace()</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getFilteredTrace(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefect(junit.framework.TestFailure, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestFailure</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefect(junit.framework.TestFailure, int)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printErrors(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errors()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printFailures(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.failures()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printFooter(junit.framework.TestResult)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.errorCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.failureCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.runCount()</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printHeader(long)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.elapsedTimeAsString(long)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.printWaitPrompt()</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.ResultPrinter.startTest(junit.framework.Test)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.print(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.fColumn</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.getWriter()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>junit.textui.TestRunner</name>
            <outbound type="class" confirmed="yes">junit.runner.BaseTestRunner</outbound>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.EXCEPTION_EXIT</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.FAILURE_EXIT</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.SUCCESS_EXIT</name>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.TestRunner()</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(java.io.PrintStream)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runAndWait(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.TestRunner(java.io.PrintStream)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</name>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.BaseTestRunner()</outbound>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.fPrinter</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(java.io.PrintStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.createTestResult()</name>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.TestResult()</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.doRun(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(junit.framework.Test)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</name>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.Test.run(junit.framework.TestResult)</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestListener</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.addListener(junit.framework.TestListener)</outbound>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.print(junit.framework.TestResult, long)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.createTestResult()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.fPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.runAndWait(junit.framework.Test)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.fPrinter</name>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.pause(boolean)</inbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.setPrinter(junit.textui.ResultPrinter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.getLoader()</name>
                <outbound type="feature" confirmed="yes">junit.runner.StandardTestSuiteLoader.StandardTestSuiteLoader()</outbound>
                <outbound type="class" confirmed="yes">junit.runner.TestSuiteLoader</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.main(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.err</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.exit(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestResult.wasSuccessful()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.start(java.lang.String[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.pause(boolean)</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.read()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.in</outbound>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.ResultPrinter.printWaitPrompt()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.fPrinter</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.run(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.framework.TestSuite.TestSuite(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.run(junit.framework.Test)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.run(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.run(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.runAndWait(junit.framework.Test)</name>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.TestRunner()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.runFailed(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.err</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.exit(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.setPrinter(junit.textui.ResultPrinter)</name>
                <outbound type="class" confirmed="yes">junit.textui.ResultPrinter</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.fPrinter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.start(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.Exception(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.err</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
                <outbound type="class" confirmed="yes">junit.framework.TestResult</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.extractClassName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.BaseTestRunner.getTest(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">junit.runner.Version.id()</outbound>
                <outbound type="feature" confirmed="yes">junit.textui.TestRunner.doRun(junit.framework.Test, boolean)</outbound>
                <inbound type="feature" confirmed="yes">junit.textui.TestRunner.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.testEnded(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.testFailed(int, junit.framework.Test, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">junit.framework.Test</outbound>
            </feature>
            <feature confirmed="yes">
                <name>junit.textui.TestRunner.testStarted(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
    </package>
</dependencies>
