<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE dependencies SYSTEM "http://depfind.sourceforge.net/dtd/dependencies.dtd">

<dependencies>
    <package confirmed="yes">
        <name>com.sun.enterprise.glassfish.bootstrap</name>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.ASMain</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain.ASMain()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain.PLATFORM_PROPERTY_KEY</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain.logger</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$1.$SwitchMap$com$sun$enterprise$glassfish$bootstrap$ASMain$Platform</outbound>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.Felix</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.ordinal()</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.toString()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.valueOf(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.logger</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.ASMainEquinox(java.util.logging.Logger, java.lang.String[])</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.run()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.ASMainFelix(java.util.logging.Logger, java.lang.String[])</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.run()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.ASMainKnopflerFish(java.util.logging.Logger, java.lang.String[])</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.run()</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getenv(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.setProperty(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.info(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.logger</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getAnonymousLogger()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.ASMain$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain$1.$SwitchMap$com$sun$enterprise$glassfish$bootstrap$ASMain$Platform</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain$1.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$1.$SwitchMap$com$sun$enterprise$glassfish$bootstrap$ASMain$Platform</outbound>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.Equinox</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.Felix</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.HK2</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.KnopflerFish</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.Knopflerfish</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.ordinal()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.values()</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchFieldError</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.ASMain$Platform</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$1.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.$VALUES</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.ASMain$Platform(java.lang.String, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.Equinox</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.Felix</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.HK2</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.KnopflerFish</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.Knopflerfish</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.ordinal()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$1.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.ASMain$Platform(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.Equinox</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.Felix</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.HK2</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.KnopflerFish</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.Knopflerfish</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.values()</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.$VALUES</outbound>
                <outbound type="class" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform[]</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform[].clone()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$1.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.enterprise.glassfish.bootstrap.ASMain$Platform[]</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.values()</inbound>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMain$Platform[].clone()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.values()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox</name>
            <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi</outbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.ASMainEquinox$1(com.sun.enterprise.glassfish.bootstrap.ASMainEquinox, java.lang.reflect.Method, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.this$0</inbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.ASMainEquinox(java.util.logging.Logger, java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</name>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.fwDir</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.pluginsDir</outbound>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.fwDir</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.setFwDir()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.getFWMainClassName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.glassfishDir</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.setFwDir()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.ASMainEquinox$1(com.sun.enterprise.glassfish.bootstrap.ASMainEquinox, java.lang.reflect.Method, java.lang.String[])</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.fwDir</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.getFWMainClassName()</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launcherCL</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.logger</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getCanonicalPath()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.loadClass(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.setProperty(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.Thread(java.lang.Runnable, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.join()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.start()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.info(java.lang.String)</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launcherCL</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.logger</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.pluginsDir</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.run()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.setFwDir()</name>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.fwDir</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.glassfishDir</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.pluginsDir</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsolutePath()</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getenv(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.pluginsDir</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.ASMainEquinox$1(com.sun.enterprise.glassfish.bootstrap.ASMainEquinox, java.lang.reflect.Method, java.lang.String[])</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.val$args</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.val$m</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.run()</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.val$args</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.val$m</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.ASMainEquinox$1(com.sun.enterprise.glassfish.bootstrap.ASMainEquinox, java.lang.reflect.Method, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.val$args</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.ASMainEquinox$1(com.sun.enterprise.glassfish.bootstrap.ASMainEquinox, java.lang.reflect.Method, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.val$m</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.ASMainEquinox$1(com.sun.enterprise.glassfish.bootstrap.ASMainEquinox, java.lang.reflect.Method, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix</name>
            <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi</outbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.ASMainFelix$1(com.sun.enterprise.glassfish.bootstrap.ASMainFelix, java.lang.reflect.Method, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.this$0</inbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix.ASMainFelix(java.util.logging.Logger, java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix.FELIX_HOME</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</name>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.fwDir</outbound>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix.domainDir</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix.fwDir</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.setFwDir()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix.getFWMainClassName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix.glassfishDir</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.setFwDir()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix.helper</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.ASMainFelix$1(com.sun.enterprise.glassfish.bootstrap.ASMainFelix, java.lang.reflect.Method, java.lang.String[])</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.domainDir</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.fwDir</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.getFWMainClassName()</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.glassfishDir</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.helper</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launcherCL</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.logger</outbound>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getCanonicalPath()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.toURI()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.loadClass(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.setProperty(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.Thread(java.lang.Runnable, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.join()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.setDaemon(boolean)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.start()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toString()</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toURL()</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.fine(java.lang.String)</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launcherCL</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix.logger</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix.run()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix.setFwDir()</name>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.fwDir</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.glassfishDir</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsolutePath()</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getenv(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.ASMainFelix$1(com.sun.enterprise.glassfish.bootstrap.ASMainFelix, java.lang.reflect.Method, java.lang.String[])</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.val$args</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.val$m</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.run()</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.val$args</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.val$m</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.ASMainFelix$1(com.sun.enterprise.glassfish.bootstrap.ASMainFelix, java.lang.reflect.Method, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.val$args</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.ASMainFelix$1(com.sun.enterprise.glassfish.bootstrap.ASMainFelix, java.lang.reflect.Method, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.val$m</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.ASMainFelix$1(com.sun.enterprise.glassfish.bootstrap.ASMainFelix, java.lang.reflect.Method, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$1.ASMainHelper$1(com.sun.enterprise.glassfish.bootstrap.ASMainHelper)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.ASMainHelper$PlainJarRepository(com.sun.enterprise.glassfish.bootstrap.ASMainHelper, java.lang.String, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.this$0</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.helper</inbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.ASMainHelper(java.util.logging.Logger)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.logger</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.DEFAULT_DOMAINS_DIR_PROPNAME</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.INSTANCE_ROOT_PROP_NAME</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.absolutize(java.io.File)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsoluteFile()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getCanonicalFile()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomainsDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.verifyDomainRoot(java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.addPaths(java.io.File, java.lang.String[], java.util.List)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getName()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.listFiles()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.toURI()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.net.MalformedURLException</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toURL()</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.deleteRecursive(java.io.File)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.delete()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isFile()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.listFiles()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getAsEnvConf(java.io.File)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomain(java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$1.ASMainHelper$1(com.sun.enterprise.glassfish.bootstrap.ASMainHelper)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.listFiles(java.io.FileFilter)</outbound>
                <outbound type="class" confirmed="no">java.io.FileFilter</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDomainRoot(com.sun.enterprise.module.bootstrap.StartupContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomainsDir()</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.absolutize(java.io.File)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.ok(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isDirectory()</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDomainRoot(com.sun.enterprise.module.bootstrap.StartupContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDomainRoot(com.sun.enterprise.module.bootstrap.StartupContext)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomain(java.io.File)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomainsDir()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getParam(java.util.Properties, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.ok(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.sun.enterprise.module.bootstrap.StartupContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.module.bootstrap.StartupContext.getArguments()</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsJar()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getParent()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.separator</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsRepo()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsRepo()</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.ASMainHelper$PlainJarRepository(com.sun.enterprise.glassfish.bootstrap.ASMainHelper, java.lang.String, java.io.File)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsJar()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.logger</outbound>
                <outbound type="class" confirmed="no">com.sun.enterprise.module.Repository</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.module.Repository.initialize()</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.SEVERE</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getLastModified(java.io.File, long)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isDirectory()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.lastModified()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.listFiles()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getParam(java.util.Properties, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.getProperty(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDomainRoot(com.sun.enterprise.module.bootstrap.StartupContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.logger</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.ASMainHelper(java.util.logging.Logger)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsRepo()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.ok(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomainsDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDomainRoot(com.sun.enterprise.module.bootstrap.StartupContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getAsEnvConf(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsolutePath()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getPath()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isAbsolute()</outbound>
                <outbound type="feature" confirmed="no">java.io.FileReader.FileReader(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.LineNumberReader.LineNumberReader(java.io.Reader)</outbound>
                <outbound type="feature" confirmed="no">java.io.LineNumberReader.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.LineNumberReader.readLine()</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperties()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.setProperties(java.util.Properties)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.Properties()</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.putAll(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Matcher</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Matcher.group(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Matcher.matches()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.compile(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.matcher(java.lang.CharSequence)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.deleteRecursive(java.io.File)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getLastModified(java.io.File, long)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.logger</outbound>
                <outbound type="feature" confirmed="no">java.io.BufferedInputStream.BufferedInputStream(java.io.InputStream)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.createNewFile()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.delete()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getName()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getParentFile()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isDirectory()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.mkdirs()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.toURI()</outbound>
                <outbound type="feature" confirmed="no">java.io.FileInputStream.FileInputStream(java.io.File)</outbound>
                <outbound type="feature" confirmed="no">java.io.FileOutputStream.FileOutputStream(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectOutputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.Long(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.parseLong(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toURL()</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.toString()</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.Properties()</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.clear()</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.getProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.load(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.store(java.io.OutputStream, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.info(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.warning(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.logger</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</outbound>
                <outbound type="class" confirmed="no">com.sun.enterprise.module.Repository</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.module.Repository.getJarLocations()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.net.MalformedURLException</outbound>
                <outbound type="feature" confirmed="no">java.net.MalformedURLException.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toURL()</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.warning(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper.verifyDomainRoot(java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.absolutize(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.canWrite()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getPath()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isDirectory()</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.setProperty(java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper$1</name>
            <outbound type="class" confirmed="no">java.io.FileFilter</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper$1.ASMainHelper$1(com.sun.enterprise.glassfish.bootstrap.ASMainHelper)</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$1.this$0</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomain(java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper$1.accept(java.io.File)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isDirectory()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper$1.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$1.ASMainHelper$1(com.sun.enterprise.glassfish.bootstrap.ASMainHelper)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository</name>
            <outbound type="class" confirmed="no">com.sun.enterprise.module.common_impl.AbstractRepositoryImpl</outbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.ASMainHelper$PlainJarRepository(com.sun.enterprise.glassfish.bootstrap.ASMainHelper, java.lang.String, java.io.File)</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.aFile</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.this$0</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.module.common_impl.AbstractRepositoryImpl.AbstractRepositoryImpl(java.lang.String, java.net.URI)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.toURI()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsRepo()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.aFile</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.ASMainHelper$PlainJarRepository(com.sun.enterprise.glassfish.bootstrap.ASMainHelper, java.lang.String, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.loadModuleDefs(java.util.Map, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.loadModuleDefs(java.util.Map, java.util.List)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.aFile</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.toURI()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.ASMainHelper$PlainJarRepository(com.sun.enterprise.glassfish.bootstrap.ASMainHelper, java.lang.String, java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish</name>
            <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi</outbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.ASMainKnopflerFish$1(com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish, java.lang.reflect.Method, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.this$0</inbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.ASMainKnopflerFish(java.util.logging.Logger, java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</name>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.fwDir</outbound>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.fwDir</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.setFwDir()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.getFWMainClassName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.glassfishDir</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.setFwDir()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.helper</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.ASMainKnopflerFish$1(com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish, java.lang.reflect.Method, java.lang.String[])</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.fwDir</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.getFWMainClassName()</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.glassfishDir</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.helper</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launcherCL</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.logger</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsolutePath()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getCanonicalPath()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.toURI()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.loadClass(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.setProperty(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.Thread(java.lang.Runnable, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.join()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.start()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toString()</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toURL()</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.info(java.lang.String)</outbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launcherCL</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.logger</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.run()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.setFwDir()</name>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.fwDir</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.glassfishDir</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsolutePath()</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getenv(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.ASMainKnopflerFish$1(com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish, java.lang.reflect.Method, java.lang.String[])</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.val$args</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.val$m</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.run()</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.val$args</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.val$m</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.ASMainKnopflerFish$1(com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish, java.lang.reflect.Method, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.val$args</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.ASMainKnopflerFish$1(com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish, java.lang.reflect.Method, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.val$m</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.ASMainKnopflerFish$1(com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish, java.lang.reflect.Method, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox</inbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix</inbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish</inbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getAnonymousLogger()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.ASMainHelper(java.util.logging.Logger)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDomainRoot(com.sun.enterprise.module.bootstrap.StartupContext)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.verifyDomainRoot(java.io.File)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.additionalJars</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.bootstrapFile</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.context</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.domainDir</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findBootstrapFile()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.glassfishDir</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.helper</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.logger</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setFwDir()</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.module.bootstrap.ArgumentManager.argsToMap(java.lang.String[])</outbound>
                <outbound type="class" confirmed="no">com.sun.enterprise.module.bootstrap.StartupContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.module.bootstrap.StartupContext.StartupContext(java.io.File, java.lang.String[])</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.toString()</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getParentFile()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.Long(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.setProperty(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Properties</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Properties.store(java.io.OutputStream, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.info(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.ASMainEquinox(java.util.logging.Logger, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.ASMainFelix(java.util.logging.Logger, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.ASMainKnopflerFish(java.util.logging.Logger, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsJar()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.helper</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.logger</outbound>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Error.Error(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.fine(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.additionalJars</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.bootstrapFile</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findBootstrapFile()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.context</name>
                <outbound type="class" confirmed="no">com.sun.enterprise.module.bootstrap.StartupContext</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.domainDir</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findBootstrapFile()</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.bootstrapFile</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.module.bootstrap.Which.jarFile(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findDerbyClient(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.logger</outbound>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.compareTo(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.info(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.fwDir</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.glassfishDir</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.helper</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.launchOSGiFW()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.launcherCL</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.logger</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findDerbyClient(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.run()</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.glassfishDir</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.launchOSGiFW()</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsolutePath()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.setProperty(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setFwDir()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.additionalJars</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.context</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findDerbyClient(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.launcherCL</outbound>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.ClassPathBuilder(java.lang.ClassLoader)</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.create()</outbound>
                <outbound type="class" confirmed="no">com.sun.enterprise.module.bootstrap.StartupContext</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.module.bootstrap.StartupContext.getRootDirectory()</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getParentFile()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.getParent()</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.getSystemClassLoader()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Error.Error(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findDerbyClient(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.ClassPathBuilder$1(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.this$0</inbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.ClassPathBuilder(java.lang.ClassLoader)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.parent</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.urls</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addClassFolder(java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getName()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.listFiles()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Matcher</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Matcher.matches()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.compile(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.matcher(java.lang.CharSequence)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findDerbyClient(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.urls</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.toURI()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toURL()</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addClassFolder(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.ClassPathBuilder$1(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder, java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isDirectory()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.listFiles(java.io.FileFilter)</outbound>
                <outbound type="class" confirmed="no">java.io.FileFilter</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.create()</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.parent</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.urls</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URLClassLoader.URLClassLoader(java.net.URL[], java.lang.ClassLoader)</outbound>
                <outbound type="class" confirmed="no">java.net.URL[]</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.toArray(java.lang.Object[])</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.createExtensible(java.util.List)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.parent</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.urls</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="class" confirmed="no">java.net.URL[]</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.toArray(java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.parent</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.ClassPathBuilder(java.lang.ClassLoader)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.create()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.createExtensible(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.urls</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.ClassPathBuilder(java.lang.ClassLoader)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.create()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.createExtensible(java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1</name>
            <outbound type="class" confirmed="no">java.io.FileFilter</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.ClassPathBuilder$1(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder, java.lang.String[])</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.val$excludes</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.accept(java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.val$excludes</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getName()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getPath()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.ClassPathBuilder$1(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.val$excludes</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.ClassPathBuilder$1(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.accept(java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader</name>
            <outbound type="class" confirmed="no">com.sun.enterprise.module.RepositoryChangeListener</outbound>
            <outbound type="class" confirmed="no">java.net.URLClassLoader</outbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.addURI(java.net.URI)</outbound>
                <outbound type="class" confirmed="no">com.sun.enterprise.module.Repository</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.module.Repository.addListener(com.sun.enterprise.module.RepositoryChangeListener)</outbound>
                <outbound type="feature" confirmed="no">com.sun.enterprise.module.Repository.getJarLocations()</outbound>
                <outbound type="class" confirmed="no">com.sun.enterprise.module.RepositoryChangeListener</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URLClassLoader.URLClassLoader(java.net.URL[], java.lang.ClassLoader)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.info(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.createExtensible(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.addURI(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.added(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.addURI(java.net.URI)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.LOGGER</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.MalformedURLException</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toURL()</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URLClassLoader.addURL(java.net.URL)</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.SEVERE</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.added(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.added(java.net.URI)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.addURI(java.net.URI)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.net.URI)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isDirectory()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.info(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.jarAdded(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.jarAdded(java.net.URI)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.added(java.net.URI)</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.jarRemoved(java.net.URI)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.removed(java.net.URI)</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.moduleAdded(com.sun.enterprise.module.ModuleDefinition)</name>
                <outbound type="class" confirmed="no">com.sun.enterprise.module.ModuleDefinition</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.moduleRemoved(com.sun.enterprise.module.ModuleDefinition)</name>
                <outbound type="class" confirmed="no">com.sun.enterprise.module.ModuleDefinition</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.removed(java.net.URI)</name>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.jarRemoved(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.static {}</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.LOGGER</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.GFModuleDefinition</name>
            <outbound type="class" confirmed="no">com.sun.enterprise.module.common_impl.DefaultModuleDefinition</outbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.GFModuleDefinition.GFModuleDefinition(java.io.File)</name>
                <outbound type="feature" confirmed="no">com.sun.enterprise.module.common_impl.DefaultModuleDefinition.DefaultModuleDefinition(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.GFRepository.loadJar(java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.GFRepository</name>
            <outbound type="class" confirmed="no">com.sun.enterprise.module.common_impl.DirectoryBasedRepository</outbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.GFRepository.GFRepository(java.lang.String, java.io.File)</name>
                <outbound type="feature" confirmed="no">com.sun.enterprise.module.common_impl.DirectoryBasedRepository.DirectoryBasedRepository(java.lang.String, java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.io.FileNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.GFRepository.loadJar(java.io.File)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.GFModuleDefinition.GFModuleDefinition(java.io.File)</outbound>
                <outbound type="class" confirmed="no">com.sun.enterprise.module.ModuleDefinition</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader</name>
            <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.MaskingClassLoader$1(com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.this$0</inbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.delegate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.getMaskingClassLoader(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.masks</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.ClassLoader(java.lang.ClassLoader)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="class" confirmed="no">java.net.URLClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.net.URLClassLoader.URLClassLoader(java.net.URL[], java.lang.ClassLoader)</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.util.Collection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.util.Collection)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.lang.String[])</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.String[]</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.toArray(java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.delegate</name>
                <outbound type="class" confirmed="no">java.net.URLClassLoader</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.loadClass(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.getMaskingClassLoader(java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.MaskingClassLoader$1(com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader, java.lang.String[])</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.loadClass(java.lang.String, boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.delegate</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.masks</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.loadClass(java.lang.String, boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.net.URLClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.net.URLClassLoader.loadClass(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.masks</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.loadClass(java.lang.String, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1</name>
            <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.MaskingClassLoader$1(com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader, java.lang.String[])</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.val$masks</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.ClassLoader()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.getMaskingClassLoader(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.loadClass(java.lang.String, boolean)</name>
                <outbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.val$masks</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.loadClass(java.lang.String, boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassNotFoundException.ClassNotFoundException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.this$0</name>
                <outbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.MaskingClassLoader$1(com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.val$masks</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.MaskingClassLoader$1(com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.loadClass(java.lang.String, boolean)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.enterprise.module</name>
        <class confirmed="no">
            <name>com.sun.enterprise.module.ModuleDefinition</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.moduleAdded(com.sun.enterprise.module.ModuleDefinition)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.moduleRemoved(com.sun.enterprise.module.ModuleDefinition)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.GFRepository.loadJar(java.io.File)</inbound>
        </class>
        <class confirmed="no">
            <name>com.sun.enterprise.module.Repository</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsRepo()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
            <feature confirmed="no">
                <name>com.sun.enterprise.module.Repository.addListener(com.sun.enterprise.module.RepositoryChangeListener)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.module.Repository.getJarLocations()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.module.Repository.initialize()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsRepo()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.enterprise.module.RepositoryChangeListener</name>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.enterprise.module.bootstrap</name>
        <class confirmed="no">
            <name>com.sun.enterprise.module.bootstrap.ArgumentManager</name>
            <feature confirmed="no">
                <name>com.sun.enterprise.module.bootstrap.ArgumentManager.argsToMap(java.lang.String[])</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.enterprise.module.bootstrap.StartupContext</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDomainRoot(com.sun.enterprise.module.bootstrap.StartupContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.context</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            <feature confirmed="no">
                <name>com.sun.enterprise.module.bootstrap.StartupContext.StartupContext(java.io.File, java.lang.String[])</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.module.bootstrap.StartupContext.getArguments()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDomainRoot(com.sun.enterprise.module.bootstrap.StartupContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.sun.enterprise.module.bootstrap.StartupContext.getRootDirectory()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.enterprise.module.bootstrap.Which</name>
            <feature confirmed="no">
                <name>com.sun.enterprise.module.bootstrap.Which.jarFile(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findBootstrapFile()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.enterprise.module.common_impl</name>
        <class confirmed="no">
            <name>com.sun.enterprise.module.common_impl.AbstractRepositoryImpl</name>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository</inbound>
            <feature confirmed="no">
                <name>com.sun.enterprise.module.common_impl.AbstractRepositoryImpl.AbstractRepositoryImpl(java.lang.String, java.net.URI)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.ASMainHelper$PlainJarRepository(com.sun.enterprise.glassfish.bootstrap.ASMainHelper, java.lang.String, java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.enterprise.module.common_impl.DefaultModuleDefinition</name>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.GFModuleDefinition</inbound>
            <feature confirmed="no">
                <name>com.sun.enterprise.module.common_impl.DefaultModuleDefinition.DefaultModuleDefinition(java.io.File)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.GFModuleDefinition.GFModuleDefinition(java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.sun.enterprise.module.common_impl.DirectoryBasedRepository</name>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.GFRepository</inbound>
            <feature confirmed="no">
                <name>com.sun.enterprise.module.common_impl.DirectoryBasedRepository.DirectoryBasedRepository(java.lang.String, java.io.File)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.GFRepository.GFRepository(java.lang.String, java.io.File)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.io</name>
        <class confirmed="no">
            <name>java.io.BufferedInputStream</name>
            <feature confirmed="no">
                <name>java.io.BufferedInputStream.BufferedInputStream(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ByteArrayOutputStream</name>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.ByteArrayOutputStream()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.File</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.pluginsDir</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.setFwDir()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.setFwDir()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$1.accept(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.ASMainHelper$PlainJarRepository(com.sun.enterprise.glassfish.bootstrap.ASMainHelper, java.lang.String, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.aFile</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.loadModuleDefs(java.util.Map, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.absolutize(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.addPaths(java.io.File, java.lang.String[], java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.deleteRecursive(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getAsEnvConf(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomain(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomainsDir()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDomainRoot(com.sun.enterprise.module.bootstrap.StartupContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsJar()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsRepo()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getLastModified(java.io.File, long)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.verifyDomainRoot(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.setFwDir()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.bootstrapFile</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.domainDir</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findBootstrapFile()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findDerbyClient(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.fwDir</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.glassfishDir</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.accept(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addClassFolder(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.GFModuleDefinition.GFModuleDefinition(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.GFRepository.GFRepository(java.lang.String, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.GFRepository.loadJar(java.io.File)</inbound>
            <feature confirmed="no">
                <name>java.io.File.File(java.io.File, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getAsEnvConf(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDomainRoot(com.sun.enterprise.module.bootstrap.StartupContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.verifyDomainRoot(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findDerbyClient(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.File(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomainsDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDomainRoot(com.sun.enterprise.module.bootstrap.StartupContext)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsJar()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findDerbyClient(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.File(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsJar()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findDerbyClient(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.File(java.net.URI)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.added(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.canWrite()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.verifyDomainRoot(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.createNewFile()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.delete()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.deleteRecursive(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.exists()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.loadModuleDefs(java.util.Map, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsRepo()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.verifyDomainRoot(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findDerbyClient(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getAbsoluteFile()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.absolutize(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getAbsolutePath()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getCanonicalFile()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.absolutize(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getCanonicalPath()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getName()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.addPaths(java.io.File, java.lang.String[], java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.accept(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getParent()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsJar()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getParentFile()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getPath()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.verifyDomainRoot(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.accept(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.isAbsolute()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.isDirectory()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$1.accept(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomainsDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getLastModified(java.io.File, long)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.verifyDomainRoot(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.added(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.isFile()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.deleteRecursive(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.lastModified()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getLastModified(java.io.File, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.listFiles()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.addPaths(java.io.File, java.lang.String[], java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.deleteRecursive(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getLastModified(java.io.File, long)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.listFiles(java.io.FileFilter)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomain(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.mkdirs()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.separator</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsJar()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.toURI()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.ASMainHelper$PlainJarRepository(com.sun.enterprise.glassfish.bootstrap.ASMainHelper, java.lang.String, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.loadModuleDefs(java.util.Map, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.addPaths(java.io.File, java.lang.String[], java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileFilter</name>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomain(java.io.File)</inbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.FileInputStream</name>
            <feature confirmed="no">
                <name>java.io.FileInputStream.FileInputStream(java.io.File)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileNotFoundException</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.GFRepository.GFRepository(java.lang.String, java.io.File)</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.FileOutputStream</name>
            <feature confirmed="no">
                <name>java.io.FileOutputStream.FileOutputStream(java.io.File)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileReader</name>
            <feature confirmed="no">
                <name>java.io.FileReader.FileReader(java.io.File)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.IOException</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.loadModuleDefs(java.util.Map, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsRepo()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findBootstrapFile()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findDerbyClient(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addClassFolder(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.GFModuleDefinition.GFModuleDefinition(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.GFRepository.loadJar(java.io.File)</inbound>
            <feature confirmed="no">
                <name>java.io.IOException.IOException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.InputStream</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            <feature confirmed="no">
                <name>java.io.InputStream.close()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.LineNumberReader</name>
            <feature confirmed="no">
                <name>java.io.LineNumberReader.LineNumberReader(java.io.Reader)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.LineNumberReader.close()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.LineNumberReader.readLine()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ObjectOutputStream</name>
            <feature confirmed="no">
                <name>java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ObjectOutputStream.close()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.OutputStream</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.Reader</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang</name>
        <class confirmed="no">
            <name>java.lang.CharSequence</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Class</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findBootstrapFile()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.loadClass(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.loadClass(java.lang.String, boolean)</inbound>
            <feature confirmed="no">
                <name>java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getName()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassLoader</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.launcherCL</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.ClassPathBuilder(java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.create()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.createExtensible(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.parent</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader</inbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.util.Collection)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.getMaskingClassLoader(java.lang.String[])</inbound>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.ClassLoader()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.MaskingClassLoader$1(com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.ClassLoader(java.lang.ClassLoader)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.getParent()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.getSystemClassLoader()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.loadClass(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.loadClass(java.lang.String, boolean)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.loadClass(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.loadClass(java.lang.String, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassNotFoundException</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.MaskingClassLoader$1(com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.loadClass(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.loadClass(java.lang.String, boolean)</inbound>
            <feature confirmed="no">
                <name>java.lang.ClassNotFoundException.ClassNotFoundException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.loadClass(java.lang.String, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Enum</name>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.valueOf(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.Enum.Enum(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.ASMain$Platform(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.valueOf(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Error</name>
            <feature confirmed="no">
                <name>java.lang.Error.Error(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Exception</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.absolutize(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalAccessException</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.run()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Long</name>
            <feature confirmed="no">
                <name>java.lang.Long.Long(long)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Long.parseLong(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Long.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.NoSuchFieldError</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$1.static {}</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.NumberFormatException</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Object</name>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain</inbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.values()</inbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.run()</inbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.run()</inbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper</inbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.loadModuleDefs(java.util.Map, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.addPaths(java.io.File, java.lang.String[], java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomain(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.run()</inbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findBootstrapFile()</inbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder</inbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.accept(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.create()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.createExtensible(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.added(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.util.Collection)</inbound>
            <feature confirmed="no">
                <name>java.lang.Object.Object()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.ASMain()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.ASMainEquinox$1(com.sun.enterprise.glassfish.bootstrap.ASMainEquinox, java.lang.reflect.Method, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.ASMainFelix$1(com.sun.enterprise.glassfish.bootstrap.ASMainFelix, java.lang.reflect.Method, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$1.ASMainHelper$1(com.sun.enterprise.glassfish.bootstrap.ASMainHelper)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.ASMainHelper(java.util.logging.Logger)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.ASMainKnopflerFish$1(com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish, java.lang.reflect.Method, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.ClassPathBuilder$1(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.ClassPathBuilder(java.lang.ClassLoader)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.getClass()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findBootstrapFile()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Runnable</name>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.RuntimeException</name>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomain(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomainsDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.verifyDomainRoot(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findBootstrapFile()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.run()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.run()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.run()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.run()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.String</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.ASMain$Platform(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain$Platform.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.PLATFORM_PROPERTY_KEY</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.ASMainEquinox$1(com.sun.enterprise.glassfish.bootstrap.ASMainEquinox, java.lang.reflect.Method, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.val$args</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.ASMainEquinox(java.util.logging.Logger, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.getFWMainClassName()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.setFwDir()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.ASMainFelix$1(com.sun.enterprise.glassfish.bootstrap.ASMainFelix, java.lang.reflect.Method, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.val$args</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.ASMainFelix(java.util.logging.Logger, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.FELIX_HOME</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.getFWMainClassName()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.setFwDir()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.ASMainHelper$PlainJarRepository(com.sun.enterprise.glassfish.bootstrap.ASMainHelper, java.lang.String, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.DEFAULT_DOMAINS_DIR_PROPNAME</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.INSTANCE_ROOT_PROP_NAME</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.addPaths(java.io.File, java.lang.String[], java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getAsEnvConf(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomain(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomainsDir()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDomainRoot(com.sun.enterprise.module.bootstrap.StartupContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsJar()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsRepo()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getParam(java.util.Properties, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.ok(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.verifyDomainRoot(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.ASMainKnopflerFish$1(com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish, java.lang.reflect.Method, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.val$args</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.ASMainKnopflerFish(java.util.logging.Logger, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.addFrameworkJars(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.getFWMainClassName()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.setFwDir()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.additionalJars</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findBootstrapFile()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findDerbyClient(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.ClassPathBuilder$1(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.accept(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.val$excludes</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.addURI(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.added(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.GFRepository.GFRepository(java.lang.String, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.MaskingClassLoader$1(com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.loadClass(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.val$masks</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.util.Collection)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.getMaskingClassLoader(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.loadClass(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.masks</inbound>
            <feature confirmed="no">
                <name>java.lang.String.compareTo(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findDerbyClient(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.endsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.addPaths(java.io.File, java.lang.String[], java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.accept(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder$1.accept(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.indexOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getAsEnvConf(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.length()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.ok(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.startsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.addPaths(java.io.File, java.lang.String[], java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader$1.loadClass(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.loadClass(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.trim()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.StringBuilder</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.setFwDir()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.setFwDir()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomain(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomainsDir()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsJar()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getParam(java.util.Properties, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.setFwDir()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findBootstrapFile()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.added(java.net.URI)</inbound>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomain(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomainsDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsJar()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getParam(java.util.Properties, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findBootstrapFile()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.added(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(char)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomain(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findBootstrapFile()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.added(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomain(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomainsDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsJar()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getParam(java.util.Properties, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findBootstrapFile()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.added(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.length()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomain(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomainsDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsJar()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getParam(java.util.Properties, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findBootstrapFile()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJarFolder(java.io.File, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.added(java.net.URI)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.String[]</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.util.Collection)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.System</name>
            <feature confirmed="no">
                <name>java.lang.System.currentTimeMillis()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.getProperties()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.getProperty(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getAsEnvConf(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDefaultDomainsDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsJar()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findDerbyClient(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.getProperty(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.setFwDir()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.getenv(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.setFwDir()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.setFwDir()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.setProperties(java.util.Properties)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.setProperty(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.verifyDomainRoot(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.run()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Thread</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            <feature confirmed="no">
                <name>java.lang.Thread.Thread(java.lang.Runnable, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.currentThread()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.join()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.setDaemon(boolean)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.start()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Throwable</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsRepo()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.setupLauncherClassLoader()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.addURI(java.net.URI)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.reflect</name>
        <class confirmed="no">
            <name>java.lang.reflect.InvocationTargetException</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.run()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Method</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.ASMainEquinox$1(com.sun.enterprise.glassfish.bootstrap.ASMainEquinox, java.lang.reflect.Method, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.val$m</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.ASMainFelix$1(com.sun.enterprise.glassfish.bootstrap.ASMainFelix, java.lang.reflect.Method, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.val$m</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.ASMainKnopflerFish$1(com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish, java.lang.reflect.Method, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.run()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.val$m</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox$1.run()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix$1.run()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish$1.run()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.net</name>
        <class confirmed="no">
            <name>java.net.MalformedURLException</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.addPaths(java.io.File, java.lang.String[], java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.addURI(java.net.URI)</inbound>
            <feature confirmed="no">
                <name>java.net.MalformedURLException.getMessage()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.URI</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.ASMainHelper$PlainJarRepository(com.sun.enterprise.glassfish.bootstrap.ASMainHelper, java.lang.String, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.loadModuleDefs(java.util.Map, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.addPaths(java.io.File, java.lang.String[], java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.addURI(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.added(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.jarAdded(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.jarRemoved(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.removed(java.net.URI)</inbound>
            <feature confirmed="no">
                <name>java.net.URI.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.toURL()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.addPaths(java.io.File, java.lang.String[], java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.addURI(java.net.URI)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.URL</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.addPaths(java.io.File, java.lang.String[], java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.create()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.createExtensible(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.addURI(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.util.Collection)</inbound>
            <feature confirmed="no">
                <name>java.net.URL.toString()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.URLClassLoader</name>
            <inbound type="class" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.delegate</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.loadClass(java.lang.String, boolean)</inbound>
            <feature confirmed="no">
                <name>java.net.URLClassLoader.URLClassLoader(java.net.URL[], java.lang.ClassLoader)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.create()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URLClassLoader.addURL(java.net.URL)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.addURI(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URLClassLoader.loadClass(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.loadClass(java.lang.String, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.URL[]</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.create()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.createExtensible(java.util.List)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util</name>
        <class confirmed="no">
            <name>java.util.ArrayList</name>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.ClassPathBuilder(java.lang.ClassLoader)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Collection</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.util.Collection)</inbound>
            <feature confirmed="no">
                <name>java.util.Collection.size()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.util.Collection)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collection.toArray(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.MaskingClassLoader.MaskingClassLoader(java.lang.ClassLoader, java.net.URL[], java.util.Collection)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Iterator</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
            <feature confirmed="no">
                <name>java.util.Iterator.hasNext()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Iterator.next()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.List</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.loadModuleDefs(java.util.Map, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.addPaths(java.io.File, java.lang.String[], java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.ClassPathBuilder(java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.create()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.createExtensible(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.urls</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
            <feature confirmed="no">
                <name>java.util.List.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.loadModuleDefs(java.util.Map, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.addPaths(java.io.File, java.lang.String[], java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addJar(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.addAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.iterator()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.size()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.create()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.createExtensible(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.toArray(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.create()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.createExtensible(java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Map</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper$PlainJarRepository.loadModuleDefs(java.util.Map, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.Properties</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getDomainRoot(com.sun.enterprise.module.bootstrap.StartupContext)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getParam(java.util.Properties, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            <feature confirmed="no">
                <name>java.util.Properties.Properties()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.clear()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.getProperty(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getParam(java.util.Properties, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.load(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.putAll(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Properties.store(java.io.OutputStream, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.logging</name>
        <class confirmed="no">
            <name>java.util.logging.Level</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsRepo()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.addURI(java.net.URI)</inbound>
            <feature confirmed="no">
                <name>java.util.logging.Level.SEVERE</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsRepo()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.addURI(java.net.URI)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.logging.Logger</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.logger</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.static {}</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.ASMainEquinox(java.util.logging.Logger, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.ASMainFelix(java.util.logging.Logger, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.ASMainHelper(java.util.logging.Logger)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsRepo()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.logger</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.ASMainKnopflerFish(java.util.logging.Logger, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findDerbyClient(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.logger</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.addURI(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.added(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.static {}</inbound>
            <feature confirmed="no">
                <name>java.util.logging.Logger.fine(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainFelix.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.addJDKToolsJar(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.getAnonymousLogger()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.static {}</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.getLogger(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.info(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMain.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainEquinox.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainKnopflerFish.launchOSGiFW()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.ASMainOSGi(java.util.logging.Logger, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainOSGi.findDerbyClient(com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.ExtensibleClassLoader(java.net.URL[], java.lang.ClassLoader, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.added(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.getJDKToolsRepo()</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ExtensibleClassLoader.addURI(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.warning(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setUpOSGiCache(java.io.File, java.io.File, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.setupSharedCL(java.lang.ClassLoader, java.util.List, java.util.List)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.regex</name>
        <class confirmed="no">
            <name>java.util.regex.Matcher</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
            <feature confirmed="no">
                <name>java.util.regex.Matcher.group(int)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.Matcher.matches()</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.regex.Pattern</name>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
            <feature confirmed="no">
                <name>java.util.regex.Pattern.compile(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.Pattern.matcher(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ASMainHelper.parseAsEnv(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">com.sun.enterprise.glassfish.bootstrap.ClassPathBuilder.addGlob(java.io.File, java.lang.String[])</inbound>
            </feature>
        </class>
    </package>
</dependencies>
